/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.5
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ModelDatabaseInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelDatabaseInfoResponse{}

// ModelDatabaseInfoResponse struct for ModelDatabaseInfoResponse
type ModelDatabaseInfoResponse struct {
	MalwareRulesUpdatedAt *time.Time `json:"malware_rules_updated_at,omitempty"`
	PostureControlsUpdatedAt *time.Time `json:"posture_controls_updated_at,omitempty"`
	SecretsRulesUpdatedAt *time.Time `json:"secrets_rules_updated_at,omitempty"`
	VulnerabilityDbUpdatedAt *time.Time `json:"vulnerability_db_updated_at,omitempty"`
}

// NewModelDatabaseInfoResponse instantiates a new ModelDatabaseInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelDatabaseInfoResponse() *ModelDatabaseInfoResponse {
	this := ModelDatabaseInfoResponse{}
	return &this
}

// NewModelDatabaseInfoResponseWithDefaults instantiates a new ModelDatabaseInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelDatabaseInfoResponseWithDefaults() *ModelDatabaseInfoResponse {
	this := ModelDatabaseInfoResponse{}
	return &this
}

// GetMalwareRulesUpdatedAt returns the MalwareRulesUpdatedAt field value if set, zero value otherwise.
func (o *ModelDatabaseInfoResponse) GetMalwareRulesUpdatedAt() time.Time {
	if o == nil || IsNil(o.MalwareRulesUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.MalwareRulesUpdatedAt
}

// GetMalwareRulesUpdatedAtOk returns a tuple with the MalwareRulesUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDatabaseInfoResponse) GetMalwareRulesUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MalwareRulesUpdatedAt) {
		return nil, false
	}
	return o.MalwareRulesUpdatedAt, true
}

// HasMalwareRulesUpdatedAt returns a boolean if a field has been set.
func (o *ModelDatabaseInfoResponse) HasMalwareRulesUpdatedAt() bool {
	if o != nil && !IsNil(o.MalwareRulesUpdatedAt) {
		return true
	}

	return false
}

// SetMalwareRulesUpdatedAt gets a reference to the given time.Time and assigns it to the MalwareRulesUpdatedAt field.
func (o *ModelDatabaseInfoResponse) SetMalwareRulesUpdatedAt(v time.Time) {
	o.MalwareRulesUpdatedAt = &v
}

// GetPostureControlsUpdatedAt returns the PostureControlsUpdatedAt field value if set, zero value otherwise.
func (o *ModelDatabaseInfoResponse) GetPostureControlsUpdatedAt() time.Time {
	if o == nil || IsNil(o.PostureControlsUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.PostureControlsUpdatedAt
}

// GetPostureControlsUpdatedAtOk returns a tuple with the PostureControlsUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDatabaseInfoResponse) GetPostureControlsUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PostureControlsUpdatedAt) {
		return nil, false
	}
	return o.PostureControlsUpdatedAt, true
}

// HasPostureControlsUpdatedAt returns a boolean if a field has been set.
func (o *ModelDatabaseInfoResponse) HasPostureControlsUpdatedAt() bool {
	if o != nil && !IsNil(o.PostureControlsUpdatedAt) {
		return true
	}

	return false
}

// SetPostureControlsUpdatedAt gets a reference to the given time.Time and assigns it to the PostureControlsUpdatedAt field.
func (o *ModelDatabaseInfoResponse) SetPostureControlsUpdatedAt(v time.Time) {
	o.PostureControlsUpdatedAt = &v
}

// GetSecretsRulesUpdatedAt returns the SecretsRulesUpdatedAt field value if set, zero value otherwise.
func (o *ModelDatabaseInfoResponse) GetSecretsRulesUpdatedAt() time.Time {
	if o == nil || IsNil(o.SecretsRulesUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.SecretsRulesUpdatedAt
}

// GetSecretsRulesUpdatedAtOk returns a tuple with the SecretsRulesUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDatabaseInfoResponse) GetSecretsRulesUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SecretsRulesUpdatedAt) {
		return nil, false
	}
	return o.SecretsRulesUpdatedAt, true
}

// HasSecretsRulesUpdatedAt returns a boolean if a field has been set.
func (o *ModelDatabaseInfoResponse) HasSecretsRulesUpdatedAt() bool {
	if o != nil && !IsNil(o.SecretsRulesUpdatedAt) {
		return true
	}

	return false
}

// SetSecretsRulesUpdatedAt gets a reference to the given time.Time and assigns it to the SecretsRulesUpdatedAt field.
func (o *ModelDatabaseInfoResponse) SetSecretsRulesUpdatedAt(v time.Time) {
	o.SecretsRulesUpdatedAt = &v
}

// GetVulnerabilityDbUpdatedAt returns the VulnerabilityDbUpdatedAt field value if set, zero value otherwise.
func (o *ModelDatabaseInfoResponse) GetVulnerabilityDbUpdatedAt() time.Time {
	if o == nil || IsNil(o.VulnerabilityDbUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.VulnerabilityDbUpdatedAt
}

// GetVulnerabilityDbUpdatedAtOk returns a tuple with the VulnerabilityDbUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDatabaseInfoResponse) GetVulnerabilityDbUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VulnerabilityDbUpdatedAt) {
		return nil, false
	}
	return o.VulnerabilityDbUpdatedAt, true
}

// HasVulnerabilityDbUpdatedAt returns a boolean if a field has been set.
func (o *ModelDatabaseInfoResponse) HasVulnerabilityDbUpdatedAt() bool {
	if o != nil && !IsNil(o.VulnerabilityDbUpdatedAt) {
		return true
	}

	return false
}

// SetVulnerabilityDbUpdatedAt gets a reference to the given time.Time and assigns it to the VulnerabilityDbUpdatedAt field.
func (o *ModelDatabaseInfoResponse) SetVulnerabilityDbUpdatedAt(v time.Time) {
	o.VulnerabilityDbUpdatedAt = &v
}

func (o ModelDatabaseInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelDatabaseInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MalwareRulesUpdatedAt) {
		toSerialize["malware_rules_updated_at"] = o.MalwareRulesUpdatedAt
	}
	if !IsNil(o.PostureControlsUpdatedAt) {
		toSerialize["posture_controls_updated_at"] = o.PostureControlsUpdatedAt
	}
	if !IsNil(o.SecretsRulesUpdatedAt) {
		toSerialize["secrets_rules_updated_at"] = o.SecretsRulesUpdatedAt
	}
	if !IsNil(o.VulnerabilityDbUpdatedAt) {
		toSerialize["vulnerability_db_updated_at"] = o.VulnerabilityDbUpdatedAt
	}
	return toSerialize, nil
}

type NullableModelDatabaseInfoResponse struct {
	value *ModelDatabaseInfoResponse
	isSet bool
}

func (v NullableModelDatabaseInfoResponse) Get() *ModelDatabaseInfoResponse {
	return v.value
}

func (v *NullableModelDatabaseInfoResponse) Set(val *ModelDatabaseInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelDatabaseInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelDatabaseInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelDatabaseInfoResponse(val *ModelDatabaseInfoResponse) *NullableModelDatabaseInfoResponse {
	return &NullableModelDatabaseInfoResponse{value: val, isSet: true}
}

func (v NullableModelDatabaseInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelDatabaseInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


