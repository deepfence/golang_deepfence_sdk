/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelSecretScanTriggerReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSecretScanTriggerReq{}

// ModelSecretScanTriggerReq struct for ModelSecretScanTriggerReq
type ModelSecretScanTriggerReq struct {
	Filters ModelScanFilter `json:"filters"`
	NodeIds []ModelNodeIdentifier `json:"node_ids"`
}

// NewModelSecretScanTriggerReq instantiates a new ModelSecretScanTriggerReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSecretScanTriggerReq(filters ModelScanFilter, nodeIds []ModelNodeIdentifier) *ModelSecretScanTriggerReq {
	this := ModelSecretScanTriggerReq{}
	this.Filters = filters
	this.NodeIds = nodeIds
	return &this
}

// NewModelSecretScanTriggerReqWithDefaults instantiates a new ModelSecretScanTriggerReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSecretScanTriggerReqWithDefaults() *ModelSecretScanTriggerReq {
	this := ModelSecretScanTriggerReq{}
	return &this
}

// GetFilters returns the Filters field value
func (o *ModelSecretScanTriggerReq) GetFilters() ModelScanFilter {
	if o == nil {
		var ret ModelScanFilter
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *ModelSecretScanTriggerReq) GetFiltersOk() (*ModelScanFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *ModelSecretScanTriggerReq) SetFilters(v ModelScanFilter) {
	o.Filters = v
}

// GetNodeIds returns the NodeIds field value
// If the value is explicit nil, the zero value for []ModelNodeIdentifier will be returned
func (o *ModelSecretScanTriggerReq) GetNodeIds() []ModelNodeIdentifier {
	if o == nil {
		var ret []ModelNodeIdentifier
		return ret
	}

	return o.NodeIds
}

// GetNodeIdsOk returns a tuple with the NodeIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSecretScanTriggerReq) GetNodeIdsOk() ([]ModelNodeIdentifier, bool) {
	if o == nil || isNil(o.NodeIds) {
		return nil, false
	}
	return o.NodeIds, true
}

// SetNodeIds sets field value
func (o *ModelSecretScanTriggerReq) SetNodeIds(v []ModelNodeIdentifier) {
	o.NodeIds = v
}

func (o ModelSecretScanTriggerReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSecretScanTriggerReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filters"] = o.Filters
	if o.NodeIds != nil {
		toSerialize["node_ids"] = o.NodeIds
	}
	return toSerialize, nil
}

type NullableModelSecretScanTriggerReq struct {
	value *ModelSecretScanTriggerReq
	isSet bool
}

func (v NullableModelSecretScanTriggerReq) Get() *ModelSecretScanTriggerReq {
	return v.value
}

func (v *NullableModelSecretScanTriggerReq) Set(val *ModelSecretScanTriggerReq) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSecretScanTriggerReq) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSecretScanTriggerReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSecretScanTriggerReq(val *ModelSecretScanTriggerReq) *NullableModelSecretScanTriggerReq {
	return &NullableModelSecretScanTriggerReq{value: val, isSet: true}
}

func (v NullableModelSecretScanTriggerReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSecretScanTriggerReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


