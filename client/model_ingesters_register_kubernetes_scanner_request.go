/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the IngestersRegisterKubernetesScannerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestersRegisterKubernetesScannerRequest{}

// IngestersRegisterKubernetesScannerRequest struct for IngestersRegisterKubernetesScannerRequest
type IngestersRegisterKubernetesScannerRequest struct {
	KubernetesClusterName *string `json:"kubernetes_cluster_name,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
}

// NewIngestersRegisterKubernetesScannerRequest instantiates a new IngestersRegisterKubernetesScannerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestersRegisterKubernetesScannerRequest() *IngestersRegisterKubernetesScannerRequest {
	this := IngestersRegisterKubernetesScannerRequest{}
	return &this
}

// NewIngestersRegisterKubernetesScannerRequestWithDefaults instantiates a new IngestersRegisterKubernetesScannerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestersRegisterKubernetesScannerRequestWithDefaults() *IngestersRegisterKubernetesScannerRequest {
	this := IngestersRegisterKubernetesScannerRequest{}
	return &this
}

// GetKubernetesClusterName returns the KubernetesClusterName field value if set, zero value otherwise.
func (o *IngestersRegisterKubernetesScannerRequest) GetKubernetesClusterName() string {
	if o == nil || isNil(o.KubernetesClusterName) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersRegisterKubernetesScannerRequest) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.KubernetesClusterName) {
		return nil, false
	}
	return o.KubernetesClusterName, true
}

// HasKubernetesClusterName returns a boolean if a field has been set.
func (o *IngestersRegisterKubernetesScannerRequest) HasKubernetesClusterName() bool {
	if o != nil && !isNil(o.KubernetesClusterName) {
		return true
	}

	return false
}

// SetKubernetesClusterName gets a reference to the given string and assigns it to the KubernetesClusterName field.
func (o *IngestersRegisterKubernetesScannerRequest) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *IngestersRegisterKubernetesScannerRequest) GetNodeId() string {
	if o == nil || isNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersRegisterKubernetesScannerRequest) GetNodeIdOk() (*string, bool) {
	if o == nil || isNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *IngestersRegisterKubernetesScannerRequest) HasNodeId() bool {
	if o != nil && !isNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *IngestersRegisterKubernetesScannerRequest) SetNodeId(v string) {
	o.NodeId = &v
}

func (o IngestersRegisterKubernetesScannerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestersRegisterKubernetesScannerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KubernetesClusterName) {
		toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	}
	if !isNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	return toSerialize, nil
}

type NullableIngestersRegisterKubernetesScannerRequest struct {
	value *IngestersRegisterKubernetesScannerRequest
	isSet bool
}

func (v NullableIngestersRegisterKubernetesScannerRequest) Get() *IngestersRegisterKubernetesScannerRequest {
	return v.value
}

func (v *NullableIngestersRegisterKubernetesScannerRequest) Set(val *IngestersRegisterKubernetesScannerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestersRegisterKubernetesScannerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestersRegisterKubernetesScannerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestersRegisterKubernetesScannerRequest(val *IngestersRegisterKubernetesScannerRequest) *NullableIngestersRegisterKubernetesScannerRequest {
	return &NullableIngestersRegisterKubernetesScannerRequest{value: val, isSet: true}
}

func (v NullableIngestersRegisterKubernetesScannerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestersRegisterKubernetesScannerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


