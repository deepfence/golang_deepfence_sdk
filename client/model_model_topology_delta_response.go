/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelTopologyDeltaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelTopologyDeltaResponse{}

// ModelTopologyDeltaResponse struct for ModelTopologyDeltaResponse
type ModelTopologyDeltaResponse struct {
	AdditionTimestamp *int64 `json:"addition_timestamp,omitempty"`
	Additons []ModelNodeIdentifier `json:"additons,omitempty"`
	DeletionTimestamp *int64 `json:"deletion_timestamp,omitempty"`
	Deletions []ModelNodeIdentifier `json:"deletions,omitempty"`
}

// NewModelTopologyDeltaResponse instantiates a new ModelTopologyDeltaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelTopologyDeltaResponse() *ModelTopologyDeltaResponse {
	this := ModelTopologyDeltaResponse{}
	return &this
}

// NewModelTopologyDeltaResponseWithDefaults instantiates a new ModelTopologyDeltaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelTopologyDeltaResponseWithDefaults() *ModelTopologyDeltaResponse {
	this := ModelTopologyDeltaResponse{}
	return &this
}

// GetAdditionTimestamp returns the AdditionTimestamp field value if set, zero value otherwise.
func (o *ModelTopologyDeltaResponse) GetAdditionTimestamp() int64 {
	if o == nil || IsNil(o.AdditionTimestamp) {
		var ret int64
		return ret
	}
	return *o.AdditionTimestamp
}

// GetAdditionTimestampOk returns a tuple with the AdditionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTopologyDeltaResponse) GetAdditionTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.AdditionTimestamp) {
		return nil, false
	}
	return o.AdditionTimestamp, true
}

// HasAdditionTimestamp returns a boolean if a field has been set.
func (o *ModelTopologyDeltaResponse) HasAdditionTimestamp() bool {
	if o != nil && !IsNil(o.AdditionTimestamp) {
		return true
	}

	return false
}

// SetAdditionTimestamp gets a reference to the given int64 and assigns it to the AdditionTimestamp field.
func (o *ModelTopologyDeltaResponse) SetAdditionTimestamp(v int64) {
	o.AdditionTimestamp = &v
}

// GetAdditons returns the Additons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTopologyDeltaResponse) GetAdditons() []ModelNodeIdentifier {
	if o == nil {
		var ret []ModelNodeIdentifier
		return ret
	}
	return o.Additons
}

// GetAdditonsOk returns a tuple with the Additons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTopologyDeltaResponse) GetAdditonsOk() ([]ModelNodeIdentifier, bool) {
	if o == nil || IsNil(o.Additons) {
		return nil, false
	}
	return o.Additons, true
}

// HasAdditons returns a boolean if a field has been set.
func (o *ModelTopologyDeltaResponse) HasAdditons() bool {
	if o != nil && !IsNil(o.Additons) {
		return true
	}

	return false
}

// SetAdditons gets a reference to the given []ModelNodeIdentifier and assigns it to the Additons field.
func (o *ModelTopologyDeltaResponse) SetAdditons(v []ModelNodeIdentifier) {
	o.Additons = v
}

// GetDeletionTimestamp returns the DeletionTimestamp field value if set, zero value otherwise.
func (o *ModelTopologyDeltaResponse) GetDeletionTimestamp() int64 {
	if o == nil || IsNil(o.DeletionTimestamp) {
		var ret int64
		return ret
	}
	return *o.DeletionTimestamp
}

// GetDeletionTimestampOk returns a tuple with the DeletionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTopologyDeltaResponse) GetDeletionTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.DeletionTimestamp) {
		return nil, false
	}
	return o.DeletionTimestamp, true
}

// HasDeletionTimestamp returns a boolean if a field has been set.
func (o *ModelTopologyDeltaResponse) HasDeletionTimestamp() bool {
	if o != nil && !IsNil(o.DeletionTimestamp) {
		return true
	}

	return false
}

// SetDeletionTimestamp gets a reference to the given int64 and assigns it to the DeletionTimestamp field.
func (o *ModelTopologyDeltaResponse) SetDeletionTimestamp(v int64) {
	o.DeletionTimestamp = &v
}

// GetDeletions returns the Deletions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTopologyDeltaResponse) GetDeletions() []ModelNodeIdentifier {
	if o == nil {
		var ret []ModelNodeIdentifier
		return ret
	}
	return o.Deletions
}

// GetDeletionsOk returns a tuple with the Deletions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTopologyDeltaResponse) GetDeletionsOk() ([]ModelNodeIdentifier, bool) {
	if o == nil || IsNil(o.Deletions) {
		return nil, false
	}
	return o.Deletions, true
}

// HasDeletions returns a boolean if a field has been set.
func (o *ModelTopologyDeltaResponse) HasDeletions() bool {
	if o != nil && !IsNil(o.Deletions) {
		return true
	}

	return false
}

// SetDeletions gets a reference to the given []ModelNodeIdentifier and assigns it to the Deletions field.
func (o *ModelTopologyDeltaResponse) SetDeletions(v []ModelNodeIdentifier) {
	o.Deletions = v
}

func (o ModelTopologyDeltaResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelTopologyDeltaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionTimestamp) {
		toSerialize["addition_timestamp"] = o.AdditionTimestamp
	}
	if o.Additons != nil {
		toSerialize["additons"] = o.Additons
	}
	if !IsNil(o.DeletionTimestamp) {
		toSerialize["deletion_timestamp"] = o.DeletionTimestamp
	}
	if o.Deletions != nil {
		toSerialize["deletions"] = o.Deletions
	}
	return toSerialize, nil
}

type NullableModelTopologyDeltaResponse struct {
	value *ModelTopologyDeltaResponse
	isSet bool
}

func (v NullableModelTopologyDeltaResponse) Get() *ModelTopologyDeltaResponse {
	return v.value
}

func (v *NullableModelTopologyDeltaResponse) Set(val *ModelTopologyDeltaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelTopologyDeltaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelTopologyDeltaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelTopologyDeltaResponse(val *ModelTopologyDeltaResponse) *NullableModelTopologyDeltaResponse {
	return &NullableModelTopologyDeltaResponse{value: val, isSet: true}
}

func (v NullableModelTopologyDeltaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelTopologyDeltaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


