/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.3
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelComplianceScanResultsGroupResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelComplianceScanResultsGroupResp{}

// ModelComplianceScanResultsGroupResp struct for ModelComplianceScanResultsGroupResp
type ModelComplianceScanResultsGroupResp struct {
	Groups map[string]ModelComplianceScanResultControlGroup `json:"groups,omitempty"`
}

// NewModelComplianceScanResultsGroupResp instantiates a new ModelComplianceScanResultsGroupResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelComplianceScanResultsGroupResp() *ModelComplianceScanResultsGroupResp {
	this := ModelComplianceScanResultsGroupResp{}
	return &this
}

// NewModelComplianceScanResultsGroupRespWithDefaults instantiates a new ModelComplianceScanResultsGroupResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelComplianceScanResultsGroupRespWithDefaults() *ModelComplianceScanResultsGroupResp {
	this := ModelComplianceScanResultsGroupResp{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelComplianceScanResultsGroupResp) GetGroups() map[string]ModelComplianceScanResultControlGroup {
	if o == nil {
		var ret map[string]ModelComplianceScanResultControlGroup
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelComplianceScanResultsGroupResp) GetGroupsOk() (*map[string]ModelComplianceScanResultControlGroup, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return &o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *ModelComplianceScanResultsGroupResp) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given map[string]ModelComplianceScanResultControlGroup and assigns it to the Groups field.
func (o *ModelComplianceScanResultsGroupResp) SetGroups(v map[string]ModelComplianceScanResultControlGroup) {
	o.Groups = v
}

func (o ModelComplianceScanResultsGroupResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelComplianceScanResultsGroupResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	return toSerialize, nil
}

type NullableModelComplianceScanResultsGroupResp struct {
	value *ModelComplianceScanResultsGroupResp
	isSet bool
}

func (v NullableModelComplianceScanResultsGroupResp) Get() *ModelComplianceScanResultsGroupResp {
	return v.value
}

func (v *NullableModelComplianceScanResultsGroupResp) Set(val *ModelComplianceScanResultsGroupResp) {
	v.value = val
	v.isSet = true
}

func (v NullableModelComplianceScanResultsGroupResp) IsSet() bool {
	return v.isSet
}

func (v *NullableModelComplianceScanResultsGroupResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelComplianceScanResultsGroupResp(val *ModelComplianceScanResultsGroupResp) *NullableModelComplianceScanResultsGroupResp {
	return &NullableModelComplianceScanResultsGroupResp{value: val, isSet: true}
}

func (v NullableModelComplianceScanResultsGroupResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelComplianceScanResultsGroupResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


