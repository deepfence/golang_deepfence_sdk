/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelVulnerability{}

// ModelVulnerability struct for ModelVulnerability
type ModelVulnerability struct {
	CveAttackVector string `json:"cve_attack_vector"`
	CveCausedByPackage string `json:"cve_caused_by_package"`
	CveCausedByPackagePath string `json:"cve_caused_by_package_path"`
	CveContainerLayer string `json:"cve_container_layer"`
	CveCvssScore float32 `json:"cve_cvss_score"`
	CveDescription string `json:"cve_description"`
	CveFixedIn string `json:"cve_fixed_in"`
	CveId string `json:"cve_id"`
	CveLink string `json:"cve_link"`
	CveOverallScore float32 `json:"cve_overall_score"`
	CveSeverity string `json:"cve_severity"`
	CveType string `json:"cve_type"`
	ExploitPoc string `json:"exploit_poc"`
	HasLiveConnection bool `json:"has_live_connection"`
	Masked bool `json:"masked"`
	NodeId string `json:"node_id"`
	ParsedAttackVector string `json:"parsed_attack_vector"`
	Resources []ModelBasicNode `json:"resources,omitempty"`
	RuleId string `json:"rule_id"`
	UpdatedAt int32 `json:"updated_at"`
	Urls []interface{} `json:"urls"`
}

type _ModelVulnerability ModelVulnerability

// NewModelVulnerability instantiates a new ModelVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelVulnerability(cveAttackVector string, cveCausedByPackage string, cveCausedByPackagePath string, cveContainerLayer string, cveCvssScore float32, cveDescription string, cveFixedIn string, cveId string, cveLink string, cveOverallScore float32, cveSeverity string, cveType string, exploitPoc string, hasLiveConnection bool, masked bool, nodeId string, parsedAttackVector string, ruleId string, updatedAt int32, urls []interface{}) *ModelVulnerability {
	this := ModelVulnerability{}
	this.CveAttackVector = cveAttackVector
	this.CveCausedByPackage = cveCausedByPackage
	this.CveCausedByPackagePath = cveCausedByPackagePath
	this.CveContainerLayer = cveContainerLayer
	this.CveCvssScore = cveCvssScore
	this.CveDescription = cveDescription
	this.CveFixedIn = cveFixedIn
	this.CveId = cveId
	this.CveLink = cveLink
	this.CveOverallScore = cveOverallScore
	this.CveSeverity = cveSeverity
	this.CveType = cveType
	this.ExploitPoc = exploitPoc
	this.HasLiveConnection = hasLiveConnection
	this.Masked = masked
	this.NodeId = nodeId
	this.ParsedAttackVector = parsedAttackVector
	this.RuleId = ruleId
	this.UpdatedAt = updatedAt
	this.Urls = urls
	return &this
}

// NewModelVulnerabilityWithDefaults instantiates a new ModelVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelVulnerabilityWithDefaults() *ModelVulnerability {
	this := ModelVulnerability{}
	return &this
}

// GetCveAttackVector returns the CveAttackVector field value
func (o *ModelVulnerability) GetCveAttackVector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveAttackVector
}

// GetCveAttackVectorOk returns a tuple with the CveAttackVector field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveAttackVectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveAttackVector, true
}

// SetCveAttackVector sets field value
func (o *ModelVulnerability) SetCveAttackVector(v string) {
	o.CveAttackVector = v
}

// GetCveCausedByPackage returns the CveCausedByPackage field value
func (o *ModelVulnerability) GetCveCausedByPackage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveCausedByPackage
}

// GetCveCausedByPackageOk returns a tuple with the CveCausedByPackage field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveCausedByPackageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveCausedByPackage, true
}

// SetCveCausedByPackage sets field value
func (o *ModelVulnerability) SetCveCausedByPackage(v string) {
	o.CveCausedByPackage = v
}

// GetCveCausedByPackagePath returns the CveCausedByPackagePath field value
func (o *ModelVulnerability) GetCveCausedByPackagePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveCausedByPackagePath
}

// GetCveCausedByPackagePathOk returns a tuple with the CveCausedByPackagePath field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveCausedByPackagePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveCausedByPackagePath, true
}

// SetCveCausedByPackagePath sets field value
func (o *ModelVulnerability) SetCveCausedByPackagePath(v string) {
	o.CveCausedByPackagePath = v
}

// GetCveContainerLayer returns the CveContainerLayer field value
func (o *ModelVulnerability) GetCveContainerLayer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveContainerLayer
}

// GetCveContainerLayerOk returns a tuple with the CveContainerLayer field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveContainerLayerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveContainerLayer, true
}

// SetCveContainerLayer sets field value
func (o *ModelVulnerability) SetCveContainerLayer(v string) {
	o.CveContainerLayer = v
}

// GetCveCvssScore returns the CveCvssScore field value
func (o *ModelVulnerability) GetCveCvssScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CveCvssScore
}

// GetCveCvssScoreOk returns a tuple with the CveCvssScore field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveCvssScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveCvssScore, true
}

// SetCveCvssScore sets field value
func (o *ModelVulnerability) SetCveCvssScore(v float32) {
	o.CveCvssScore = v
}

// GetCveDescription returns the CveDescription field value
func (o *ModelVulnerability) GetCveDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveDescription
}

// GetCveDescriptionOk returns a tuple with the CveDescription field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveDescription, true
}

// SetCveDescription sets field value
func (o *ModelVulnerability) SetCveDescription(v string) {
	o.CveDescription = v
}

// GetCveFixedIn returns the CveFixedIn field value
func (o *ModelVulnerability) GetCveFixedIn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveFixedIn
}

// GetCveFixedInOk returns a tuple with the CveFixedIn field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveFixedInOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveFixedIn, true
}

// SetCveFixedIn sets field value
func (o *ModelVulnerability) SetCveFixedIn(v string) {
	o.CveFixedIn = v
}

// GetCveId returns the CveId field value
func (o *ModelVulnerability) GetCveId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveId
}

// GetCveIdOk returns a tuple with the CveId field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveId, true
}

// SetCveId sets field value
func (o *ModelVulnerability) SetCveId(v string) {
	o.CveId = v
}

// GetCveLink returns the CveLink field value
func (o *ModelVulnerability) GetCveLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveLink
}

// GetCveLinkOk returns a tuple with the CveLink field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveLink, true
}

// SetCveLink sets field value
func (o *ModelVulnerability) SetCveLink(v string) {
	o.CveLink = v
}

// GetCveOverallScore returns the CveOverallScore field value
func (o *ModelVulnerability) GetCveOverallScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CveOverallScore
}

// GetCveOverallScoreOk returns a tuple with the CveOverallScore field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveOverallScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveOverallScore, true
}

// SetCveOverallScore sets field value
func (o *ModelVulnerability) SetCveOverallScore(v float32) {
	o.CveOverallScore = v
}

// GetCveSeverity returns the CveSeverity field value
func (o *ModelVulnerability) GetCveSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveSeverity
}

// GetCveSeverityOk returns a tuple with the CveSeverity field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveSeverity, true
}

// SetCveSeverity sets field value
func (o *ModelVulnerability) SetCveSeverity(v string) {
	o.CveSeverity = v
}

// GetCveType returns the CveType field value
func (o *ModelVulnerability) GetCveType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveType
}

// GetCveTypeOk returns a tuple with the CveType field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetCveTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveType, true
}

// SetCveType sets field value
func (o *ModelVulnerability) SetCveType(v string) {
	o.CveType = v
}

// GetExploitPoc returns the ExploitPoc field value
func (o *ModelVulnerability) GetExploitPoc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExploitPoc
}

// GetExploitPocOk returns a tuple with the ExploitPoc field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetExploitPocOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExploitPoc, true
}

// SetExploitPoc sets field value
func (o *ModelVulnerability) SetExploitPoc(v string) {
	o.ExploitPoc = v
}

// GetHasLiveConnection returns the HasLiveConnection field value
func (o *ModelVulnerability) GetHasLiveConnection() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasLiveConnection
}

// GetHasLiveConnectionOk returns a tuple with the HasLiveConnection field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetHasLiveConnectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasLiveConnection, true
}

// SetHasLiveConnection sets field value
func (o *ModelVulnerability) SetHasLiveConnection(v bool) {
	o.HasLiveConnection = v
}

// GetMasked returns the Masked field value
func (o *ModelVulnerability) GetMasked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetMaskedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Masked, true
}

// SetMasked sets field value
func (o *ModelVulnerability) SetMasked(v bool) {
	o.Masked = v
}

// GetNodeId returns the NodeId field value
func (o *ModelVulnerability) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelVulnerability) SetNodeId(v string) {
	o.NodeId = v
}

// GetParsedAttackVector returns the ParsedAttackVector field value
func (o *ModelVulnerability) GetParsedAttackVector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParsedAttackVector
}

// GetParsedAttackVectorOk returns a tuple with the ParsedAttackVector field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetParsedAttackVectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParsedAttackVector, true
}

// SetParsedAttackVector sets field value
func (o *ModelVulnerability) SetParsedAttackVector(v string) {
	o.ParsedAttackVector = v
}

// GetResources returns the Resources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelVulnerability) GetResources() []ModelBasicNode {
	if o == nil {
		var ret []ModelBasicNode
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelVulnerability) GetResourcesOk() ([]ModelBasicNode, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ModelVulnerability) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ModelBasicNode and assigns it to the Resources field.
func (o *ModelVulnerability) SetResources(v []ModelBasicNode) {
	o.Resources = v
}

// GetRuleId returns the RuleId field value
func (o *ModelVulnerability) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ModelVulnerability) SetRuleId(v string) {
	o.RuleId = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ModelVulnerability) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelVulnerability) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ModelVulnerability) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

// GetUrls returns the Urls field value
// If the value is explicit nil, the zero value for []interface{} will be returned
func (o *ModelVulnerability) GetUrls() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelVulnerability) GetUrlsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// SetUrls sets field value
func (o *ModelVulnerability) SetUrls(v []interface{}) {
	o.Urls = v
}

func (o ModelVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cve_attack_vector"] = o.CveAttackVector
	toSerialize["cve_caused_by_package"] = o.CveCausedByPackage
	toSerialize["cve_caused_by_package_path"] = o.CveCausedByPackagePath
	toSerialize["cve_container_layer"] = o.CveContainerLayer
	toSerialize["cve_cvss_score"] = o.CveCvssScore
	toSerialize["cve_description"] = o.CveDescription
	toSerialize["cve_fixed_in"] = o.CveFixedIn
	toSerialize["cve_id"] = o.CveId
	toSerialize["cve_link"] = o.CveLink
	toSerialize["cve_overall_score"] = o.CveOverallScore
	toSerialize["cve_severity"] = o.CveSeverity
	toSerialize["cve_type"] = o.CveType
	toSerialize["exploit_poc"] = o.ExploitPoc
	toSerialize["has_live_connection"] = o.HasLiveConnection
	toSerialize["masked"] = o.Masked
	toSerialize["node_id"] = o.NodeId
	toSerialize["parsed_attack_vector"] = o.ParsedAttackVector
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	toSerialize["rule_id"] = o.RuleId
	toSerialize["updated_at"] = o.UpdatedAt
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

func (o *ModelVulnerability) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cve_attack_vector",
		"cve_caused_by_package",
		"cve_caused_by_package_path",
		"cve_container_layer",
		"cve_cvss_score",
		"cve_description",
		"cve_fixed_in",
		"cve_id",
		"cve_link",
		"cve_overall_score",
		"cve_severity",
		"cve_type",
		"exploit_poc",
		"has_live_connection",
		"masked",
		"node_id",
		"parsed_attack_vector",
		"rule_id",
		"updated_at",
		"urls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelVulnerability := _ModelVulnerability{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelVulnerability)

	if err != nil {
		return err
	}

	*o = ModelVulnerability(varModelVulnerability)

	return err
}

type NullableModelVulnerability struct {
	value *ModelVulnerability
	isSet bool
}

func (v NullableModelVulnerability) Get() *ModelVulnerability {
	return v.value
}

func (v *NullableModelVulnerability) Set(val *ModelVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableModelVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableModelVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelVulnerability(val *ModelVulnerability) *NullableModelVulnerability {
	return &NullableModelVulnerability{value: val, isSet: true}
}

func (v NullableModelVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


