/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelComplianceScanTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelComplianceScanTrigger{}

// ModelComplianceScanTrigger struct for ModelComplianceScanTrigger
type ModelComplianceScanTrigger struct {
	BenchmarkTypes []string `json:"benchmark_types"`
	NodeId string `json:"node_id"`
	NodeType string `json:"node_type"`
}

// NewModelComplianceScanTrigger instantiates a new ModelComplianceScanTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelComplianceScanTrigger(benchmarkTypes []string, nodeId string, nodeType string) *ModelComplianceScanTrigger {
	this := ModelComplianceScanTrigger{}
	this.BenchmarkTypes = benchmarkTypes
	this.NodeId = nodeId
	this.NodeType = nodeType
	return &this
}

// NewModelComplianceScanTriggerWithDefaults instantiates a new ModelComplianceScanTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelComplianceScanTriggerWithDefaults() *ModelComplianceScanTrigger {
	this := ModelComplianceScanTrigger{}
	return &this
}

// GetBenchmarkTypes returns the BenchmarkTypes field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelComplianceScanTrigger) GetBenchmarkTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BenchmarkTypes
}

// GetBenchmarkTypesOk returns a tuple with the BenchmarkTypes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelComplianceScanTrigger) GetBenchmarkTypesOk() ([]string, bool) {
	if o == nil || isNil(o.BenchmarkTypes) {
		return nil, false
	}
	return o.BenchmarkTypes, true
}

// SetBenchmarkTypes sets field value
func (o *ModelComplianceScanTrigger) SetBenchmarkTypes(v []string) {
	o.BenchmarkTypes = v
}

// GetNodeId returns the NodeId field value
func (o *ModelComplianceScanTrigger) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelComplianceScanTrigger) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelComplianceScanTrigger) SetNodeId(v string) {
	o.NodeId = v
}

// GetNodeType returns the NodeType field value
func (o *ModelComplianceScanTrigger) GetNodeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value
// and a boolean to check if the value has been set.
func (o *ModelComplianceScanTrigger) GetNodeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeType, true
}

// SetNodeType sets field value
func (o *ModelComplianceScanTrigger) SetNodeType(v string) {
	o.NodeType = v
}

func (o ModelComplianceScanTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelComplianceScanTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BenchmarkTypes != nil {
		toSerialize["benchmark_types"] = o.BenchmarkTypes
	}
	toSerialize["node_id"] = o.NodeId
	toSerialize["node_type"] = o.NodeType
	return toSerialize, nil
}

type NullableModelComplianceScanTrigger struct {
	value *ModelComplianceScanTrigger
	isSet bool
}

func (v NullableModelComplianceScanTrigger) Get() *ModelComplianceScanTrigger {
	return v.value
}

func (v *NullableModelComplianceScanTrigger) Set(val *ModelComplianceScanTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableModelComplianceScanTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableModelComplianceScanTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelComplianceScanTrigger(val *ModelComplianceScanTrigger) *NullableModelComplianceScanTrigger {
	return &NullableModelComplianceScanTrigger{value: val, isSet: true}
}

func (v NullableModelComplianceScanTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelComplianceScanTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


