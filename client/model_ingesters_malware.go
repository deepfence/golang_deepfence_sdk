/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the IngestersMalware type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestersMalware{}

// IngestersMalware struct for IngestersMalware
type IngestersMalware struct {
	Timestamp *time.Time `json:"@timestamp,omitempty"`
	Class *string `json:"Class,omitempty"`
	CompleteFilename *string `json:"CompleteFilename,omitempty"`
	FileSevScore *float32 `json:"FileSevScore,omitempty"`
	FileSeverity *string `json:"FileSeverity,omitempty"`
	ImageLayerId *string `json:"ImageLayerId,omitempty"`
	Meta []string `json:"Meta,omitempty"`
	MetaRules *map[string]string `json:"Meta Rules,omitempty"`
	RuleName *string `json:"RuleName,omitempty"`
	SeverityScore *float32 `json:"SeverityScore,omitempty"`
	StringsToMatch []string `json:"StringsToMatch,omitempty"`
	Summary *string `json:"Summary,omitempty"`
	ContainerName *string `json:"container_name,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	KubernetesClusterName *string `json:"kubernetes_cluster_name,omitempty"`
	Masked *string `json:"masked,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodeType *string `json:"node_type,omitempty"`
	ScanId *string `json:"scan_id,omitempty"`
}

// NewIngestersMalware instantiates a new IngestersMalware object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestersMalware() *IngestersMalware {
	this := IngestersMalware{}
	return &this
}

// NewIngestersMalwareWithDefaults instantiates a new IngestersMalware object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestersMalwareWithDefaults() *IngestersMalware {
	this := IngestersMalware{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *IngestersMalware) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *IngestersMalware) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *IngestersMalware) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *IngestersMalware) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *IngestersMalware) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *IngestersMalware) SetClass(v string) {
	o.Class = &v
}

// GetCompleteFilename returns the CompleteFilename field value if set, zero value otherwise.
func (o *IngestersMalware) GetCompleteFilename() string {
	if o == nil || IsNil(o.CompleteFilename) {
		var ret string
		return ret
	}
	return *o.CompleteFilename
}

// GetCompleteFilenameOk returns a tuple with the CompleteFilename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetCompleteFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.CompleteFilename) {
		return nil, false
	}
	return o.CompleteFilename, true
}

// HasCompleteFilename returns a boolean if a field has been set.
func (o *IngestersMalware) HasCompleteFilename() bool {
	if o != nil && !IsNil(o.CompleteFilename) {
		return true
	}

	return false
}

// SetCompleteFilename gets a reference to the given string and assigns it to the CompleteFilename field.
func (o *IngestersMalware) SetCompleteFilename(v string) {
	o.CompleteFilename = &v
}

// GetFileSevScore returns the FileSevScore field value if set, zero value otherwise.
func (o *IngestersMalware) GetFileSevScore() float32 {
	if o == nil || IsNil(o.FileSevScore) {
		var ret float32
		return ret
	}
	return *o.FileSevScore
}

// GetFileSevScoreOk returns a tuple with the FileSevScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetFileSevScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.FileSevScore) {
		return nil, false
	}
	return o.FileSevScore, true
}

// HasFileSevScore returns a boolean if a field has been set.
func (o *IngestersMalware) HasFileSevScore() bool {
	if o != nil && !IsNil(o.FileSevScore) {
		return true
	}

	return false
}

// SetFileSevScore gets a reference to the given float32 and assigns it to the FileSevScore field.
func (o *IngestersMalware) SetFileSevScore(v float32) {
	o.FileSevScore = &v
}

// GetFileSeverity returns the FileSeverity field value if set, zero value otherwise.
func (o *IngestersMalware) GetFileSeverity() string {
	if o == nil || IsNil(o.FileSeverity) {
		var ret string
		return ret
	}
	return *o.FileSeverity
}

// GetFileSeverityOk returns a tuple with the FileSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetFileSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.FileSeverity) {
		return nil, false
	}
	return o.FileSeverity, true
}

// HasFileSeverity returns a boolean if a field has been set.
func (o *IngestersMalware) HasFileSeverity() bool {
	if o != nil && !IsNil(o.FileSeverity) {
		return true
	}

	return false
}

// SetFileSeverity gets a reference to the given string and assigns it to the FileSeverity field.
func (o *IngestersMalware) SetFileSeverity(v string) {
	o.FileSeverity = &v
}

// GetImageLayerId returns the ImageLayerId field value if set, zero value otherwise.
func (o *IngestersMalware) GetImageLayerId() string {
	if o == nil || IsNil(o.ImageLayerId) {
		var ret string
		return ret
	}
	return *o.ImageLayerId
}

// GetImageLayerIdOk returns a tuple with the ImageLayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetImageLayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageLayerId) {
		return nil, false
	}
	return o.ImageLayerId, true
}

// HasImageLayerId returns a boolean if a field has been set.
func (o *IngestersMalware) HasImageLayerId() bool {
	if o != nil && !IsNil(o.ImageLayerId) {
		return true
	}

	return false
}

// SetImageLayerId gets a reference to the given string and assigns it to the ImageLayerId field.
func (o *IngestersMalware) SetImageLayerId(v string) {
	o.ImageLayerId = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *IngestersMalware) GetMeta() []string {
	if o == nil || IsNil(o.Meta) {
		var ret []string
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetMetaOk() ([]string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *IngestersMalware) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given []string and assigns it to the Meta field.
func (o *IngestersMalware) SetMeta(v []string) {
	o.Meta = v
}

// GetMetaRules returns the MetaRules field value if set, zero value otherwise.
func (o *IngestersMalware) GetMetaRules() map[string]string {
	if o == nil || IsNil(o.MetaRules) {
		var ret map[string]string
		return ret
	}
	return *o.MetaRules
}

// GetMetaRulesOk returns a tuple with the MetaRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetMetaRulesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.MetaRules) {
		return nil, false
	}
	return o.MetaRules, true
}

// HasMetaRules returns a boolean if a field has been set.
func (o *IngestersMalware) HasMetaRules() bool {
	if o != nil && !IsNil(o.MetaRules) {
		return true
	}

	return false
}

// SetMetaRules gets a reference to the given map[string]string and assigns it to the MetaRules field.
func (o *IngestersMalware) SetMetaRules(v map[string]string) {
	o.MetaRules = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *IngestersMalware) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *IngestersMalware) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *IngestersMalware) SetRuleName(v string) {
	o.RuleName = &v
}

// GetSeverityScore returns the SeverityScore field value if set, zero value otherwise.
func (o *IngestersMalware) GetSeverityScore() float32 {
	if o == nil || IsNil(o.SeverityScore) {
		var ret float32
		return ret
	}
	return *o.SeverityScore
}

// GetSeverityScoreOk returns a tuple with the SeverityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetSeverityScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.SeverityScore) {
		return nil, false
	}
	return o.SeverityScore, true
}

// HasSeverityScore returns a boolean if a field has been set.
func (o *IngestersMalware) HasSeverityScore() bool {
	if o != nil && !IsNil(o.SeverityScore) {
		return true
	}

	return false
}

// SetSeverityScore gets a reference to the given float32 and assigns it to the SeverityScore field.
func (o *IngestersMalware) SetSeverityScore(v float32) {
	o.SeverityScore = &v
}

// GetStringsToMatch returns the StringsToMatch field value if set, zero value otherwise.
func (o *IngestersMalware) GetStringsToMatch() []string {
	if o == nil || IsNil(o.StringsToMatch) {
		var ret []string
		return ret
	}
	return o.StringsToMatch
}

// GetStringsToMatchOk returns a tuple with the StringsToMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetStringsToMatchOk() ([]string, bool) {
	if o == nil || IsNil(o.StringsToMatch) {
		return nil, false
	}
	return o.StringsToMatch, true
}

// HasStringsToMatch returns a boolean if a field has been set.
func (o *IngestersMalware) HasStringsToMatch() bool {
	if o != nil && !IsNil(o.StringsToMatch) {
		return true
	}

	return false
}

// SetStringsToMatch gets a reference to the given []string and assigns it to the StringsToMatch field.
func (o *IngestersMalware) SetStringsToMatch(v []string) {
	o.StringsToMatch = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *IngestersMalware) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *IngestersMalware) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *IngestersMalware) SetSummary(v string) {
	o.Summary = &v
}

// GetContainerName returns the ContainerName field value if set, zero value otherwise.
func (o *IngestersMalware) GetContainerName() string {
	if o == nil || IsNil(o.ContainerName) {
		var ret string
		return ret
	}
	return *o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetContainerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerName) {
		return nil, false
	}
	return o.ContainerName, true
}

// HasContainerName returns a boolean if a field has been set.
func (o *IngestersMalware) HasContainerName() bool {
	if o != nil && !IsNil(o.ContainerName) {
		return true
	}

	return false
}

// SetContainerName gets a reference to the given string and assigns it to the ContainerName field.
func (o *IngestersMalware) SetContainerName(v string) {
	o.ContainerName = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *IngestersMalware) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *IngestersMalware) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *IngestersMalware) SetHostName(v string) {
	o.HostName = &v
}

// GetKubernetesClusterName returns the KubernetesClusterName field value if set, zero value otherwise.
func (o *IngestersMalware) GetKubernetesClusterName() string {
	if o == nil || IsNil(o.KubernetesClusterName) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesClusterName) {
		return nil, false
	}
	return o.KubernetesClusterName, true
}

// HasKubernetesClusterName returns a boolean if a field has been set.
func (o *IngestersMalware) HasKubernetesClusterName() bool {
	if o != nil && !IsNil(o.KubernetesClusterName) {
		return true
	}

	return false
}

// SetKubernetesClusterName gets a reference to the given string and assigns it to the KubernetesClusterName field.
func (o *IngestersMalware) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = &v
}

// GetMasked returns the Masked field value if set, zero value otherwise.
func (o *IngestersMalware) GetMasked() string {
	if o == nil || IsNil(o.Masked) {
		var ret string
		return ret
	}
	return *o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.Masked) {
		return nil, false
	}
	return o.Masked, true
}

// HasMasked returns a boolean if a field has been set.
func (o *IngestersMalware) HasMasked() bool {
	if o != nil && !IsNil(o.Masked) {
		return true
	}

	return false
}

// SetMasked gets a reference to the given string and assigns it to the Masked field.
func (o *IngestersMalware) SetMasked(v string) {
	o.Masked = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *IngestersMalware) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *IngestersMalware) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *IngestersMalware) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *IngestersMalware) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *IngestersMalware) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *IngestersMalware) SetNodeType(v string) {
	o.NodeType = &v
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *IngestersMalware) GetScanId() string {
	if o == nil || IsNil(o.ScanId) {
		var ret string
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersMalware) GetScanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *IngestersMalware) HasScanId() bool {
	if o != nil && !IsNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given string and assigns it to the ScanId field.
func (o *IngestersMalware) SetScanId(v string) {
	o.ScanId = &v
}

func (o IngestersMalware) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestersMalware) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["@timestamp"] = o.Timestamp
	}
	if !IsNil(o.Class) {
		toSerialize["Class"] = o.Class
	}
	if !IsNil(o.CompleteFilename) {
		toSerialize["CompleteFilename"] = o.CompleteFilename
	}
	if !IsNil(o.FileSevScore) {
		toSerialize["FileSevScore"] = o.FileSevScore
	}
	if !IsNil(o.FileSeverity) {
		toSerialize["FileSeverity"] = o.FileSeverity
	}
	if !IsNil(o.ImageLayerId) {
		toSerialize["ImageLayerId"] = o.ImageLayerId
	}
	if !IsNil(o.Meta) {
		toSerialize["Meta"] = o.Meta
	}
	if !IsNil(o.MetaRules) {
		toSerialize["Meta Rules"] = o.MetaRules
	}
	if !IsNil(o.RuleName) {
		toSerialize["RuleName"] = o.RuleName
	}
	if !IsNil(o.SeverityScore) {
		toSerialize["SeverityScore"] = o.SeverityScore
	}
	if !IsNil(o.StringsToMatch) {
		toSerialize["StringsToMatch"] = o.StringsToMatch
	}
	if !IsNil(o.Summary) {
		toSerialize["Summary"] = o.Summary
	}
	if !IsNil(o.ContainerName) {
		toSerialize["container_name"] = o.ContainerName
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.KubernetesClusterName) {
		toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	}
	if !IsNil(o.Masked) {
		toSerialize["masked"] = o.Masked
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !IsNil(o.ScanId) {
		toSerialize["scan_id"] = o.ScanId
	}
	return toSerialize, nil
}

type NullableIngestersMalware struct {
	value *IngestersMalware
	isSet bool
}

func (v NullableIngestersMalware) Get() *IngestersMalware {
	return v.value
}

func (v *NullableIngestersMalware) Set(val *IngestersMalware) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestersMalware) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestersMalware) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestersMalware(val *IngestersMalware) *NullableIngestersMalware {
	return &NullableIngestersMalware{value: val, isSet: true}
}

func (v NullableIngestersMalware) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestersMalware) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


