/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UtilsSbomRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UtilsSbomRequest{}

// UtilsSbomRequest struct for UtilsSbomRequest
type UtilsSbomRequest struct {
	ContainerName *string `json:"container_name,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	ImageId *string `json:"image_id,omitempty"`
	ImageName *string `json:"image_name,omitempty"`
	KubernetesClusterName *string `json:"kubernetes_cluster_name,omitempty"`
	Mode *string `json:"mode,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodeType *string `json:"node_type,omitempty"`
	Sbom []int32 `json:"sbom,omitempty"`
	SbomFilePath *string `json:"sbom_file_path,omitempty"`
	ScanId *string `json:"scan_id,omitempty"`
	ScanType *string `json:"scan_type,omitempty"`
}

// NewUtilsSbomRequest instantiates a new UtilsSbomRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtilsSbomRequest() *UtilsSbomRequest {
	this := UtilsSbomRequest{}
	return &this
}

// NewUtilsSbomRequestWithDefaults instantiates a new UtilsSbomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtilsSbomRequestWithDefaults() *UtilsSbomRequest {
	this := UtilsSbomRequest{}
	return &this
}

// GetContainerName returns the ContainerName field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetContainerName() string {
	if o == nil || isNil(o.ContainerName) {
		var ret string
		return ret
	}
	return *o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetContainerNameOk() (*string, bool) {
	if o == nil || isNil(o.ContainerName) {
		return nil, false
	}
	return o.ContainerName, true
}

// HasContainerName returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasContainerName() bool {
	if o != nil && !isNil(o.ContainerName) {
		return true
	}

	return false
}

// SetContainerName gets a reference to the given string and assigns it to the ContainerName field.
func (o *UtilsSbomRequest) SetContainerName(v string) {
	o.ContainerName = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetHostName() string {
	if o == nil || isNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetHostNameOk() (*string, bool) {
	if o == nil || isNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasHostName() bool {
	if o != nil && !isNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *UtilsSbomRequest) SetHostName(v string) {
	o.HostName = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetImageId() string {
	if o == nil || isNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetImageIdOk() (*string, bool) {
	if o == nil || isNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasImageId() bool {
	if o != nil && !isNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *UtilsSbomRequest) SetImageId(v string) {
	o.ImageId = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetImageName() string {
	if o == nil || isNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetImageNameOk() (*string, bool) {
	if o == nil || isNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasImageName() bool {
	if o != nil && !isNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *UtilsSbomRequest) SetImageName(v string) {
	o.ImageName = &v
}

// GetKubernetesClusterName returns the KubernetesClusterName field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetKubernetesClusterName() string {
	if o == nil || isNil(o.KubernetesClusterName) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.KubernetesClusterName) {
		return nil, false
	}
	return o.KubernetesClusterName, true
}

// HasKubernetesClusterName returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasKubernetesClusterName() bool {
	if o != nil && !isNil(o.KubernetesClusterName) {
		return true
	}

	return false
}

// SetKubernetesClusterName gets a reference to the given string and assigns it to the KubernetesClusterName field.
func (o *UtilsSbomRequest) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *UtilsSbomRequest) SetMode(v string) {
	o.Mode = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetNodeId() string {
	if o == nil || isNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetNodeIdOk() (*string, bool) {
	if o == nil || isNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasNodeId() bool {
	if o != nil && !isNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *UtilsSbomRequest) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetNodeType() string {
	if o == nil || isNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetNodeTypeOk() (*string, bool) {
	if o == nil || isNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasNodeType() bool {
	if o != nil && !isNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *UtilsSbomRequest) SetNodeType(v string) {
	o.NodeType = &v
}

// GetSbom returns the Sbom field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetSbom() []int32 {
	if o == nil || isNil(o.Sbom) {
		var ret []int32
		return ret
	}
	return o.Sbom
}

// GetSbomOk returns a tuple with the Sbom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetSbomOk() ([]int32, bool) {
	if o == nil || isNil(o.Sbom) {
		return nil, false
	}
	return o.Sbom, true
}

// HasSbom returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasSbom() bool {
	if o != nil && !isNil(o.Sbom) {
		return true
	}

	return false
}

// SetSbom gets a reference to the given []int32 and assigns it to the Sbom field.
func (o *UtilsSbomRequest) SetSbom(v []int32) {
	o.Sbom = v
}

// GetSbomFilePath returns the SbomFilePath field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetSbomFilePath() string {
	if o == nil || isNil(o.SbomFilePath) {
		var ret string
		return ret
	}
	return *o.SbomFilePath
}

// GetSbomFilePathOk returns a tuple with the SbomFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetSbomFilePathOk() (*string, bool) {
	if o == nil || isNil(o.SbomFilePath) {
		return nil, false
	}
	return o.SbomFilePath, true
}

// HasSbomFilePath returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasSbomFilePath() bool {
	if o != nil && !isNil(o.SbomFilePath) {
		return true
	}

	return false
}

// SetSbomFilePath gets a reference to the given string and assigns it to the SbomFilePath field.
func (o *UtilsSbomRequest) SetSbomFilePath(v string) {
	o.SbomFilePath = &v
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetScanId() string {
	if o == nil || isNil(o.ScanId) {
		var ret string
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetScanIdOk() (*string, bool) {
	if o == nil || isNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasScanId() bool {
	if o != nil && !isNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given string and assigns it to the ScanId field.
func (o *UtilsSbomRequest) SetScanId(v string) {
	o.ScanId = &v
}

// GetScanType returns the ScanType field value if set, zero value otherwise.
func (o *UtilsSbomRequest) GetScanType() string {
	if o == nil || isNil(o.ScanType) {
		var ret string
		return ret
	}
	return *o.ScanType
}

// GetScanTypeOk returns a tuple with the ScanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSbomRequest) GetScanTypeOk() (*string, bool) {
	if o == nil || isNil(o.ScanType) {
		return nil, false
	}
	return o.ScanType, true
}

// HasScanType returns a boolean if a field has been set.
func (o *UtilsSbomRequest) HasScanType() bool {
	if o != nil && !isNil(o.ScanType) {
		return true
	}

	return false
}

// SetScanType gets a reference to the given string and assigns it to the ScanType field.
func (o *UtilsSbomRequest) SetScanType(v string) {
	o.ScanType = &v
}

func (o UtilsSbomRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UtilsSbomRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ContainerName) {
		toSerialize["container_name"] = o.ContainerName
	}
	if !isNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !isNil(o.ImageId) {
		toSerialize["image_id"] = o.ImageId
	}
	if !isNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !isNil(o.KubernetesClusterName) {
		toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !isNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !isNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !isNil(o.Sbom) {
		toSerialize["sbom"] = o.Sbom
	}
	if !isNil(o.SbomFilePath) {
		toSerialize["sbom_file_path"] = o.SbomFilePath
	}
	if !isNil(o.ScanId) {
		toSerialize["scan_id"] = o.ScanId
	}
	if !isNil(o.ScanType) {
		toSerialize["scan_type"] = o.ScanType
	}
	return toSerialize, nil
}

type NullableUtilsSbomRequest struct {
	value *UtilsSbomRequest
	isSet bool
}

func (v NullableUtilsSbomRequest) Get() *UtilsSbomRequest {
	return v.value
}

func (v *NullableUtilsSbomRequest) Set(val *UtilsSbomRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUtilsSbomRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUtilsSbomRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtilsSbomRequest(val *UtilsSbomRequest) *NullableUtilsSbomRequest {
	return &NullableUtilsSbomRequest{value: val, isSet: true}
}

func (v NullableUtilsSbomRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtilsSbomRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


