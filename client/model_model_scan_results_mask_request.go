/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelScanResultsMaskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelScanResultsMaskRequest{}

// ModelScanResultsMaskRequest struct for ModelScanResultsMaskRequest
type ModelScanResultsMaskRequest struct {
	MaskAcrossHostsAndImages *bool `json:"mask_across_hosts_and_images,omitempty"`
	MaskInThisHostOrImageTags *bool `json:"mask_in_this_host_or_image_tags,omitempty"`
	MaskInThisImageTag *bool `json:"mask_in_this_image_tag,omitempty"`
	ResultIds []string `json:"result_ids"`
	ScanId string `json:"scan_id"`
	ScanType string `json:"scan_type"`
}

// NewModelScanResultsMaskRequest instantiates a new ModelScanResultsMaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelScanResultsMaskRequest(resultIds []string, scanId string, scanType string) *ModelScanResultsMaskRequest {
	this := ModelScanResultsMaskRequest{}
	this.ResultIds = resultIds
	this.ScanId = scanId
	this.ScanType = scanType
	return &this
}

// NewModelScanResultsMaskRequestWithDefaults instantiates a new ModelScanResultsMaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelScanResultsMaskRequestWithDefaults() *ModelScanResultsMaskRequest {
	this := ModelScanResultsMaskRequest{}
	return &this
}

// GetMaskAcrossHostsAndImages returns the MaskAcrossHostsAndImages field value if set, zero value otherwise.
func (o *ModelScanResultsMaskRequest) GetMaskAcrossHostsAndImages() bool {
	if o == nil || IsNil(o.MaskAcrossHostsAndImages) {
		var ret bool
		return ret
	}
	return *o.MaskAcrossHostsAndImages
}

// GetMaskAcrossHostsAndImagesOk returns a tuple with the MaskAcrossHostsAndImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelScanResultsMaskRequest) GetMaskAcrossHostsAndImagesOk() (*bool, bool) {
	if o == nil || IsNil(o.MaskAcrossHostsAndImages) {
		return nil, false
	}
	return o.MaskAcrossHostsAndImages, true
}

// HasMaskAcrossHostsAndImages returns a boolean if a field has been set.
func (o *ModelScanResultsMaskRequest) HasMaskAcrossHostsAndImages() bool {
	if o != nil && !IsNil(o.MaskAcrossHostsAndImages) {
		return true
	}

	return false
}

// SetMaskAcrossHostsAndImages gets a reference to the given bool and assigns it to the MaskAcrossHostsAndImages field.
func (o *ModelScanResultsMaskRequest) SetMaskAcrossHostsAndImages(v bool) {
	o.MaskAcrossHostsAndImages = &v
}

// GetMaskInThisHostOrImageTags returns the MaskInThisHostOrImageTags field value if set, zero value otherwise.
func (o *ModelScanResultsMaskRequest) GetMaskInThisHostOrImageTags() bool {
	if o == nil || IsNil(o.MaskInThisHostOrImageTags) {
		var ret bool
		return ret
	}
	return *o.MaskInThisHostOrImageTags
}

// GetMaskInThisHostOrImageTagsOk returns a tuple with the MaskInThisHostOrImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelScanResultsMaskRequest) GetMaskInThisHostOrImageTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.MaskInThisHostOrImageTags) {
		return nil, false
	}
	return o.MaskInThisHostOrImageTags, true
}

// HasMaskInThisHostOrImageTags returns a boolean if a field has been set.
func (o *ModelScanResultsMaskRequest) HasMaskInThisHostOrImageTags() bool {
	if o != nil && !IsNil(o.MaskInThisHostOrImageTags) {
		return true
	}

	return false
}

// SetMaskInThisHostOrImageTags gets a reference to the given bool and assigns it to the MaskInThisHostOrImageTags field.
func (o *ModelScanResultsMaskRequest) SetMaskInThisHostOrImageTags(v bool) {
	o.MaskInThisHostOrImageTags = &v
}

// GetMaskInThisImageTag returns the MaskInThisImageTag field value if set, zero value otherwise.
func (o *ModelScanResultsMaskRequest) GetMaskInThisImageTag() bool {
	if o == nil || IsNil(o.MaskInThisImageTag) {
		var ret bool
		return ret
	}
	return *o.MaskInThisImageTag
}

// GetMaskInThisImageTagOk returns a tuple with the MaskInThisImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelScanResultsMaskRequest) GetMaskInThisImageTagOk() (*bool, bool) {
	if o == nil || IsNil(o.MaskInThisImageTag) {
		return nil, false
	}
	return o.MaskInThisImageTag, true
}

// HasMaskInThisImageTag returns a boolean if a field has been set.
func (o *ModelScanResultsMaskRequest) HasMaskInThisImageTag() bool {
	if o != nil && !IsNil(o.MaskInThisImageTag) {
		return true
	}

	return false
}

// SetMaskInThisImageTag gets a reference to the given bool and assigns it to the MaskInThisImageTag field.
func (o *ModelScanResultsMaskRequest) SetMaskInThisImageTag(v bool) {
	o.MaskInThisImageTag = &v
}

// GetResultIds returns the ResultIds field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelScanResultsMaskRequest) GetResultIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ResultIds
}

// GetResultIdsOk returns a tuple with the ResultIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelScanResultsMaskRequest) GetResultIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResultIds) {
		return nil, false
	}
	return o.ResultIds, true
}

// SetResultIds sets field value
func (o *ModelScanResultsMaskRequest) SetResultIds(v []string) {
	o.ResultIds = v
}

// GetScanId returns the ScanId field value
func (o *ModelScanResultsMaskRequest) GetScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value
// and a boolean to check if the value has been set.
func (o *ModelScanResultsMaskRequest) GetScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScanId, true
}

// SetScanId sets field value
func (o *ModelScanResultsMaskRequest) SetScanId(v string) {
	o.ScanId = v
}

// GetScanType returns the ScanType field value
func (o *ModelScanResultsMaskRequest) GetScanType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScanType
}

// GetScanTypeOk returns a tuple with the ScanType field value
// and a boolean to check if the value has been set.
func (o *ModelScanResultsMaskRequest) GetScanTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScanType, true
}

// SetScanType sets field value
func (o *ModelScanResultsMaskRequest) SetScanType(v string) {
	o.ScanType = v
}

func (o ModelScanResultsMaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelScanResultsMaskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaskAcrossHostsAndImages) {
		toSerialize["mask_across_hosts_and_images"] = o.MaskAcrossHostsAndImages
	}
	if !IsNil(o.MaskInThisHostOrImageTags) {
		toSerialize["mask_in_this_host_or_image_tags"] = o.MaskInThisHostOrImageTags
	}
	if !IsNil(o.MaskInThisImageTag) {
		toSerialize["mask_in_this_image_tag"] = o.MaskInThisImageTag
	}
	if o.ResultIds != nil {
		toSerialize["result_ids"] = o.ResultIds
	}
	toSerialize["scan_id"] = o.ScanId
	toSerialize["scan_type"] = o.ScanType
	return toSerialize, nil
}

type NullableModelScanResultsMaskRequest struct {
	value *ModelScanResultsMaskRequest
	isSet bool
}

func (v NullableModelScanResultsMaskRequest) Get() *ModelScanResultsMaskRequest {
	return v.value
}

func (v *NullableModelScanResultsMaskRequest) Set(val *ModelScanResultsMaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelScanResultsMaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelScanResultsMaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelScanResultsMaskRequest(val *ModelScanResultsMaskRequest) *NullableModelScanResultsMaskRequest {
	return &NullableModelScanResultsMaskRequest{value: val, isSet: true}
}

func (v NullableModelScanResultsMaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelScanResultsMaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


