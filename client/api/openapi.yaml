openapi: 3.0.3
info:
  contact:
    email: community@deepfence.io
    name: Deepfence Support
    url: https://deepfence.io
  description: "Deepfence Runtime API provides programmatic control over Deepfence\
    \ microservice securing your container, kubernetes and cloud deployments. The\
    \ API abstracts away underlying infrastructure details like cloud provider, \n\
    container distros, container orchestrator and type of deployment. This is one\
    \ uniform API to manage and control security alerts, policies and response to\
    \ alerts for microservices running anywhere i.e. managed pure greenfield container\
    \ deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate."
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  termsOfService: /tos
  title: Deepfence ThreatMapper
  version: 2.2.0
externalDocs:
  description: Deepfence Community
  url: https://community.deepfence.io
servers:
- url: /
tags:
- name: Authentication
- name: Common
- name: Compliance
- name: Topology
- name: Secret Scan
- name: Malware Scan
- name: Vulnerability
paths:
  /deepfence/agent-deployment/binary/download-url:
    get:
      description: Get agent binary download url
      operationId: getAgentBinaryDownloadURL
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGetAgentBinaryDownloadURLResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get agent binary download url
      tags:
      - Settings
  /deepfence/api-token:
    get:
      description: Get logged in user's API Tokens
      operationId: getApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelAPITokenResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get User's API Tokens
      tags:
      - User
  /deepfence/api-token/reset:
    post:
      description: Reset user's API Tokens
      operationId: resetApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelAPITokenResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Reset User's API Tokens
      tags:
      - User
  /deepfence/auth/token:
    post:
      description: "Get access token for programmatic API access, by providing API\
        \ Token"
      operationId: authToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAPIAuthRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponseAccessToken'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Get Access Token for API Token
      tags:
      - Authentication
  /deepfence/auth/token/refresh:
    post:
      description: Reissue access token using refresh token
      operationId: authTokenRefresh
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponseAccessToken'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Refresh access token
      tags:
      - Authentication
  /deepfence/cloud-node/account:
    post:
      description: Register Cloud Node Account and return any pending compliance scans
        from console
      operationId: registerCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeAccountRegisterReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeAccountRegisterResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Register Cloud Node Account
      tags:
      - Cloud Nodes
  /deepfence/cloud-node/account/delete:
    patch:
      description: Delete Cloud Node Account and related resources
      operationId: deleteCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudAccountDeleteReq'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Cloud Node Account
      tags:
      - Cloud Nodes
  /deepfence/cloud-node/account/refresh:
    post:
      description: Refresh the cloud resources in a Cloud Account
      operationId: refreshCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudAccountRefreshReq'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Refresh Cloud Account
      tags:
      - Cloud Nodes
  /deepfence/cloud-node/list/accounts:
    post:
      description: List Cloud Node Accounts registered with the console
      operationId: listCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeAccountsListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeAccountsListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Cloud Node Accounts
      tags:
      - Cloud Nodes
  /deepfence/cloud-node/list/providers:
    get:
      description: List Cloud Node Providers registered with the console
      operationId: listCloudProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeProvidersListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Cloud Node Providers
      tags:
      - Cloud Nodes
  /deepfence/complete/cloud-compliance:
    post:
      description: Complete cloud compliance info
      operationId: completeCloudCompliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionCompletionNodeFieldReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionCompletionNodeFieldRes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Completion for cloud compliance fields
      tags:
      - Completion
  /deepfence/complete/compliance:
    post:
      description: Complete compliance info
      operationId: completeComplianceInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionCompletionNodeFieldReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionCompletionNodeFieldRes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Completion for compliance fields
      tags:
      - Completion
  /deepfence/complete/host:
    post:
      description: Complete host info
      operationId: completeHostInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionCompletionNodeFieldReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionCompletionNodeFieldRes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Completion for host fields
      tags:
      - Completion
  /deepfence/complete/process:
    post:
      description: Complete process info
      operationId: completeProcessInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionCompletionNodeFieldReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionCompletionNodeFieldRes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Completion for process fields
      tags:
      - Completion
  /deepfence/complete/vulnerability:
    post:
      description: Complete vulnerability info
      operationId: completeVulnerabilityInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionCompletionNodeFieldReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionCompletionNodeFieldRes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Completion for vulnerability fields
      tags:
      - Completion
  /deepfence/controls/agent:
    post:
      description: Fetch actions for a given agent
      operationId: getAgentControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentControls'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Agent Actions
      tags:
      - Controls
  /deepfence/controls/agent-init:
    post:
      description: Fetch initial actions for a given agent after it started
      operationId: getAgentInitControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInitAgentReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentControls'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Agent Init Actions
      tags:
      - Controls
  /deepfence/controls/agent-plugins/disable:
    post:
      description: Schedule agent plugin disable
      operationId: disableAgentPlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentPluginDisable'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Schedule new agent plugin version disabling
      tags:
      - Controls
  /deepfence/controls/agent-plugins/enable:
    post:
      description: Schedule agent plugin enable
      operationId: enableAgentPlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentPluginEnable'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Schedule new agent plugin version enabling
      tags:
      - Controls
  /deepfence/controls/agent-upgrade:
    post:
      description: Schedule new agent version upgrade
      operationId: upgradeAgentVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentUpgrade'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Schedule new agent version upgrade
      tags:
      - Controls
  /deepfence/controls/cloud-node:
    post:
      description: Fetch controls for a cloud node
      operationId: getCloudNodeControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeControlReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeControlResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Cloud Node Controls
      tags:
      - Controls
  /deepfence/controls/cloud-node/disable:
    post:
      description: Disable controls for a cloud node
      operationId: disableCloudNodeControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeEnableDisableReq'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Disable Cloud Node Controls
      tags:
      - Controls
  /deepfence/controls/cloud-node/enable:
    post:
      description: Enable controls for a cloud node
      operationId: enableCloudNodeControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeEnableDisableReq'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Enable Cloud Node Controls
      tags:
      - Controls
  /deepfence/controls/kubernetes-cluster:
    post:
      description: Fetch actions for a given Kubernetes Cluster
      operationId: getKubernetesClusterControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentControls'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Kubernetes Cluster Actions
      tags:
      - Controls
  /deepfence/database/malware:
    put:
      description: Upload malware rules for use in malware scans
      operationId: uploadMalwareRules
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataThreatintelDBUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Upload Malware Rules
      tags:
      - Settings
  /deepfence/database/posture:
    put:
      description: Upload posture controls for use in posture scans
      operationId: uploadPostureControls
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataThreatintelDBUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Upload Posture Controls
      tags:
      - Settings
  /deepfence/database/secret:
    put:
      description: Upload secrets rules for use in secrets scans
      operationId: uploadSecretsRules
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataThreatintelDBUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Upload Secrets Rules
      tags:
      - Settings
  /deepfence/database/vulnerability:
    put:
      description: Upload Vulnerability Database for use in vulnerability scans
      operationId: uploadVulnerabilityDatabase
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataThreatintelDBUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Upload Vulnerability Database
      tags:
      - Settings
  /deepfence/diagnosis/agent-logs:
    post:
      description: Generate Agent Diagnostic Logs
      operationId: generateAgentDiagnosticLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisGenerateAgentDiagnosticLogsRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Agent Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/agent-logs/status/{node_id}:
    put:
      description: Update agent diagnostic logs status
      operationId: updateAgentDiagnosticLogsStatus
      parameters:
      - explode: false
        in: path
        name: node_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisDiagnosticLogsStatus'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Agent Diagnostic Logs Status
      tags:
      - Diagnosis
  /deepfence/diagnosis/cloud-scanner-logs:
    post:
      description: Generate Cloud Scanner Diagnostic Logs
      operationId: generateCloudScannerDiagnosticLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisGenerateCloudScannerDiagnosticLogsRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Cloud Scanner Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/cloud-scanner-logs/status/{node_id}:
    put:
      description: Update cloud scanner diagnostic logs status
      operationId: updateCloudScannerDiagnosticLogsStatus
      parameters:
      - explode: false
        in: path
        name: node_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisDiagnosticLogsStatus'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Cloud Scanner Diagnostic Logs Status
      tags:
      - Diagnosis
  /deepfence/diagnosis/console-logs:
    post:
      description: Generate Console Diagnostic Logs
      operationId: generateConsoleDiagnosticLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisGenerateConsoleDiagnosticLogsRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Console Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/diagnostic-logs:
    get:
      description: Get diagnostic logs download url links
      operationId: getDiagnosticLogs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisGetDiagnosticLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/notification:
    get:
      description: Get Diagnostic Notification
      operationId: diagnosticNotification
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DiagnosisDiagnosticNotification'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Diagnostic Notification
      tags:
      - Diagnosis
  /deepfence/diff-add/cloud-compliance:
    post:
      description: Get Cloud Compliance Diff between two scans
      operationId: diffAddCloudCompliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanCompareReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelCloudCompliance'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Diff
      tags:
      - Diff Add
  /deepfence/diff-add/compliance:
    post:
      description: Get Compliance Diff between two scans
      operationId: diffAddCompliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanCompareReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelCompliance'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Diff
      tags:
      - Diff Add
  /deepfence/diff-add/malware:
    post:
      description: Get Malware Diff between two scans
      operationId: diffAddMalware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanCompareReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelMalware'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Diff
      tags:
      - Diff Add
  /deepfence/diff-add/secret:
    post:
      description: Get Secret Diff between two scans
      operationId: diffAddSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanCompareReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelSecret'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Diff
      tags:
      - Diff Add
  /deepfence/diff-add/vulnerability:
    post:
      description: Get Vulnerability Diff between two scans
      operationId: diffAddVulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanCompareReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelVulnerability'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Diff
      tags:
      - Diff Add
  /deepfence/end-user-license-agreement:
    get:
      description: Get End User License Agreement
      operationId: eula
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Get End User License Agreement
      tags:
      - Common
  /deepfence/filters/cloud-compliance:
    post:
      description: Get all applicable filter values for cloud compliance
      operationId: getCloudComplianceFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFiltersReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelFiltersResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Filters
      tags:
      - Search
  /deepfence/filters/compliance:
    post:
      description: Get all applicable filter values for compliance
      operationId: getComplianceFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFiltersReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelFiltersResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Filters
      tags:
      - Search
  /deepfence/generative-ai-integration:
    get:
      description: List all the added Generative AI Integrations
      operationId: listGenerativeAiIntegration
      parameters:
      - explode: true
        in: query
        name: integration_type
        required: false
        schema:
          enum:
          - openai
          - amazon-bedrock
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelGenerativeAiIntegrationListResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Generative AI Integrations
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/{integration_id}:
    delete:
      description: Delete Generative AI integration
      operationId: deleteGenerativeAiIntegration
      parameters:
      - explode: false
        in: path
        name: integration_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/{integration_id}/default:
    put:
      description: Set Default Generative AI integration
      operationId: setDefaultGenerativeAiIntegration
      parameters:
      - explode: false
        in: path
        name: integration_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Set Default Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/auto-add:
    post:
      description: Automatically add Generative AI Integrations using IAM role
      operationId: autoAddGenerativeAiIntegration
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Automatically add Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/bedrock:
    post:
      description: Add a new AWS Bedrock Generative AI Integration
      operationId: addGenerativeAiIntegrationBedrock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAddGenerativeAiBedrockIntegration'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add AWS Bedrock Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/openai:
    post:
      description: Add a new OpenAI Generative AI Integration
      operationId: addGenerativeAiIntegrationOpenAI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAddGenerativeAiOpenAIIntegration'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add OpenAI Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/cloud-posture:
    post:
      description: Send Cloud Posture query to Generative AI Integration
      operationId: generativeAiIntegrationCloudPostureQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationCloudPostureRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Cloud Posture query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/kubernetes-posture:
    post:
      description: Send Kubernetes Posture query to Generative AI Integration
      operationId: generativeAiIntegrationKubernetesPostureQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationKubernetesPostureRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Kubernetes Posture query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/linux-posture:
    post:
      description: Send Linux Posture query to Generative AI Integration
      operationId: generativeAiIntegrationLinuxPostureQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationLinuxPostureRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Linux Posture query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/malware:
    post:
      description: Send Malware query to Generative AI Integration
      operationId: generativeAiIntegrationMalwareQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationMalwareRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Malware query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/secret:
    post:
      description: Send Secret query to Generative AI Integration
      operationId: generativeAiIntegrationSecretQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationSecretRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Secret query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/generative-ai-integration/query/vulnerability:
    post:
      description: Send Vulnerability query to Generative AI Integration
      operationId: generativeAiIntegrationVulnerabilityQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerativeAiIntegrationVulnerabilityRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Send Vulnerability query to Generative AI Integration
      tags:
      - Generative AI
  /deepfence/graph/threat:
    post:
      description: Retrieve the full threat graph associated with the account
      operationId: getThreatGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphThreatFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphThreatGraph'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Threat Graph
      tags:
      - Threat
  /deepfence/graph/threat/individual:
    post:
      description: Retrieve threat graph associated with vulnerabilities
      operationId: getIndividualThreatGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphIndividualThreatGraphRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GraphIndividualThreatGraph'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Threat Graph
      tags:
      - Threat
  /deepfence/graph/topology/:
    post:
      description: Retrieve the full topology graph associated with the account
      operationId: getTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/containers:
    post:
      description: Retrieve the full topology graph associated with the account from
        Containers
      operationId: getContainersTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Containers Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/delta:
    post:
      description: Retrieve addition or deletion toplogy deltas
      operationId: getTopologyDelta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelTopologyDeltaReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTopologyDeltaResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Topology Delta
      tags:
      - Topology
  /deepfence/graph/topology/hosts:
    post:
      description: Retrieve the full topology graph associated with the account from
        Hosts
      operationId: getHostsTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Hosts Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/kubernetes:
    post:
      description: Retrieve the full topology graph associated with the account from
        Kubernetes
      operationId: getKubernetesTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Kubernetes Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/pods:
    post:
      description: Retrieve the full topology graph associated with the account from
        Pods
      operationId: getPodsTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Pods Topology Graph
      tags:
      - Topology
  /deepfence/ingest/cloud-compliance:
    post:
      description: Ingest Cloud compliances found while scanning cloud provider
      operationId: ingestCloudCompliances
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCloudCompliance'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Cloud Compliances
      tags:
      - Cloud Scanner
  /deepfence/ingest/cloud-compliance-status:
    post:
      description: Ingest Cloud compliances found while scanning cloud provider
      operationId: ingestCloudComplianceScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCloudComplianceScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Cloud Compliances scan status
      tags:
      - Cloud Scanner
  /deepfence/ingest/cloud-resources:
    post:
      description: Ingest Clouds Resources found while scanning cloud provider
      operationId: ingestCloudResources
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCloudResource'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Cloud resources
      tags:
      - Cloud Resources
  /deepfence/ingest/compliance:
    post:
      description: Ingest compliance issues found while scanning the agent
      operationId: ingestCompliances
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCompliance'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Compliances
      tags:
      - Compliance
  /deepfence/ingest/compliance-scan-logs:
    post:
      description: Ingest compliance issues found while scanning the agent
      operationId: ingestComplianceScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersComplianceScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Compliance Scan Status
      tags:
      - Compliance
  /deepfence/ingest/malware:
    post:
      description: Ingest malware found while scanning the agent
      operationId: ingestMalware
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersMalware'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Malware
      tags:
      - Malware Scan
  /deepfence/ingest/malware-scan-logs:
    post:
      description: Ingest malware scan status from the agent
      operationId: ingestMalwareScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersMalwareScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Malware Scan Status
      tags:
      - Malware Scan
  /deepfence/ingest/report:
    post:
      description: Ingest data reported by one Agent
      operationId: ingestAgentReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRawReport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentBeat'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Topology Data
      tags:
      - Topology
  /deepfence/ingest/sbom:
    post:
      description: Ingest SBOM from Scan
      operationId: ingestSbom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilsScanSbomRequest'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest SBOM from Scan
      tags:
      - Vulnerability
  /deepfence/ingest/secret-scan-logs:
    post:
      description: Ingest secrets scan status from the agent
      operationId: ingestSecretScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersSecretScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Secrets Scan Status
      tags:
      - Secret Scan
  /deepfence/ingest/secrets:
    post:
      description: Ingest secrets found while scanning the agent
      operationId: ingestSecrets
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersSecret'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Secrets
      tags:
      - Secret Scan
  /deepfence/ingest/sync-report:
    post:
      description: Ingest data reported by one Agent
      operationId: ingestSyncAgentReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestersReportIngestionData'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Topology Data
      tags:
      - Topology
  /deepfence/ingest/vulnerabilities:
    post:
      description: Ingest vulnerabilities found while scanning the agent host or containers
      operationId: ingestVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersVulnerability'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Vulnerabilities
      tags:
      - Vulnerability
  /deepfence/ingest/vulnerabilities-scan-logs:
    post:
      description: Ingest vulnerabilities scan status from agent
      operationId: ingestVulnerabilitiesScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersVulnerabilityScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Vulnerabilities Scan Status
      tags:
      - Vulnerability
  /deepfence/integration:
    get:
      description: List all the added Integrations
      operationId: listIntegration
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelIntegrationListResp'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Integrations
      tags:
      - Integration
    post:
      description: Add a new supported integration
      operationId: addIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelIntegrationAddReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add Integration
      tags:
      - Integration
  /deepfence/integration/{integration_id}:
    delete:
      description: Delete single integration
      operationId: deleteIntegration
      parameters:
      - explode: false
        in: path
        name: integration_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Single Integration
      tags:
      - Integration
    put:
      description: Update integration
      operationId: updateIntegration
      parameters:
      - explode: false
        in: path
        name: integration_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelIntegrationUpdateReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Integration
      tags:
      - Integration
  /deepfence/integration/delete:
    patch:
      description: Delete integrations
      operationId: deleteIntegrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDeleteIntegrationReq'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Integrations
      tags:
      - Integration
  /deepfence/internal/console-api-token:
    get:
      description: Get api-token for console agent
      operationId: getConsoleApiToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAPIAuthRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Get api-token for console agent
      tags:
      - Internal
  /deepfence/license:
    delete:
      description: Delete license from the console database
      operationId: deleteLicense
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete License
      tags:
      - Settings
    get:
      description: Get license status and expiry
      operationId: getLicense
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelLicense'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get License Details
      tags:
      - Settings
    post:
      description: Register new license key to the console and activate
      operationId: registerLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegisterLicenseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRegisterLicenseResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Register License
      tags:
      - Settings
  /deepfence/license/generate:
    post:
      description: Generate a new ThreatMapper license key
      operationId: generateLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerateLicenseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGenerateLicenseResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate License Key
      tags:
      - Settings
  /deepfence/lookup/cloud-compliances:
    post:
      description: Retrieve all the data associated with cloud-compliances
      operationId: getCloudCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCloudCompliance'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Cloud Compliances data
      tags:
      - Lookup
  /deepfence/lookup/cloud-resources:
    post:
      description: Retrieve the cloud resources
      operationId: getCloudResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCloudResource'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Resources
      tags:
      - Lookup
  /deepfence/lookup/compliances:
    post:
      description: Retrieve all the data associated with compliances
      operationId: getCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCompliance'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Compliances data
      tags:
      - Lookup
  /deepfence/lookup/containerimages:
    post:
      description: Retrieve all the data associated with images
      operationId: getContainerImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainerImage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Container Images data
      tags:
      - Lookup
  /deepfence/lookup/containers:
    post:
      description: Retrieve all the data associated with containers
      operationId: getContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainer'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Containers data
      tags:
      - Lookup
  /deepfence/lookup/hosts:
    post:
      description: Retrieve all the data associated with hosts
      operationId: getHosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelHost'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Hosts data
      tags:
      - Lookup
  /deepfence/lookup/kubernetesclusters:
    post:
      description: Retrieve all the data associated with k8s clusters
      operationId: getKubernetesClusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelKubernetesCluster'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve K8s data
      tags:
      - Lookup
  /deepfence/lookup/malwares:
    post:
      description: Retrieve all the data associated with malwares
      operationId: getMalwares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelMalware'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Malwares data
      tags:
      - Lookup
  /deepfence/lookup/pods:
    post:
      description: Retrieve all the data associated with pods
      operationId: getPods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelPod'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Pods data
      tags:
      - Lookup
  /deepfence/lookup/processes:
    post:
      description: Retrieve all the data associated with processes
      operationId: getProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelProcess'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Processes data
      tags:
      - Lookup
  /deepfence/lookup/registryaccount:
    post:
      description: List all the images present in the given registry
      operationId: getRegistryAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelRegistryAccount'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Images in Registry
      tags:
      - Lookup
  /deepfence/lookup/secrets:
    post:
      description: Retrieve all the data associated with secrets
      operationId: getSecrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSecret'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Secrets data
      tags:
      - Lookup
  /deepfence/lookup/vulnerabilities:
    post:
      description: Retrieve all the data associated with vulnerabilities
      operationId: getVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelVulnerability'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Vulnerabilities data
      tags:
      - Lookup
  /deepfence/registryaccount:
    get:
      description: List all the added Registries
      operationId: listRegistry
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelRegistryListResp'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Registries
      tags:
      - Registry
    post:
      description: Add a new supported registry
      operationId: addRegistry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryAddReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add Registry
      tags:
      - Registry
  /deepfence/registryaccount/{registry_id}:
    delete:
      description: Delete registry
      operationId: deleteRegistry
      parameters:
      - explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Registry
      tags:
      - Registry
    put:
      description: Update registry
      operationId: updateRegistry
      parameters:
      - explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryUpdateReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Registry
      tags:
      - Registry
  /deepfence/registryaccount/{registry_id}/summary:
    get:
      description: "get summary of registry scans, images and tags"
      operationId: getRegistrySummary
      parameters:
      - explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSummary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Registry Summary
      tags:
      - Registry
  /deepfence/registryaccount/{registry_id}/sync:
    post:
      description: synchronize registry images
      operationId: syncRegistry
      parameters:
      - explode: false
        in: path
        name: registry_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Sync Registry
      tags:
      - Registry
  /deepfence/registryaccount/{registry_type}/summary-by-type:
    get:
      description: "get summary of registries scans, images and tags by registry type"
      operationId: getSummaryByType
      parameters:
      - explode: false
        in: path
        name: registry_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSummary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Registry Summary By Type
      tags:
      - Registry
  /deepfence/registryaccount/count/images:
    post:
      description: count of images from a given registry
      operationId: CountImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryImagesReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRegistryCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Registry Images
      tags:
      - Registry
  /deepfence/registryaccount/count/stubs:
    post:
      description: count of image tags for a given image and registry
      operationId: CountImageStubs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryImageStubsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRegistryCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Image Stubs
      tags:
      - Registry
  /deepfence/registryaccount/delete:
    patch:
      description: Batch Delete registry
      operationId: deleteRegistryBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDeleteRegistryBulkReq'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Batch Delete Registry
      tags:
      - Registry
  /deepfence/registryaccount/gcr:
    post:
      description: Add a Google Container registry
      operationId: addRegistryGCR
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataModelRegistryGCRAddReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add Google Container Registry
      tags:
      - Registry
  /deepfence/registryaccount/images:
    post:
      description: list images from a given registry
      operationId: listImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryImagesReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainerImage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Registry Images
      tags:
      - Registry
  /deepfence/registryaccount/stubs:
    post:
      description: list image tags for a given image and registry
      operationId: listImageStubs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegistryImageStubsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelImageStub'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Image Stubs
      tags:
      - Registry
  /deepfence/registryaccount/summary:
    get:
      description: "get summary of all registries scans, images and tags by registry\
        \ type"
      operationId: getSummaryAll
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRegistrySummaryAllResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get All Registries Summary By Type
      tags:
      - Registry
  /deepfence/reports:
    get:
      description: List all the available reports
      operationId: listReports
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelExportReport'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Reports
      tags:
      - Reports
    post:
      description: generate report for given type and filters
      operationId: generateReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGenerateReportReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelGenerateReportResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Report
      tags:
      - Reports
  /deepfence/reports/{report_id}:
    delete:
      description: delete report for given report_id
      operationId: deleteReport
      parameters:
      - explode: false
        in: path
        name: report_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Report
      tags:
      - Reports
    get:
      description: get report by report_id
      operationId: getReport
      parameters:
      - explode: false
        in: path
        name: report_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelExportReport'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Report
      tags:
      - Reports
  /deepfence/reports/delete:
    patch:
      description: Bulk Delete reports
      operationId: bulkDeleteReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelBulkDeleteReportReq'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Bulk Delete Reports
      tags:
      - Reports
  /deepfence/scan/{scan_type}/{scan_id}:
    delete:
      description: Delete all scan results for a scan id
      operationId: deleteScanResultsForScanID
      parameters:
      - explode: false
        in: path
        name: scan_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scan_type
        required: true
        schema:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete all scan results for a scan id
      tags:
      - Scan Results
  /deepfence/scan/{scan_type}/{scan_id}/download:
    get:
      description: Download scan results
      operationId: downloadScanResults
      parameters:
      - explode: false
        in: path
        name: scan_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scan_type
        required: true
        schema:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDownloadScanResultsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Download Scans Results
      tags:
      - Scan Results
  /deepfence/scan/list/cloud-compliance:
    post:
      description: Get Cloud Compliance Scans list for cloud node
      operationId: listCloudComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Scans List
      tags:
      - Cloud Scanner
  /deepfence/scan/list/compliance:
    post:
      description: Get Compliance Scans list on agent or registry
      operationId: listComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scans List
      tags:
      - Compliance
  /deepfence/scan/list/malware:
    post:
      description: Get Malware Scans list on agent or registry
      operationId: listMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans List
      tags:
      - Malware Scan
  /deepfence/scan/list/secret:
    post:
      description: Get Secret Scans list on agent or registry
      operationId: listSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans List
      tags:
      - Secret Scan
  /deepfence/scan/list/vulnerability:
    post:
      description: Get Vulnerability Scan list on agent or registry
      operationId: listVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scans List
      tags:
      - Vulnerability
  /deepfence/scan/nodes-in-result:
    post:
      description: Get all nodes in given scan result ids
      operationId: getAllNodesInScanResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelNodesInScanResultRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanResultBasicNode'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get all nodes in given scan result ids
      tags:
      - Scan Results
  /deepfence/scan/results/action/delete:
    patch:
      description: Delete selected scan results
      operationId: deleteScanResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsActionRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete selected scan results
      tags:
      - Scan Results
  /deepfence/scan/results/action/mask:
    post:
      description: Mask scan results
      operationId: maskScanResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsMaskRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Mask Scans Results
      tags:
      - Scan Results
  /deepfence/scan/results/action/notify:
    post:
      description: Notify scan results in connected integration channels
      operationId: notifyScanResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsActionRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Notify Scans Results
      tags:
      - Scan Results
  /deepfence/scan/results/action/unmask:
    post:
      description: Unmask scan results
      operationId: unmaskScanResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsMaskRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Unmask Scans Results
      tags:
      - Scan Results
  /deepfence/scan/results/cloud-compliance:
    post:
      description: Get Cloud Compliance Scan results for cloud node
      operationId: resultsCloudComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudComplianceScanResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Scan Results
      tags:
      - Cloud Scanner
  /deepfence/scan/results/compliance:
    post:
      description: Get Compliance Scans results on agent or registry
      operationId: resultsComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelComplianceScanResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scans Results
      tags:
      - Compliance
  /deepfence/scan/results/count/cloud-compliance:
    post:
      description: Get Cloud Compliance Scan results for cloud node
      operationId: countResultsCloudComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Scan Results
      tags:
      - Cloud Scanner
  /deepfence/scan/results/count/compliance:
    post:
      description: Get Compliance Scans results on agent or registry
      operationId: countResultsComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scans Results
      tags:
      - Compliance
  /deepfence/scan/results/count/group/malware:
    get:
      description: Group Malware Scans results by severity/rule
      operationId: groupResultsMalwares
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultGroupResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Group Malware Results
      tags:
      - Malware Scan
  /deepfence/scan/results/count/group/malware/class:
    get:
      description: Group Malware Scans results by severity/class
      operationId: groupResultsMalwaresClass
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultGroupResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Group Malware Results By Class
      tags:
      - Malware Scan
  /deepfence/scan/results/count/group/secret:
    get:
      description: Group Secret Scans results by severity/rule
      operationId: groupResultsSecrets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultGroupResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Group Secret Results
      tags:
      - Secret Scan
  /deepfence/scan/results/count/malware:
    post:
      description: Get Malware Scans results on agent or registry
      operationId: countResultsMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans Results
      tags:
      - Malware Scan
  /deepfence/scan/results/count/secret:
    post:
      description: Get Secret Scans results on agent or registry
      operationId: countResultsSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans Results
      tags:
      - Secret Scan
  /deepfence/scan/results/count/vulnerability:
    post:
      description: Get Vulnerability Scan results on agent or registry
      operationId: countResultsVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scans Results
      tags:
      - Vulnerability
  /deepfence/scan/results/fields:
    get:
      description: Get all the fields available in all the scan reports
      operationId: getScanReportFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanReportFieldsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Scan Report Fields
      tags:
      - Common
  /deepfence/scan/results/malware:
    post:
      description: Get Malware Scans results on agent or registry
      operationId: resultsMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMalwareScanResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans Results
      tags:
      - Malware Scan
  /deepfence/scan/results/malware/class:
    post:
      description: Get Malware Scans detected class names
      operationId: resultsClassMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMalwareScanResultClass'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans Results
      tags:
      - Malware Scan
  /deepfence/scan/results/malware/rules:
    post:
      description: Get Malware Scans detected rules names
      operationId: resultsRulesMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMalwareScanResultRules'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans Result Rules
      tags:
      - Malware Scan
  /deepfence/scan/results/secret:
    post:
      description: Get Secret Scans results on agent or registry
      operationId: resultsSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSecretScanResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans Results
      tags:
      - Secret Scan
  /deepfence/scan/results/secret/rules:
    post:
      description: Get Secret Scans detected rules names
      operationId: resultsRulesSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSecretScanResultRules'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans Result Rules
      tags:
      - Secret Scan
  /deepfence/scan/results/vulnerability:
    post:
      description: Get Vulnerability Scan results on agent or registry
      operationId: resultsVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVulnerabilityScanResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scans Results
      tags:
      - Vulnerability
  /deepfence/scan/sbom:
    post:
      description: Get SBOM for a node or scan id
      operationId: getSBOM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSbomRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSbomResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get SBOM for a node or scan id
      tags:
      - Vulnerability
  /deepfence/scan/sbom/download:
    post:
      description: Download SBOM for a node or scan id
      operationId: downloadSBOM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSbomRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDownloadReportResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Download SBOM for a node or scan id
      tags:
      - Vulnerability
  /deepfence/scan/start/compliance:
    post:
      description: Start Compliance Scan on agent or registry
      operationId: startComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelComplianceScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Compliance Scan
      tags:
      - Compliance
  /deepfence/scan/start/malware:
    post:
      description: Start Malware Scan on agent or registry
      operationId: startMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelMalwareScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Malware Scan
      tags:
      - Malware Scan
  /deepfence/scan/start/secret:
    post:
      description: Start Secret Scan on agent or registry
      operationId: startSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSecretScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Secret Scan
      tags:
      - Secret Scan
  /deepfence/scan/start/vulnerability:
    post:
      description: Start Vulnerability Scan on agent or registry
      operationId: startVulnerabilityScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelVulnerabilityScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Vulnerability Scan
      tags:
      - Vulnerability
  /deepfence/scan/status/cloud-compliance:
    post:
      description: Get Cloud Compliance Scan Status on cloud node
      operationId: statusCloudComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanStatusReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelComplianceScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Cloud Compliance Scan Status
      tags:
      - Cloud Scanner
  /deepfence/scan/status/compliance:
    post:
      description: Get Compliance Scan Status on agent or registry
      operationId: statusComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanStatusReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scan Status
      tags:
      - Compliance
  /deepfence/scan/status/malware:
    post:
      description: Get Malware Scan status on agent or registry
      operationId: statusMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanStatusReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scan Status
      tags:
      - Malware Scan
  /deepfence/scan/status/secret:
    post:
      description: Get Secret Scan Status on agent or registry
      operationId: statusSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanStatusReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scan Status
      tags:
      - Secret Scan
  /deepfence/scan/status/vulnerability:
    post:
      description: Get Vulnerability Scan Status on agent or registry
      operationId: statusVulnerabilityScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanStatusReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scan Status
      tags:
      - Vulnerability
  /deepfence/scan/stop/compliance:
    post:
      description: Stop Compliance Scan on agent or registry
      operationId: stopComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelStopScanRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Compliance Scan
      tags:
      - Compliance
  /deepfence/scan/stop/malware:
    post:
      description: Stop Malware Scan on agent or registry
      operationId: stopMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelStopScanRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Malware Scan
      tags:
      - Malware Scan
  /deepfence/scan/stop/secret:
    post:
      description: Stop Secret Scan on agent or registry
      operationId: stopSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelStopScanRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Secret Scan
      tags:
      - Secret Scan
  /deepfence/scan/stop/vulnerability:
    post:
      description: Stop Vulnerability Scan on agent or registry
      operationId: stopVulnerabilityScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelStopScanRequest'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Vulnerability Scan
      tags:
      - Vulnerability
  /deepfence/scans/bulk/delete:
    post:
      description: Bulk delete scans along with their results for a particular scan
        type
      operationId: bulkDeleteScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelBulkDeleteScansRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Bulk Delete Scans
      tags:
      - Scan Results
  /deepfence/scheduled-task:
    get:
      description: Get scheduled tasks
      operationId: getScheduledTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostgresqlDbScheduler'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get scheduled tasks
      tags:
      - Settings
    post:
      description: Add scheduled task
      operationId: addScheduledTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAddScheduledTaskRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add scheduled task
      tags:
      - Settings
  /deepfence/scheduled-task/{id}:
    delete:
      description: Delete Custom Schedule task
      operationId: deleteCustomScheduledTask
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Custom Schedule task
      tags:
      - Settings
    patch:
      description: Update scheduled task
      operationId: updateScheduledTask
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateScheduledTaskRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update scheduled task
      tags:
      - Settings
  /deepfence/search/cloud-accounts:
    post:
      description: Search across all the data associated with cloud nodes
      operationId: searchCloudAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCloudNodeAccountInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Cloud Nodes
      tags:
      - Search
  /deepfence/search/cloud-compliance/scans:
    post:
      description: Search across all the data associated with cloud-compliance scan
      operationId: searchCloudComplianceScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Cloud Compliance Scan results
      tags:
      - Search
  /deepfence/search/cloud-compliances:
    post:
      description: Search across all the data associated with cloud-compliances
      operationId: searchCloudCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCloudCompliance'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Cloud compliances
      tags:
      - Search
  /deepfence/search/cloud-resources:
    post:
      description: Search across all data associated with CloudResources
      operationId: searchCloudResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCloudResource'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Cloud Resources
      tags:
      - Search
  /deepfence/search/compliance-rules:
    post:
      description: Search across all the data associated with compliance rules
      operationId: searchComplianceRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelComplianceRule'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Compliance Rules
      tags:
      - Search
  /deepfence/search/compliance/scans:
    post:
      description: Search across all the data associated with compliance scan
      operationId: searchComplianceScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Compliance Scan results
      tags:
      - Search
  /deepfence/search/compliances:
    post:
      description: Search across all the data associated with compliances
      operationId: searchCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCompliance'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Compliances
      tags:
      - Search
  /deepfence/search/containers:
    post:
      description: Search across all data associated with containers
      operationId: searchContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainer'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Containers data
      tags:
      - Search
  /deepfence/search/count/cloud-accounts:
    post:
      description: Search across all the data associated with cloud nodes
      operationId: countCloudAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Cloud Nodes
      tags:
      - Search
  /deepfence/search/count/cloud-compliance/scans:
    post:
      description: Count across all the data associated with cloud-compliance scans
      operationId: countCloudComplianceScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Cloud Compliance Scan results
      tags:
      - Search
  /deepfence/search/count/cloud-compliances:
    post:
      description: Count across all the data ssociated with cloud compliances
      operationId: countCloudCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Cloud compliances
      tags:
      - Search
  /deepfence/search/count/cloud-resources:
    post:
      description: Count across all the data ssociated with cloud resources
      operationId: countCloudResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Cloud resources
      tags:
      - Search
  /deepfence/search/count/compliance-rules:
    post:
      description: Count across all the data associated with compliance rules
      operationId: countComplianceRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Compliance Rules
      tags:
      - Search
  /deepfence/search/count/compliance/scans:
    post:
      description: Count across all the data associated with compliance scans
      operationId: countComplianceScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Compliance Scan results
      tags:
      - Search
  /deepfence/search/count/compliances:
    post:
      description: Count across all the data associated with compliances
      operationId: countCompliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Compliances
      tags:
      - Search
  /deepfence/search/count/containers:
    post:
      description: Count across all the data associated with containers
      operationId: countContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Containers data
      tags:
      - Search
  /deepfence/search/count/hosts:
    post:
      description: Count across all the data associated with hosts
      operationId: countHosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count hosts
      tags:
      - Search
  /deepfence/search/count/images:
    post:
      description: Count across all the data associated with container images
      operationId: countContainerImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Container images
      tags:
      - Search
  /deepfence/search/count/kubernetes-clusters:
    post:
      description: Count across all the data ssociated with kubernetes clusters
      operationId: countKubernetesClusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Kubernetes clusters
      tags:
      - Search
  /deepfence/search/count/malware-rules:
    post:
      description: Count across all the data associated with malware rules
      operationId: countMalwareRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Malware Rules
      tags:
      - Search
  /deepfence/search/count/malware/scans:
    post:
      description: Count across all the data associated with malware scans
      operationId: countMalwareScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Malware Scan results
      tags:
      - Search
  /deepfence/search/count/malwares:
    post:
      description: Count across all the data associated with malwares
      operationId: countMalwares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Malwares
      tags:
      - Search
  /deepfence/search/count/nodes:
    get:
      description: "Count hosts, containers, pods, k8s clusters, images"
      operationId: countNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNodeCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count nodes
      tags:
      - Search
  /deepfence/search/count/pods:
    post:
      description: Count across all the data associated with pods
      operationId: countPods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Pods
      tags:
      - Search
  /deepfence/search/count/registry-accounts:
    post:
      description: Search across all the data associated with registry account
      operationId: countRegistryAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Registry Accounts
      tags:
      - Search
  /deepfence/search/count/secret-rules:
    post:
      description: Count across all the data associated with secret rules
      operationId: countSecretRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Secret Rules
      tags:
      - Search
  /deepfence/search/count/secret/scans:
    post:
      description: Count across all the data associated with secret scans
      operationId: countSecretsScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Secret Scan results
      tags:
      - Search
  /deepfence/search/count/secrets:
    post:
      description: Count across all the data associated with secrets
      operationId: countSecrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Secrets
      tags:
      - Search
  /deepfence/search/count/vulnerabilities:
    post:
      description: Search across all the data associated with vulnerabilities
      operationId: countVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Vulnerabilities
      tags:
      - Search
  /deepfence/search/count/vulnerability-rules:
    post:
      description: Count across all the data associated with vulnerability rules
      operationId: countVulnerabilityRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Vulnerability Rules
      tags:
      - Search
  /deepfence/search/count/vulnerability/scans:
    post:
      description: Count across all the data associated with vulnerability scans
      operationId: countVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Count Vulnerability Scan results
      tags:
      - Search
  /deepfence/search/hosts:
    post:
      description: Search across all data associated with hosts
      operationId: searchHosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelHost'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search hosts
      tags:
      - Search
  /deepfence/search/images:
    post:
      description: Search across all the data associated with container images
      operationId: searchContainerImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainerImage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Container images
      tags:
      - Search
  /deepfence/search/kubernetes-clusters:
    post:
      description: Search across all data associated with kuberentes clusters
      operationId: searchKubernetesClusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelKubernetesCluster'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Kuberenetes Clusters
      tags:
      - Search
  /deepfence/search/malware-rules:
    post:
      description: Search across all the data associated with malware rules
      operationId: searchMalwareRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelMalwareRule'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Malware Rules
      tags:
      - Search
  /deepfence/search/malware/scans:
    post:
      description: Search across all the data associated with malwares scan
      operationId: searchMalwareScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Malware Scan results
      tags:
      - Search
  /deepfence/search/malwares:
    post:
      description: Search across all the data associated with malwares
      operationId: searchMalwares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelMalware'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Malwares
      tags:
      - Search
  /deepfence/search/pods:
    post:
      description: Search across all the data associated with pods
      operationId: searchPods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelPod'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Pods
      tags:
      - Search
  /deepfence/search/registry-accounts:
    post:
      description: Search across all the data associated with registry account
      operationId: searchRegistryAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelRegistryAccount'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Registry Accounts
      tags:
      - Search
  /deepfence/search/secret-rules:
    post:
      description: Search across all the data associated with secret ruless
      operationId: searchSecretRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSecretRule'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Secret Rules
      tags:
      - Search
  /deepfence/search/secret/scans:
    post:
      description: Search across all the data associated with secrets scan
      operationId: searchSecretsScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Secrets Scan results
      tags:
      - Search
  /deepfence/search/secrets:
    post:
      description: Search across all the data associated with secrets
      operationId: searchSecrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSecret'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Secrets
      tags:
      - Search
  /deepfence/search/vulnerabilities:
    post:
      description: Search across all the data associated with vulnerabilities
      operationId: searchVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelVulnerability'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Vulnerabilities
      tags:
      - Search
  /deepfence/search/vulnerability-rules:
    post:
      description: Search across all the data associated with vulnerability rules
      operationId: searchVulerabilityRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchNodeReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelVulnerabilityRule'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Vulnerability Rules
      tags:
      - Search
  /deepfence/search/vulnerability/scans:
    post:
      description: Search across all the data associated with vulnerability scan
      operationId: searchVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSearchScanReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelScanInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Search Vulnerability Scan results
      tags:
      - Search
  /deepfence/settings/agent/version:
    put:
      description: Upload Agent version
      operationId: uploadAgentVersion
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDataModelBinUploadRequest'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Upload New agent version
      tags:
      - Settings
  /deepfence/settings/agent/versions:
    get:
      description: Get available agent versions
      operationId: getAgentVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelListAgentVersionResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get available agent versions
      tags:
      - Settings
  /deepfence/settings/email:
    get:
      description: Get Email Smtp / ses Configurations in system
      operationId: getEmailConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelEmailConfigurationResp'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Email Configurations
      tags:
      - Settings
    post:
      description: This email configuration is used to send email notifications
      operationId: addEmailConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelEmailConfigurationAdd'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Add Email Configuration
      tags:
      - Settings
  /deepfence/settings/email/{config_id}:
    delete:
      description: Delete Email Smtp / ses Configurations in system
      operationId: deleteEmailConfiguration
      parameters:
      - explode: false
        in: path
        name: config_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Email Configurations
      tags:
      - Settings
  /deepfence/settings/email/test:
    post:
      description: Test Configured Email
      operationId: testConfiguredEmail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Test Configured Email
      tags:
      - Settings
  /deepfence/settings/email/test-unconfigured:
    post:
      description: Test Unconfigured Email
      operationId: testUnconfiguredEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelEmailConfigurationAdd'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Test Unconfigured Email
      tags:
      - Settings
  /deepfence/settings/global-settings:
    get:
      description: Get all settings
      operationId: getSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSettingsResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get settings
      tags:
      - Settings
  /deepfence/settings/global-settings/{id}:
    patch:
      description: Update setting
      operationId: updateSetting
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSettingUpdateRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update setting
      tags:
      - Settings
  /deepfence/settings/user-audit-log:
    post:
      description: Get audit logs for all users
      operationId: getUserAuditLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelGetAuditLogsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostgresqlDbGetAuditLogsRow'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get user audit logs
      tags:
      - Settings
  /deepfence/settings/user-audit-log/count:
    get:
      description: Get user audit logs count
      operationId: getUserAuditLogsCount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSearchCountResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get user audit logs count
      tags:
      - Settings
  /deepfence/user:
    delete:
      description: Delete logged in user
      operationId: deleteCurrentUser
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Current User
      tags:
      - User
    get:
      description: Get logged in user information
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Current User
      tags:
      - User
    put:
      description: Update logged in user information
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Current User
      tags:
      - User
  /deepfence/user/invite:
    post:
      description: Invite a user
      operationId: inviteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInviteUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInviteUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Invite User
      tags:
      - User
  /deepfence/user/invite/register:
    post:
      description: Register invited user
      operationId: registerInvitedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegisterInvitedUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelLoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Register Invited User
      tags:
      - User
  /deepfence/user/login:
    post:
      description: Login API
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelLoginRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelLoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Login API
      tags:
      - Authentication
  /deepfence/user/logout:
    post:
      description: Logout API
      operationId: logout
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Logout API
      tags:
      - Authentication
  /deepfence/user/password:
    put:
      description: Update current user's password
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateUserPasswordRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Password
      tags:
      - User
  /deepfence/user/register:
    post:
      description: First user registration. Further users needs to be invited.
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUserRegisterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelLoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Register User
      tags:
      - User
  /deepfence/user/reset-password/request:
    post:
      description: Request for resetting the password
      operationId: resetPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPasswordResetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Reset Password Request
      tags:
      - User
  /deepfence/user/reset-password/verify:
    post:
      description: Verify code and reset the password
      operationId: verifyResetPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPasswordResetVerifyRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Verify and Reset Password
      tags:
      - User
  /deepfence/users:
    get:
      description: Get all users
      operationId: getUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelUser'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get all users
      tags:
      - User
  /deepfence/users/{id}:
    delete:
      description: Delete User by User ID
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete User by User ID
      tags:
      - User
    get:
      description: Get User by User ID
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get User by User ID
      tags:
      - User
    put:
      description: Update User by User ID
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateUserIDRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update User by User ID
      tags:
      - User
components:
  schemas:
    ApiDocsBadRequestResponse:
      example:
        error_index:
          key:
          - 0
          - 0
        success: false
        error_fields:
          key: error_fields
        message: message
      properties:
        error_fields:
          additionalProperties:
            type: string
          nullable: true
          type: object
        error_index:
          additionalProperties:
            items:
              type: integer
            type: array
          nullable: true
          type: object
        message:
          type: string
        success:
          example: false
          type: boolean
      type: object
    ApiDocsFailureResponse:
      example:
        success: false
        message: message
      properties:
        message:
          type: string
        success:
          example: false
          type: boolean
      type: object
    CompletionCompletionNodeFieldReq:
      example:
        completion: completion
        scan_id: scan_id
        window:
          offset: 0
          size: 6
        field_name: field_name
      properties:
        completion:
          type: string
        field_name:
          type: string
        scan_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - completion
      - field_name
      - window
      type: object
    CompletionCompletionNodeFieldRes:
      example:
        possible_values:
        - possible_values
        - possible_values
      properties:
        possible_values:
          items:
            type: string
          nullable: true
          type: array
      required:
      - possible_values
      type: object
    ControlsAction:
      example:
        id: 0
        request_payload: request_payload
      properties:
        id:
          type: integer
        request_payload:
          type: string
      required:
      - id
      - request_payload
      type: object
    ControlsAgentBeat:
      example:
        beatrate: 0
      properties:
        beatrate:
          type: integer
      required:
      - beatrate
      type: object
    ControlsAgentControls:
      example:
        beatrate: 0
        commands:
        - id: 0
          request_payload: request_payload
        - id: 0
          request_payload: request_payload
      properties:
        beatrate:
          type: integer
        commands:
          items:
            $ref: '#/components/schemas/ControlsAction'
          nullable: true
          type: array
      required:
      - beatrate
      - commands
      type: object
    DetailedConnectionSummary:
      example:
        source: source
        target: target
      properties:
        source:
          type: string
        target:
          type: string
      type: object
    DetailedNodeSummaries:
      additionalProperties:
        $ref: '#/components/schemas/DetailedNodeSummary'
      type: object
    DetailedNodeSummary:
      example:
        immediate_parent_id: immediate_parent_id
        metadata:
          docker_image_name_with_tag: docker_image_name_with_tag
          kubernetes_ip: kubernetes_ip
          public_ip:
          - public_ip
          - public_ip
          kubernetes_cluster_name: kubernetes_cluster_name
          docker_container_state: docker_container_state
          cpu_max: 6.027456183070403
          pid: 7
          kubernetes_created: kubernetes_created
          kubernetes_namespace: kubernetes_namespace
          cmdline: cmdline
          node_type: node_type
          interface_ip_map: interface_ip_map
          pseudo: true
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          kubernetes_cluster_id: kubernetes_cluster_id
          docker_container_networks: docker_container_networks
          kubernetes_ports:
          - kubernetes_ports
          - kubernetes_ports
          version: version
          pod_name: pod_name
          ppid: 9
          tags:
          - tags
          - tags
          docker_container_ports: docker_container_ports
          kubernetes_is_in_host_network: true
          instance_id: instance_id
          kernel_id: kernel_id
          copy_of: copy_of
          open_files:
          - open_files
          - open_files
          docker_env: docker_env
          connection_count: 0
          docker_image_size: docker_image_size
          short_name: short_name
          cpu_usage: 1.4658129805029452
          pod_id: pod_id
          docker_label: docker_label
          instance_type: instance_type
          docker_image_name: docker_image_name
          user_defined_tags:
          - user_defined_tags
          - user_defined_tags
          local_networks:
          - local_networks
          - local_networks
          cloud_region: cloud_region
          kubernetes_state: kubernetes_state
          interface_names:
          - interface_names
          - interface_names
          memory_usage: 5
          open_files_count: 2
          kubernetes_public_ip: kubernetes_public_ip
          private_ip:
          - private_ip
          - private_ip
          docker_container_network_mode: docker_container_network_mode
          cloud_account_id: cloud_account_id
          kubernetes_type: kubernetes_type
          resource_group: resource_group
          docker_image_tag: docker_image_tag
          kubernetes_labels: kubernetes_labels
          docker_container_ips:
          - docker_container_ips
          - docker_container_ips
          docker_image_id: docker_image_id
          timestamp: timestamp
          interface_ips:
          - interface_ips
          - interface_ips
          availability_zone: availability_zone
          is_console_vm: true
          os: os
          local_cidr:
          - local_cidr
          - local_cidr
          node_name: node_name
          threads: 3
          cloud_provider: cloud_provider
          docker_container_command: docker_container_command
          agent_running: true
          uptime: 2
          memory_max: 5
          docker_image_created_at: docker_image_created_at
          kernel_version: kernel_version
          docker_container_state_human: docker_container_state_human
          docker_image_virtual_size: docker_image_virtual_size
          kubernetes_ingress_ip:
          - kubernetes_ingress_ip
          - kubernetes_ingress_ip
          host_name: host_name
          node_id: node_id
        adjacency:
        - adjacency
        - adjacency
        ids:
        - ids
        - ids
        id: id
        label: label
        type: type
      properties:
        adjacency:
          items:
            type: string
          type: array
        id:
          type: string
        ids:
          items:
            type: string
          type: array
        immediate_parent_id:
          type: string
        label:
          type: string
        metadata:
          $ref: '#/components/schemas/ReportMetadata'
        type:
          type: string
      type: object
    DetailedTopologyConnectionSummaries:
      additionalProperties:
        $ref: '#/components/schemas/DetailedConnectionSummary'
      type: object
    DiagnosisDiagnosticLogsLink:
      example:
        url_link: url_link
        created_at: created_at
        label: label
        message: message
        type: type
      properties:
        created_at:
          type: string
        label:
          type: string
        message:
          type: string
        type:
          type: string
        url_link:
          type: string
      type: object
    DiagnosisDiagnosticLogsStatus:
      example:
        message: message
        status: status
      properties:
        message:
          type: string
        status:
          type: string
      required:
      - status
      type: object
    DiagnosisDiagnosticNotification:
      example:
        expiry_in_secs: ""
        follow_url: ""
        updated_at: updated_at
        source_application_id: source_application_id
        content: content
      properties:
        content:
          type: string
        expiry_in_secs: {}
        follow_url: {}
        source_application_id:
          type: string
        updated_at:
          type: string
      type: object
    DiagnosisGenerateAgentDiagnosticLogsRequest:
      example:
        tail: 0
        node_ids:
        - node_type: host
          node_id: node_id
        - node_type: host
          node_id: node_id
      properties:
        node_ids:
          items:
            $ref: '#/components/schemas/DiagnosisNodeIdentifier'
          nullable: true
          type: array
        tail:
          type: integer
      required:
      - node_ids
      - tail
      type: object
    DiagnosisGenerateCloudScannerDiagnosticLogsRequest:
      example:
        tail: 0
        node_ids:
        - node_type: host
          node_id: node_id
        - node_type: host
          node_id: node_id
      properties:
        node_ids:
          items:
            $ref: '#/components/schemas/DiagnosisNodeIdentifier'
          nullable: true
          type: array
        tail:
          type: integer
      required:
      - node_ids
      - tail
      type: object
    DiagnosisGenerateConsoleDiagnosticLogsRequest:
      example:
        tail: 0
      properties:
        tail:
          type: integer
      required:
      - tail
      type: object
    DiagnosisGetDiagnosticLogsResponse:
      example:
        console_logs:
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
        agent_logs:
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
        cloud_scanner_logs:
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
        - url_link: url_link
          created_at: created_at
          label: label
          message: message
          type: type
      properties:
        agent_logs:
          items:
            $ref: '#/components/schemas/DiagnosisDiagnosticLogsLink'
          nullable: true
          type: array
        cloud_scanner_logs:
          items:
            $ref: '#/components/schemas/DiagnosisDiagnosticLogsLink'
          nullable: true
          type: array
        console_logs:
          items:
            $ref: '#/components/schemas/DiagnosisDiagnosticLogsLink'
          nullable: true
          type: array
      type: object
    DiagnosisNodeIdentifier:
      example:
        node_type: host
        node_id: node_id
      properties:
        node_id:
          type: string
        node_type:
          enum:
          - host
          - cluster
          - cloud_account
          type: string
      required:
      - node_id
      - node_type
      type: object
    FormDataModelBinUploadRequest:
      properties:
        tarball:
          $ref: '#/components/schemas/MultipartFile'
      required:
      - tarball
      type: object
    FormDataModelRegistryGCRAddReq:
      properties:
        name:
          type: string
        registry_url:
          type: string
        service_account_json:
          $ref: '#/components/schemas/MultipartFile'
      required:
      - name
      - registry_url
      - service_account_json
      type: object
    FormDataThreatintelDBUploadRequest:
      properties:
        database:
          $ref: '#/components/schemas/MultipartFile'
      required:
      - database
      type: object
    GraphCloudProviderFilter:
      example:
        account_ids:
        - account_ids
        - account_ids
      properties:
        account_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - account_ids
      type: object
    GraphIndividualThreatGraph:
      example:
        cve_id:
        - cve_id
        - cve_id
        ports:
        - ""
        - ""
        attack_path:
        - - attack_path
          - attack_path
        - - attack_path
          - attack_path
        cve_attack_vector: cve_attack_vector
      properties:
        attack_path:
          items:
            items:
              type: string
            type: array
          nullable: true
          type: array
        cve_attack_vector:
          type: string
        cve_id:
          items:
            type: string
          nullable: true
          type: array
        ports:
          items: {}
          nullable: true
          type: array
      type: object
    GraphIndividualThreatGraphRequest:
      example:
        graph_type: most_vulnerable_attack_paths
        issue_type: vulnerability
        node_ids:
        - node_ids
        - node_ids
      properties:
        graph_type:
          enum:
          - most_vulnerable_attack_paths
          - direct_internet_exposure
          - indirect_internet_exposure
          type: string
        issue_type:
          enum:
          - vulnerability
          - secret
          - malware
          - compliance
          - cloud_compliance
          type: string
        node_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - graph_type
      - issue_type
      type: object
    GraphNodeInfo:
      properties:
        cloud_compliance_count:
          type: integer
        cloud_warn_alarm_count:
          type: integer
        compliance_count:
          type: integer
        exploitable_secrets_count:
          type: integer
        exploitable_vulnerabilities_count:
          type: integer
        name:
          type: string
        node_id:
          type: string
        secrets_count:
          type: integer
        vulnerability_count:
          type: integer
        warn_alarm_count:
          type: integer
      required:
      - cloud_compliance_count
      - cloud_warn_alarm_count
      - compliance_count
      - exploitable_secrets_count
      - exploitable_vulnerabilities_count
      - name
      - node_id
      - secrets_count
      - vulnerability_count
      - warn_alarm_count
      type: object
    GraphProviderThreatGraph:
      properties:
        cloud_compliance_count:
          type: integer
        cloud_warn_alarm_count:
          type: integer
        compliance_count:
          type: integer
        exploitable_secrets_count:
          type: integer
        exploitable_vulnerabilities_count:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/GraphThreatNodeInfo'
          nullable: true
          type: array
        secrets_count:
          type: integer
        vulnerability_count:
          type: integer
        warn_alarm_count:
          type: integer
      required:
      - cloud_compliance_count
      - cloud_warn_alarm_count
      - compliance_count
      - exploitable_secrets_count
      - exploitable_vulnerabilities_count
      - resources
      - secrets_count
      - vulnerability_count
      - warn_alarm_count
      type: object
    GraphThreatFilters:
      example:
        cloud_resource_only: true
        aws_filter:
          account_ids:
          - account_ids
          - account_ids
        gcp_filter:
          account_ids:
          - account_ids
          - account_ids
        type: all
        azure_filter:
          account_ids:
          - account_ids
          - account_ids
      properties:
        aws_filter:
          $ref: '#/components/schemas/GraphCloudProviderFilter'
        azure_filter:
          $ref: '#/components/schemas/GraphCloudProviderFilter'
        cloud_resource_only:
          type: boolean
        gcp_filter:
          $ref: '#/components/schemas/GraphCloudProviderFilter'
        type:
          enum:
          - all
          - vulnerability
          - secret
          - malware
          - compliance
          - cloud_compliance
          type: string
      required:
      - aws_filter
      - azure_filter
      - cloud_resource_only
      - gcp_filter
      - type
      type: object
    GraphThreatGraph:
      additionalProperties:
        $ref: '#/components/schemas/GraphProviderThreatGraph'
      nullable: true
      type: object
    GraphThreatNodeInfo:
      properties:
        attack_path:
          items:
            items:
              type: string
            type: array
          nullable: true
          type: array
        cloud_compliance_count:
          type: integer
        cloud_warn_alarm_count:
          type: integer
        compliance_count:
          type: integer
        count:
          type: integer
        exploitable_secrets_count:
          type: integer
        exploitable_vulnerabilities_count:
          type: integer
        id:
          type: string
        label:
          type: string
        node_type:
          type: string
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/GraphNodeInfo'
          nullable: true
          type: object
        secrets_count:
          type: integer
        vulnerability_count:
          type: integer
        warn_alarm_count:
          type: integer
      required:
      - attack_path
      - cloud_compliance_count
      - cloud_warn_alarm_count
      - compliance_count
      - count
      - exploitable_secrets_count
      - exploitable_vulnerabilities_count
      - id
      - label
      - node_type
      - nodes
      - secrets_count
      - vulnerability_count
      - warn_alarm_count
      type: object
    GraphTopologyFilters:
      example:
        host_filter:
        - host_filter
        - host_filter
        field_filters:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        container_filter:
        - container_filter
        - container_filter
        cloud_filter:
        - cloud_filter
        - cloud_filter
        kubernetes_filter:
        - kubernetes_filter
        - kubernetes_filter
        pod_filter:
        - pod_filter
        - pod_filter
        region_filter:
        - region_filter
        - region_filter
        skip_connections: true
      properties:
        cloud_filter:
          items:
            type: string
          nullable: true
          type: array
        container_filter:
          items:
            type: string
          nullable: true
          type: array
        field_filters:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        host_filter:
          items:
            type: string
          nullable: true
          type: array
        kubernetes_filter:
          items:
            type: string
          nullable: true
          type: array
        pod_filter:
          items:
            type: string
          nullable: true
          type: array
        region_filter:
          items:
            type: string
          nullable: true
          type: array
        skip_connections:
          type: boolean
      required:
      - cloud_filter
      - container_filter
      - field_filters
      - host_filter
      - kubernetes_filter
      - pod_filter
      - region_filter
      - skip_connections
      type: object
    IngestersCloudCompliance:
      example:
        severity: severity
        reason: reason
        control_id: control_id
        resource: resource
        count: 0
        description: description
        cloud_provider: cloud_provider
        title: title
        type: type
        doc_id: doc_id
        compliance_check_type: compliance_check_type
        '@timestamp': '@timestamp'
        account_id: account_id
        service: service
        scan_id: scan_id
        region: region
        group: group
        status: status
      properties:
        '@timestamp':
          type: string
        account_id:
          type: string
        cloud_provider:
          type: string
        compliance_check_type:
          type: string
        control_id:
          type: string
        count:
          type: integer
        description:
          type: string
        doc_id:
          type: string
        group:
          type: string
        reason:
          type: string
        region:
          type: string
        resource:
          type: string
        scan_id:
          type: string
        service:
          type: string
        severity:
          type: string
        status:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    IngestersCloudComplianceScanStatus:
      example:
        result:
          compliance_percentage: 6.027456183070403
          alarm: 0
          skip: 2
          error: 1
          ok: 5
          info: 5
        scan_message: scan_message
        '@timestamp': 2000-01-23T04:56:07.000+00:00
        total_checks: 7
        scan_status: scan_status
        scan_id: scan_id
        type: type
        compliance_check_types:
        - compliance_check_types
        - compliance_check_types
      properties:
        '@timestamp':
          format: date-time
          type: string
        compliance_check_types:
          items:
            type: string
          nullable: true
          type: array
        result:
          $ref: '#/components/schemas/IngestersComplianceStats'
        scan_id:
          type: string
        scan_message:
          type: string
        scan_status:
          type: string
        total_checks:
          type: integer
        type:
          type: string
      type: object
    IngestersCloudResource:
      example:
        iam_instance_profile_arn: iam_instance_profile_arn
        allow_blob_public_access: true
        ingress_settings: ingress_settings
        vpc_id: vpc_id
        event_notification_configuration: ""
        ip_configuration: ""
        access_level: access_level
        path: path
        connectivity: connectivity
        policy_std: ""
        target_health_descriptions: ""
        iam_policy: ""
        action: action
        private_ip_address: private_ip_address
        id: id
        create_date: create_date
        resource_vpc_config: ""
        inline_policies: ""
        restrict_public_buckets: true
        db_cluster_identifier: db_cluster_identifier
        group: group
        target_group_arn: target_group_arn
        ignore_public_acls: true
        storage_account_name: storage_account_name
        service_name: service_name
        instance_profile_arns: ""
        users: ""
        network_interfaces: ""
        tags: ""
        security_groups: ""
        task_arn: task_arn
        block_public_acls: true
        organization_master_account_email: organization_master_account_email
        instance_id: instance_id
        public_access: public_access
        task_definition: ""
        user_id: user_id
        organization_id: organization_id
        name: name
        resources_vpc_config: ""
        attached_policy_arns: ""
        task_definition_arn: task_definition_arn
        containers: ""
        region: region
        container_definitions: ""
        instance_type: instance_type
        scheme: scheme
        instances: ""
        network_mode: network_mode
        is_egress: true
        description: description
        privilege: privilege
        network_configuration: ""
        public_network_access: public_network_access
        vpc_options: ""
        vpc_security_group_ids: ""
        arn: arn
        private_dns_name: private_dns_name
        policy: ""
        public_ips: ""
        cluster_name: cluster_name
        cluster_arn: cluster_arn
        public_ip_address: public_ip_address
        cidr_ipv4: cidr_ipv4
        last_status: last_status
        groups: ""
        user-groups: ""
        cloud_provider: cloud_provider
        vpc_security_groups: ""
        block_public_policy: true
        account_id: account_id
        iam_instance_profile_id: iam_instance_profile_id
        group_id: group_id
        organization_master_account_arn: organization_master_account_arn
        resource_id: resource_id
        bucket_policy_is_public: true
        host_name: host_name
      properties:
        access_level:
          type: string
        account_id:
          type: string
        action:
          type: string
        allow_blob_public_access:
          type: boolean
        arn:
          type: string
        attached_policy_arns: {}
        block_public_acls:
          type: boolean
        block_public_policy:
          type: boolean
        bucket_policy_is_public:
          type: boolean
        cidr_ipv4:
          type: string
        cloud_provider:
          type: string
        cluster_arn:
          type: string
        cluster_name:
          type: string
        connectivity:
          type: string
        container_definitions: {}
        containers: {}
        create_date:
          type: string
        db_cluster_identifier:
          type: string
        description:
          type: string
        event_notification_configuration: {}
        group:
          type: string
        group_id:
          type: string
        groups: {}
        host_name:
          type: string
        iam_instance_profile_arn:
          type: string
        iam_instance_profile_id:
          type: string
        iam_policy: {}
        id:
          type: string
        ignore_public_acls:
          type: boolean
        ingress_settings:
          type: string
        inline_policies: {}
        instance_id:
          type: string
        instance_profile_arns: {}
        instance_type:
          type: string
        instances: {}
        ip_configuration: {}
        is_egress:
          type: boolean
        last_status:
          type: string
        name:
          type: string
        network_configuration: {}
        network_interfaces: {}
        network_mode:
          type: string
        organization_id:
          type: string
        organization_master_account_arn:
          type: string
        organization_master_account_email:
          type: string
        path:
          type: string
        policy: {}
        policy_std: {}
        private_dns_name:
          type: string
        private_ip_address:
          type: string
        privilege:
          type: string
        public_access:
          type: string
        public_ip_address:
          type: string
        public_ips: {}
        public_network_access:
          type: string
        region:
          type: string
        resource_id:
          type: string
        resource_vpc_config: {}
        resources_vpc_config: {}
        restrict_public_buckets:
          type: boolean
        scheme:
          type: string
        security_groups: {}
        service_name:
          type: string
        storage_account_name:
          type: string
        tags: {}
        target_group_arn:
          type: string
        target_health_descriptions: {}
        task_arn:
          type: string
        task_definition: {}
        task_definition_arn:
          type: string
        user-groups: {}
        user_id:
          type: string
        users: {}
        vpc_id:
          type: string
        vpc_options: {}
        vpc_security_group_ids: {}
        vpc_security_groups: {}
      type: object
    IngestersCompliance:
      example:
        resource: resource
        description: description
        test_category: test_category
        type: type
        remediation_ansible: remediation_ansible
        compliance_check_type: compliance_check_type
        test_rationale: test_rationale
        test_severity: test_severity
        node_type: node_type
        remediation_puppet: remediation_puppet
        scan_id: scan_id
        remediation_script: remediation_script
        node_id: node_id
        status: status
        test_desc: test_desc
        test_number: test_number
      properties:
        compliance_check_type:
          type: string
        description:
          type: string
        node_id:
          type: string
        node_type:
          type: string
        remediation_ansible:
          type: string
        remediation_puppet:
          type: string
        remediation_script:
          type: string
        resource:
          type: string
        scan_id:
          type: string
        status:
          type: string
        test_category:
          type: string
        test_desc:
          type: string
        test_number:
          type: string
        test_rationale:
          type: string
        test_severity:
          type: string
        type:
          type: string
      type: object
    IngestersComplianceScanStatus:
      example:
        scan_message: scan_message
        scan_status: scan_status
        scan_id: scan_id
      properties:
        scan_id:
          type: string
        scan_message:
          type: string
        scan_status:
          type: string
      type: object
    IngestersComplianceStats:
      example:
        compliance_percentage: 6.027456183070403
        alarm: 0
        skip: 2
        error: 1
        ok: 5
        info: 5
      properties:
        alarm:
          type: integer
        compliance_percentage:
          type: number
        error:
          type: integer
        info:
          type: integer
        ok:
          type: integer
        skip:
          type: integer
      type: object
    IngestersMalware:
      example:
        summary: summary
        image_layer_id: image_layer_id
        rule_name: rule_name
        file_sev_score: 0.8008281904610115
        file_severity: file_severity
        strings_to_match:
        - strings_to_match
        - strings_to_match
        meta:
        - meta
        - meta
        complete_filename: complete_filename
        scan_id: scan_id
        class: class
        meta_rules:
          date: date
          reference: reference
          rule_id: rule_id
          filetype: filetype
          rule_name: rule_name
          author: author
          file_severity: file_severity
          description: description
          version: version
          info: info
        severity_score: 6
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        class:
          type: string
        complete_filename:
          type: string
        file_sev_score:
          type: number
        file_severity:
          type: string
        image_layer_id:
          type: string
        meta:
          items:
            type: string
          nullable: true
          type: array
        meta_rules:
          $ref: '#/components/schemas/IngestersMetaRules'
        rule_name:
          type: string
        scan_id:
          type: string
        severity_score:
          type: integer
        strings_to_match:
          items:
            type: string
          nullable: true
          type: array
        summary:
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    IngestersMalwareScanStatus:
      example:
        scan_message: scan_message
        '@timestamp': 2000-01-23T04:56:07.000+00:00
        scan_status: scan_status
        scan_id: scan_id
      properties:
        '@timestamp':
          format: date-time
          type: string
        scan_id:
          type: string
        scan_message:
          type: string
        scan_status:
          type: string
      type: object
    IngestersMetaRules:
      example:
        date: date
        reference: reference
        rule_id: rule_id
        filetype: filetype
        rule_name: rule_name
        author: author
        file_severity: file_severity
        description: description
        version: version
        info: info
      properties:
        author:
          type: string
        date:
          type: string
        description:
          type: string
        file_severity:
          type: string
        filetype:
          type: string
        info:
          type: string
        reference:
          type: string
        rule_id:
          type: string
        rule_name:
          type: string
        version:
          type: string
      type: object
    IngestersReportIngestionData:
      example:
        hosts:
        - key: ""
        - key: ""
        host_batch:
        - key: ""
        - key: ""
        kubernetes_cluster_edge_batch:
        - key: ""
        - key: ""
        process_batch:
        - key: ""
        - key: ""
        container_image_edge_batch:
        - key: ""
        - key: ""
        num_merged: 0
        container_process_edge_batch:
        - key: ""
        - key: ""
        pod_batch:
        - key: ""
        - key: ""
        process_edges_batch:
        - key: ""
        - key: ""
        container_edges_batch:
        - key: ""
        - key: ""
        container_batch:
        - key: ""
        - key: ""
        container_image_batch:
        - key: ""
        - key: ""
        kubernetes_cluster_batch:
        - key: ""
        - key: ""
        pod_edges_batch:
        - key: ""
        - key: ""
        endpoint_edges_batch:
        - key: ""
        - key: ""
        pod_host_edges_batch:
        - key: ""
        - key: ""
      properties:
        container_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        container_edges_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        container_image_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        container_image_edge_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        container_process_edge_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        endpoint_edges_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        host_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        hosts:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        kubernetes_cluster_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        kubernetes_cluster_edge_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        num_merged:
          type: integer
        pod_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        pod_edges_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        pod_host_edges_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        process_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
        process_edges_batch:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
      required:
      - container_batch
      - container_edges_batch
      - container_image_batch
      - container_image_edge_batch
      - container_process_edge_batch
      - endpoint_edges_batch
      - host_batch
      - hosts
      - kubernetes_cluster_batch
      - kubernetes_cluster_edge_batch
      - num_merged
      - pod_batch
      - pod_edges_batch
      - pod_host_edges_batch
      - process_batch
      - process_edges_batch
      type: object
    IngestersSecret:
      example:
        ImageLayerId: ImageLayerId
        Severity:
          score: 5.637376656633329
          level: level
        Rule:
          part: part
          name: name
          signature_to_match: signature_to_match
          id: 5
        scan_id: scan_id
        Match:
          full_filename: full_filename
          matched_content: matched_content
          relative_ending_index: 0
          starting_index: 1
          relative_starting_index: 6
      properties:
        ImageLayerId:
          type: string
        Match:
          $ref: '#/components/schemas/IngestersSecret_Match'
        Rule:
          $ref: '#/components/schemas/IngestersSecret_Rule'
        Severity:
          $ref: '#/components/schemas/IngestersSecret_Severity'
        scan_id:
          type: string
      type: object
    IngestersSecretScanStatus:
      example:
        scan_message: scan_message
        scan_status: scan_status
        scan_id: scan_id
      properties:
        scan_id:
          type: string
        scan_message:
          type: string
        scan_status:
          type: string
      type: object
    IngestersVulnerability:
      example:
        parsed_attack_vector: parsed_attack_vector
        cve_container_layer: cve_container_layer
        cve_description: cve_description
        cve_overall_score: 6.027456183070403
        cve_caused_by_package: cve_caused_by_package
        cve_attack_vector: cve_attack_vector
        cve_cvss_score: 0.8008281904610115
        urls:
        - urls
        - urls
        cve_severity: cve_severity
        cve_caused_by_package_path: cve_caused_by_package_path
        cve_id: cve_id
        exploit_poc: exploit_poc
        cve_type: cve_type
        has_live_connection: true
        cve_fixed_in: cve_fixed_in
        init_exploitability_score: 5
        scan_id: scan_id
        cve_link: cve_link
        exploitability_score: 1
      properties:
        cve_attack_vector:
          type: string
        cve_caused_by_package:
          type: string
        cve_caused_by_package_path:
          type: string
        cve_container_layer:
          type: string
        cve_cvss_score:
          type: number
        cve_description:
          type: string
        cve_fixed_in:
          type: string
        cve_id:
          type: string
        cve_link:
          type: string
        cve_overall_score:
          type: number
        cve_severity:
          type: string
        cve_type:
          type: string
        exploit_poc:
          type: string
        exploitability_score:
          type: integer
        has_live_connection:
          type: boolean
        init_exploitability_score:
          type: integer
        parsed_attack_vector:
          type: string
        scan_id:
          type: string
        urls:
          items:
            type: string
          nullable: true
          type: array
      type: object
    IngestersVulnerabilityScanStatus:
      example:
        scan_message: scan_message
        scan_status: scan_status
        scan_id: scan_id
      properties:
        scan_id:
          type: string
        scan_message:
          type: string
        scan_status:
          type: string
      type: object
    LookupLookupFilter:
      example:
        in_field_filter:
        - in_field_filter
        - in_field_filter
        window:
          offset: 0
          size: 6
        node_ids:
        - node_ids
        - node_ids
      properties:
        in_field_filter:
          items:
            type: string
          nullable: true
          type: array
        node_ids:
          items:
            type: string
          nullable: true
          type: array
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - in_field_filter
      - node_ids
      - window
      type: object
    ModelAPIAuthRequest:
      example:
        api_token: api_token
      properties:
        api_token:
          type: string
      required:
      - api_token
      type: object
    ModelAPITokenResponse:
      example:
        company_id: 0
        api_token: api_token
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        created_by_user_id: 6
      properties:
        api_token:
          type: string
        company_id:
          type: integer
        created_at:
          format: date-time
          type: string
        created_by_user_id:
          type: integer
        id:
          type: integer
        name:
          type: string
      type: object
    ModelAddGenerativeAiBedrockIntegration:
      example:
        aws_region: us-east-1
        aws_access_key: aws_access_key
        model_id: anthropic.claude-v2
        aws_secret_key: aws_secret_key
        use_iam_role: true
      properties:
        aws_access_key:
          type: string
        aws_region:
          enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-southeast-3
          - ca-central-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-south-1
          - eu-north-1
          - me-south-1
          - me-central-1
          - sa-east-1
          - us-gov-east-1
          - us-gov-west-1
          type: string
        aws_secret_key:
          type: string
        model_id:
          enum:
          - anthropic.claude-v2
          - anthropic.claude-instant-v1
          - amazon.titan-text-lite-v1
          - amazon.titan-text-express-v1
          - ai21.j2-ultra-v1
          - ai21.j2-mid-v1
          - meta.llama2-13b-chat-v1
          - cohere.command-text-v14
          - cohere.command-light-text-v14
          type: string
        use_iam_role:
          type: boolean
      required:
      - aws_region
      - model_id
      type: object
    ModelAddGenerativeAiOpenAIIntegration:
      example:
        api_key: api_key
        model_id: gpt-4
      properties:
        api_key:
          type: string
        model_id:
          enum:
          - gpt-4
          type: string
      required:
      - api_key
      - model_id
      type: object
    ModelAddScheduledTaskRequest:
      example:
        is_priority: true
        benchmark_types:
        - benchmark_types
        - benchmark_types
        scan_config:
        - language: base
        - language: base
        cron_expr: cron_expr
        action: SecretScan
        description: description
        filters:
          container_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          cloud_account_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          image_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          kubernetes_cluster_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          host_scan_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        action:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
        benchmark_types:
          items:
            type: string
          nullable: true
          type: array
        cron_expr:
          type: string
        description:
          type: string
        filters:
          $ref: '#/components/schemas/ModelScanFilter'
        is_priority:
          type: boolean
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
        scan_config:
          items:
            $ref: '#/components/schemas/ModelVulnerabilityScanConfigLanguage'
          nullable: true
          type: array
      required:
      - action
      - benchmark_types
      - filters
      - node_ids
      - scan_config
      type: object
    ModelAgentID:
      example:
        available_workload: 0
        node_id: node_id
      properties:
        available_workload:
          type: integer
        node_id:
          type: string
      required:
      - available_workload
      - node_id
      type: object
    ModelAgentPluginDisable:
      example:
        plugin_name: plugin_name
        node_id: node_id
      properties:
        node_id:
          type: string
        plugin_name:
          type: string
      required:
      - node_id
      - plugin_name
      type: object
    ModelAgentPluginEnable:
      example:
        plugin_name: plugin_name
        version: version
        node_id: node_id
      properties:
        node_id:
          type: string
        plugin_name:
          type: string
        version:
          type: string
      required:
      - node_id
      - plugin_name
      - version
      type: object
    ModelAgentUpgrade:
      example:
        version: version
        node_ids:
        - node_ids
        - node_ids
      properties:
        node_ids:
          items:
            type: string
          nullable: true
          type: array
        version:
          type: string
      required:
      - node_ids
      - version
      type: object
    ModelBasicNode:
      example:
        node_type: node_type
        name: name
        host_name: host_name
        node_id: node_id
      properties:
        host_name:
          type: string
        name:
          type: string
        node_id:
          type: string
        node_type:
          type: string
      required:
      - host_name
      - name
      - node_id
      - node_type
      type: object
    ModelBulkDeleteReportReq:
      example:
        report_ids:
        - report_ids
        - report_ids
      properties:
        report_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - report_ids
      type: object
    ModelBulkDeleteScansRequest:
      example:
        scan_type: Secret
        filters:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
      properties:
        filters:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        scan_type:
          enum:
          - Secret
          - Vulnerability
          - Malware
          - Compliance
          - CloudCompliance
          type: string
      required:
      - filters
      - scan_type
      type: object
    ModelCloudAccountDeleteReq:
      example:
        node_ids:
        - node_ids
        - node_ids
      properties:
        node_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - node_ids
      type: object
    ModelCloudAccountRefreshReq:
      example:
        node_ids:
        - node_ids
        - node_ids
      properties:
        node_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - node_ids
      type: object
    ModelCloudCompliance:
      example:
        severity: severity
        reason: reason
        control_id: control_id
        resource: resource
        masked: true
        count: 0
        node_name: node_name
        description: description
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        cloud_provider: cloud_provider
        title: title
        type: type
        compliance_check_type: compliance_check_type
        account_id: account_id
        updated_at: 6
        service: service
        region: region
        group: group
        node_id: node_id
        status: status
      properties:
        account_id:
          type: string
        cloud_provider:
          type: string
        compliance_check_type:
          type: string
        control_id:
          type: string
        count:
          type: integer
        description:
          type: string
        group:
          type: string
        masked:
          type: boolean
        node_id:
          type: string
        node_name:
          type: string
        reason:
          type: string
        region:
          type: string
        resource:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        service:
          type: string
        severity:
          type: string
        status:
          type: string
        title:
          type: string
        type:
          type: string
        updated_at:
          type: integer
      required:
      - account_id
      - cloud_provider
      - compliance_check_type
      - control_id
      - count
      - description
      - group
      - masked
      - node_id
      - node_name
      - reason
      - region
      - resource
      - service
      - severity
      - status
      - title
      - type
      - updated_at
      type: object
    ModelCloudComplianceBenchmark:
      example:
        controls:
        - controls
        - controls
        compliance_type: compliance_type
        id: id
      properties:
        compliance_type:
          type: string
        controls:
          items:
            type: string
          nullable: true
          type: array
        id:
          type: string
      type: object
    ModelCloudComplianceScanDetails:
      example:
        account_id: account_id
        stop_requested: true
        benchmarks:
        - controls:
          - controls
          - controls
          compliance_type: compliance_type
          id: id
        - controls:
          - controls
          - controls
          compliance_type: compliance_type
          id: id
        scan_id: scan_id
        scan_types:
        - scan_types
        - scan_types
      properties:
        account_id:
          type: string
        benchmarks:
          items:
            $ref: '#/components/schemas/ModelCloudComplianceBenchmark'
          nullable: true
          type: array
        scan_id:
          type: string
        scan_types:
          items:
            type: string
          nullable: true
          type: array
        stop_requested:
          type: boolean
      type: object
    ModelCloudComplianceScanResult:
      example:
        benchmark_type:
        - benchmark_type
        - benchmark_type
        docker_container_name: docker_container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 6
        cloud_account_id: cloud_account_id
        compliances:
        - severity: severity
          reason: reason
          control_id: control_id
          resource: resource
          masked: true
          count: 0
          node_name: node_name
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cloud_provider: cloud_provider
          title: title
          type: type
          compliance_check_type: compliance_check_type
          account_id: account_id
          updated_at: 6
          service: service
          region: region
          group: group
          node_id: node_id
          status: status
        - severity: severity
          reason: reason
          control_id: control_id
          resource: resource
          masked: true
          count: 0
          node_name: node_name
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cloud_provider: cloud_provider
          title: title
          type: type
          compliance_check_type: compliance_check_type
          account_id: account_id
          updated_at: 6
          service: service
          region: region
          group: group
          node_id: node_id
          status: status
        compliance_percentage: 0.8008281904610115
        node_type: node_type
        updated_at: 5
        scan_id: scan_id
        status_counts:
          key: 1
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        benchmark_type:
          items:
            type: string
          nullable: true
          type: array
        cloud_account_id:
          type: string
        compliance_percentage:
          type: number
        compliances:
          items:
            $ref: '#/components/schemas/ModelCloudCompliance'
          nullable: true
          type: array
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        status_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - benchmark_type
      - cloud_account_id
      - compliance_percentage
      - compliances
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - node_id
      - node_name
      - node_type
      - scan_id
      - status_counts
      - updated_at
      type: object
    ModelCloudNodeAccountInfo:
      example:
        last_scan_status: last_scan_status
        compliance_percentage: 0.8008281904610115
        last_scan_id: last_scan_id
        node_name: node_name
        active: true
        cloud_provider: cloud_provider
        scan_status_map:
          key: 6
        host_node_id: host_node_id
        version: version
        node_id: node_id
      properties:
        active:
          type: boolean
        cloud_provider:
          type: string
        compliance_percentage:
          type: number
        host_node_id:
          type: string
        last_scan_id:
          type: string
        last_scan_status:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        scan_status_map:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        version:
          type: string
      type: object
    ModelCloudNodeAccountRegisterReq:
      example:
        cloud_account: cloud_account
        monitored_account_ids:
          key: monitored_account_ids
        org_acc_id: org_acc_id
        cloud_provider: aws
        version: version
        node_id: node_id
      properties:
        cloud_account:
          type: string
        cloud_provider:
          enum:
          - aws
          - gcp
          - azure
          type: string
        monitored_account_ids:
          additionalProperties:
            type: string
          nullable: true
          type: object
        node_id:
          type: string
        org_acc_id:
          type: string
        version:
          type: string
      required:
      - cloud_account
      - cloud_provider
      - node_id
      type: object
    ModelCloudNodeAccountRegisterResp:
      example:
        data:
          cloudtrail_trails:
          - account_id: account_id
            trail_name: trail_name
          - account_id: account_id
            trail_name: trail_name
          log_action:
            id: 0
            request_payload: request_payload
          scans:
            key:
              account_id: account_id
              stop_requested: true
              benchmarks:
              - controls:
                - controls
                - controls
                compliance_type: compliance_type
                id: id
              - controls:
                - controls
                - controls
                compliance_type: compliance_type
                id: id
              scan_id: scan_id
              scan_types:
              - scan_types
              - scan_types
          refresh: refresh
      properties:
        data:
          $ref: '#/components/schemas/ModelCloudNodeAccountRegisterRespData'
      type: object
    ModelCloudNodeAccountRegisterRespData:
      example:
        cloudtrail_trails:
        - account_id: account_id
          trail_name: trail_name
        - account_id: account_id
          trail_name: trail_name
        log_action:
          id: 0
          request_payload: request_payload
        scans:
          key:
            account_id: account_id
            stop_requested: true
            benchmarks:
            - controls:
              - controls
              - controls
              compliance_type: compliance_type
              id: id
            - controls:
              - controls
              - controls
              compliance_type: compliance_type
              id: id
            scan_id: scan_id
            scan_types:
            - scan_types
            - scan_types
        refresh: refresh
      properties:
        cloudtrail_trails:
          items:
            $ref: '#/components/schemas/ModelCloudNodeCloudtrailTrail'
          nullable: true
          type: array
        log_action:
          $ref: '#/components/schemas/ControlsAction'
        refresh:
          type: string
        scans:
          additionalProperties:
            $ref: '#/components/schemas/ModelCloudComplianceScanDetails'
          nullable: true
          type: object
      type: object
    ModelCloudNodeAccountsListReq:
      example:
        cloud_provider: cloud_provider
        window:
          offset: 0
          size: 6
      properties:
        cloud_provider:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - window
      type: object
    ModelCloudNodeAccountsListResp:
      example:
        total: 1
        cloud_node_accounts_info:
        - last_scan_status: last_scan_status
          compliance_percentage: 0.8008281904610115
          last_scan_id: last_scan_id
          node_name: node_name
          active: true
          cloud_provider: cloud_provider
          scan_status_map:
            key: 6
          host_node_id: host_node_id
          version: version
          node_id: node_id
        - last_scan_status: last_scan_status
          compliance_percentage: 0.8008281904610115
          last_scan_id: last_scan_id
          node_name: node_name
          active: true
          cloud_provider: cloud_provider
          scan_status_map:
            key: 6
          host_node_id: host_node_id
          version: version
          node_id: node_id
      properties:
        cloud_node_accounts_info:
          items:
            $ref: '#/components/schemas/ModelCloudNodeAccountInfo'
          nullable: true
          type: array
        total:
          type: integer
      required:
      - cloud_node_accounts_info
      - total
      type: object
    ModelCloudNodeCloudtrailTrail:
      example:
        account_id: account_id
        trail_name: trail_name
      properties:
        account_id:
          type: string
        trail_name:
          type: string
      type: object
    ModelCloudNodeComplianceControl:
      example:
        category_hierarchy:
        - category_hierarchy
        - category_hierarchy
        control_id: control_id
        service: service
        description: description
        title: title
        enabled: true
      properties:
        category_hierarchy:
          items:
            type: string
          nullable: true
          type: array
        control_id:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        service:
          type: string
        title:
          type: string
      type: object
    ModelCloudNodeControlReq:
      example:
        cloud_provider: aws
        compliance_type: compliance_type
        node_id: node_id
      properties:
        cloud_provider:
          enum:
          - aws
          - gcp
          - azure
          - linux
          - kubernetes
          type: string
        compliance_type:
          type: string
        node_id:
          type: string
      required:
      - cloud_provider
      - compliance_type
      type: object
    ModelCloudNodeControlResp:
      example:
        controls:
        - category_hierarchy:
          - category_hierarchy
          - category_hierarchy
          control_id: control_id
          service: service
          description: description
          title: title
          enabled: true
        - category_hierarchy:
          - category_hierarchy
          - category_hierarchy
          control_id: control_id
          service: service
          description: description
          title: title
          enabled: true
      properties:
        controls:
          items:
            $ref: '#/components/schemas/ModelCloudNodeComplianceControl'
          nullable: true
          type: array
      type: object
    ModelCloudNodeEnableDisableReq:
      example:
        control_ids:
        - control_ids
        - control_ids
        node_id: node_id
      properties:
        control_ids:
          items:
            type: string
          nullable: true
          type: array
        node_id:
          type: string
      type: object
    ModelCloudNodeProvidersListResp:
      example:
        providers:
        - node_count_inactive: 1
          compliance_percentage: 0.8008281904610115
          node_label: node_label
          name: name
          scan_count: 5
          node_count: 6
          resource_count: 5
        - node_count_inactive: 1
          compliance_percentage: 0.8008281904610115
          node_label: node_label
          name: name
          scan_count: 5
          node_count: 6
          resource_count: 5
      properties:
        providers:
          items:
            $ref: '#/components/schemas/ModelPostureProvider'
          nullable: true
          type: array
      required:
      - providers
      type: object
    ModelCloudResource:
      example:
        cloud_compliances_count: 0
        account_id: account_id
        cloud_compliance_latest_scan_id: cloud_compliance_latest_scan_id
        node_type: node_type
        cloud_compliance_scan_status: cloud_compliance_scan_status
        cloud_region: cloud_region
        node_name: node_name
        cloud_provider: cloud_provider
        type_label: type_label
        node_id: node_id
      properties:
        account_id:
          type: string
        cloud_compliance_latest_scan_id:
          type: string
        cloud_compliance_scan_status:
          type: string
        cloud_compliances_count:
          type: integer
        cloud_provider:
          type: string
        cloud_region:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        type_label:
          type: string
      required:
      - account_id
      - cloud_compliance_latest_scan_id
      - cloud_compliance_scan_status
      - cloud_compliances_count
      - cloud_provider
      - cloud_region
      - node_id
      - node_name
      - node_type
      - type_label
      type: object
    ModelCompliance:
      example:
        resource: resource
        masked: true
        description: description
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        test_category: test_category
        remediation_ansible: remediation_ansible
        compliance_check_type: compliance_check_type
        rule_id: rule_id
        test_rationale: test_rationale
        test_severity: test_severity
        node_type: node_type
        updated_at: 0
        remediation_puppet: remediation_puppet
        remediation_script: remediation_script
        node_id: node_id
        status: status
        test_desc: test_desc
        test_number: test_number
      properties:
        compliance_check_type:
          type: string
        description:
          type: string
        masked:
          type: boolean
        node_id:
          type: string
        node_type:
          type: string
        remediation_ansible:
          type: string
        remediation_puppet:
          type: string
        remediation_script:
          type: string
        resource:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        rule_id:
          type: string
        status:
          type: string
        test_category:
          type: string
        test_desc:
          type: string
        test_number:
          type: string
        test_rationale:
          type: string
        test_severity:
          type: string
        updated_at:
          type: integer
      required:
      - compliance_check_type
      - description
      - masked
      - node_id
      - node_type
      - remediation_ansible
      - remediation_puppet
      - remediation_script
      - resource
      - rule_id
      - status
      - test_category
      - test_desc
      - test_number
      - test_rationale
      - test_severity
      - updated_at
      type: object
    ModelComplianceRule:
      example:
        test_rationale: test_rationale
        test_severity: test_severity
        updated_at: 0
        masked: true
        description: description
        test_category: test_category
        test_desc: test_desc
        test_number: test_number
      properties:
        description:
          type: string
        masked:
          type: boolean
        test_category:
          type: string
        test_desc:
          type: string
        test_number:
          type: string
        test_rationale:
          type: string
        test_severity:
          type: string
        updated_at:
          type: integer
      required:
      - description
      - masked
      - test_category
      - test_desc
      - test_number
      - test_rationale
      - test_severity
      - updated_at
      type: object
    ModelComplianceScanInfo:
      example:
        severity_counts:
          key: 6
        status_message: status_message
        node_type: node_type
        benchmark_types:
        - benchmark_types
        - benchmark_types
        updated_at: 1
        node_name: node_name
        created_at: 0
        scan_id: scan_id
        node_id: node_id
        status: status
      properties:
        benchmark_types:
          items:
            type: string
          nullable: true
          type: array
        created_at:
          format: int64
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        severity_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        status:
          type: string
        status_message:
          type: string
        updated_at:
          format: int64
          type: integer
      required:
      - benchmark_types
      - created_at
      - node_id
      - node_name
      - node_type
      - scan_id
      - severity_counts
      - status
      - status_message
      - updated_at
      type: object
    ModelComplianceScanResult:
      example:
        benchmark_type:
        - benchmark_type
        - benchmark_type
        docker_container_name: docker_container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 6
        cloud_account_id: cloud_account_id
        compliances:
        - resource: resource
          masked: true
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          test_category: test_category
          remediation_ansible: remediation_ansible
          compliance_check_type: compliance_check_type
          rule_id: rule_id
          test_rationale: test_rationale
          test_severity: test_severity
          node_type: node_type
          updated_at: 0
          remediation_puppet: remediation_puppet
          remediation_script: remediation_script
          node_id: node_id
          status: status
          test_desc: test_desc
          test_number: test_number
        - resource: resource
          masked: true
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          test_category: test_category
          remediation_ansible: remediation_ansible
          compliance_check_type: compliance_check_type
          rule_id: rule_id
          test_rationale: test_rationale
          test_severity: test_severity
          node_type: node_type
          updated_at: 0
          remediation_puppet: remediation_puppet
          remediation_script: remediation_script
          node_id: node_id
          status: status
          test_desc: test_desc
          test_number: test_number
        compliance_percentage: 0.8008281904610115
        node_type: node_type
        updated_at: 5
        scan_id: scan_id
        status_counts:
          key: 1
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        benchmark_type:
          items:
            type: string
          nullable: true
          type: array
        cloud_account_id:
          type: string
        compliance_percentage:
          type: number
        compliances:
          items:
            $ref: '#/components/schemas/ModelCompliance'
          nullable: true
          type: array
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        status_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - benchmark_type
      - cloud_account_id
      - compliance_percentage
      - compliances
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - node_id
      - node_name
      - node_type
      - scan_id
      - status_counts
      - updated_at
      type: object
    ModelComplianceScanStatusResp:
      example:
        statuses:
        - severity_counts:
            key: 6
          status_message: status_message
          node_type: node_type
          benchmark_types:
          - benchmark_types
          - benchmark_types
          updated_at: 1
          node_name: node_name
          created_at: 0
          scan_id: scan_id
          node_id: node_id
          status: status
        - severity_counts:
            key: 6
          status_message: status_message
          node_type: node_type
          benchmark_types:
          - benchmark_types
          - benchmark_types
          updated_at: 1
          node_name: node_name
          created_at: 0
          scan_id: scan_id
          node_id: node_id
          status: status
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/ModelComplianceScanInfo'
          nullable: true
          type: array
      required:
      - statuses
      type: object
    ModelComplianceScanTriggerReq:
      example:
        is_priority: true
        benchmark_types:
        - benchmark_types
        - benchmark_types
        filters:
          container_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          cloud_account_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          image_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          kubernetes_cluster_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          host_scan_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        benchmark_types:
          items:
            type: string
          nullable: true
          type: array
        filters:
          $ref: '#/components/schemas/ModelScanFilter'
        is_priority:
          type: boolean
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
      required:
      - benchmark_types
      - filters
      - node_ids
      type: object
    ModelConnection:
      example:
        count: 9
        node_name: node_name
        ips:
        - ""
        - ""
        node_id: node_id
      properties:
        count:
          type: integer
        ips:
          items: {}
          nullable: true
          type: array
        node_id:
          type: string
        node_name:
          type: string
      type: object
    ModelContainer:
      example:
        vulnerabilities_count: 6
        secrets_count: 1
        docker_container_state: docker_container_state
        cpu_max: 0.8008281904610115
        memory_usage: 5
        secret_latest_scan_id: secret_latest_scan_id
        docker_container_network_mode: docker_container_network_mode
        vulnerability_latest_scan_id: vulnerability_latest_scan_id
        malware_scan_status: malware_scan_status
        docker_container_ips:
        - ""
        - ""
        docker_labels:
          key: ""
        image: null
        processes:
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        secret_scan_status: secret_scan_status
        docker_container_name: docker_container_name
        docker_container_created: docker_container_created
        malware_latest_scan_id: malware_latest_scan_id
        malwares_count: 1
        node_name: node_name
        docker_container_networks: docker_container_networks
        docker_container_command: docker_container_command
        uptime: 1
        memory_max: 5
        docker_container_ports: docker_container_ports
        docker_container_state_human: docker_container_state_human
        cpu_usage: 6.027456183070403
        vulnerability_scan_status: vulnerability_scan_status
        host_name: host_name
        node_id: node_id
      properties:
        cpu_max:
          type: number
        cpu_usage:
          type: number
        docker_container_command:
          type: string
        docker_container_created:
          type: string
        docker_container_ips:
          items: {}
          nullable: true
          type: array
        docker_container_name:
          type: string
        docker_container_network_mode:
          type: string
        docker_container_networks:
          type: string
        docker_container_ports:
          type: string
        docker_container_state:
          type: string
        docker_container_state_human:
          type: string
        docker_labels:
          additionalProperties: {}
          nullable: true
          type: object
        host_name:
          type: string
        image:
          $ref: '#/components/schemas/ModelContainerImage'
        malware_latest_scan_id:
          type: string
        malware_scan_status:
          type: string
        malwares_count:
          type: integer
        memory_max:
          type: integer
        memory_usage:
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
        secret_latest_scan_id:
          type: string
        secret_scan_status:
          type: string
        secrets_count:
          type: integer
        uptime:
          type: integer
        vulnerabilities_count:
          type: integer
        vulnerability_latest_scan_id:
          type: string
        vulnerability_scan_status:
          type: string
      required:
      - cpu_max
      - cpu_usage
      - docker_container_command
      - docker_container_created
      - docker_container_ips
      - docker_container_name
      - docker_container_network_mode
      - docker_container_networks
      - docker_container_ports
      - docker_container_state
      - docker_container_state_human
      - docker_labels
      - host_name
      - image
      - malware_latest_scan_id
      - malware_scan_status
      - malwares_count
      - memory_max
      - memory_usage
      - node_id
      - node_name
      - processes
      - secret_latest_scan_id
      - secret_scan_status
      - secrets_count
      - uptime
      - vulnerabilities_count
      - vulnerability_latest_scan_id
      - vulnerability_scan_status
      type: object
    ModelContainerImage:
      example:
        metadata:
          key: ""
        secret_scan_status: secret_scan_status
        vulnerabilities_count: 4
        secrets_count: 1
        malware_latest_scan_id: malware_latest_scan_id
        malwares_count: 7
        node_name: node_name
        secret_latest_scan_id: secret_latest_scan_id
        vulnerability_latest_scan_id: vulnerability_latest_scan_id
        docker_image_created_at: docker_image_created_at
        docker_image_tag: docker_image_tag
        malware_scan_status: malware_scan_status
        docker_image_size: docker_image_size
        image_node_id: image_node_id
        docker_image_virtual_size: docker_image_virtual_size
        containers:
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        docker_image_id: docker_image_id
        vulnerability_scan_status: vulnerability_scan_status
        docker_image_name: docker_image_name
        docker_image_tag_list:
        - docker_image_tag_list
        - docker_image_tag_list
        node_id: node_id
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ModelContainer'
          nullable: true
          type: array
        docker_image_created_at:
          type: string
        docker_image_id:
          type: string
        docker_image_name:
          type: string
        docker_image_size:
          type: string
        docker_image_tag:
          type: string
        docker_image_tag_list:
          items:
            type: string
          nullable: true
          type: array
        docker_image_virtual_size:
          type: string
        image_node_id:
          type: string
        malware_latest_scan_id:
          type: string
        malware_scan_status:
          type: string
        malwares_count:
          type: integer
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
        node_id:
          type: string
        node_name:
          type: string
        secret_latest_scan_id:
          type: string
        secret_scan_status:
          type: string
        secrets_count:
          type: integer
        vulnerabilities_count:
          type: integer
        vulnerability_latest_scan_id:
          type: string
        vulnerability_scan_status:
          type: string
      required:
      - containers
      - docker_image_created_at
      - docker_image_id
      - docker_image_name
      - docker_image_size
      - docker_image_tag
      - docker_image_tag_list
      - docker_image_virtual_size
      - image_node_id
      - malware_latest_scan_id
      - malware_scan_status
      - malwares_count
      - node_id
      - node_name
      - secret_latest_scan_id
      - secret_scan_status
      - secrets_count
      - vulnerabilities_count
      - vulnerability_latest_scan_id
      - vulnerability_scan_status
      type: object
    ModelDeleteIntegrationReq:
      example:
        integration_ids:
        - 0
        - 0
      properties:
        integration_ids:
          items:
            type: integer
          nullable: true
          type: array
      required:
      - integration_ids
      type: object
    ModelDeleteRegistryBulkReq:
      example:
        registry_ids:
        - registry_ids
        - registry_ids
      properties:
        registry_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - registry_ids
      type: object
    ModelDownloadReportResponse:
      example:
        url_link: url_link
      properties:
        url_link:
          type: string
      type: object
    ModelDownloadScanResultsResponse:
      example:
        scan_results:
        - ""
        - ""
        scan_info:
          cloud_account_id: cloud_account_id
          node_type: node_type
          docker_container_name: docker_container_name
          updated_at: 6
          kubernetes_cluster_name: kubernetes_cluster_name
          node_name: node_name
          created_at: 0
          scan_id: scan_id
          docker_image_name: docker_image_name
          host_name: host_name
          node_id: node_id
      properties:
        scan_info:
          $ref: '#/components/schemas/ModelScanResultsCommon'
        scan_results:
          items: {}
          nullable: true
          type: array
      type: object
    ModelEmailConfigurationAdd:
      example:
        email_id: email_id
        password: password
        smtp: smtp
        apikey: apikey
        port: port
        email_provider: email_provider
        amazon_secret_key: amazon_secret_key
        amazon_access_key: amazon_access_key
        created_by_user_id: 0
        ses_region: ses_region
      properties:
        amazon_access_key:
          type: string
        amazon_secret_key:
          type: string
        apikey:
          type: string
        created_by_user_id:
          type: integer
        email_id:
          type: string
        email_provider:
          type: string
        password:
          type: string
        port:
          type: string
        ses_region:
          type: string
        smtp:
          type: string
      type: object
    ModelEmailConfigurationResp:
      example:
        email_id: email_id
        smtp: smtp
        port: port
        email_provider: email_provider
        id: 6
        created_by_user_id: 0
        ses_region: ses_region
      properties:
        created_by_user_id:
          type: integer
        email_id:
          type: string
        email_provider:
          type: string
        id:
          type: integer
        port:
          type: string
        ses_region:
          type: string
        smtp:
          type: string
      type: object
    ModelExportReport:
      example:
        to_timestamp: 1
        updated_at: 5
        storage_path: storage_path
        report_id: report_id
        created_at: 0
        from_timestamp: 6
        filters: filters
        type: type
        url: url
        status: status
      properties:
        created_at:
          type: integer
        filters:
          type: string
        from_timestamp:
          type: integer
        report_id:
          type: string
        status:
          type: string
        storage_path:
          type: string
        to_timestamp:
          type: integer
        type:
          type: string
        updated_at:
          type: integer
        url:
          type: string
      type: object
    ModelFetchWindow:
      example:
        offset: 0
        size: 6
      properties:
        offset:
          type: integer
        size:
          type: integer
      required:
      - offset
      - size
      type: object
    ModelFiltersReq:
      example:
        having:
          key: ""
        filters:
        - filters
        - filters
      properties:
        filters:
          items:
            type: string
          nullable: true
          type: array
        having:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - filters
      type: object
    ModelFiltersResult:
      example:
        filters:
          key:
          - filters
          - filters
      properties:
        filters:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
      required:
      - filters
      type: object
    ModelGenerateLicenseRequest:
      example:
        last_name: last_name
        company: company
        resend_email: true
        first_name: first_name
        email: email
      properties:
        company:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        resend_email:
          type: boolean
      required:
      - company
      - email
      - first_name
      - last_name
      - resend_email
      type: object
    ModelGenerateLicenseResponse:
      example:
        success: true
        generate_license_link: generate_license_link
        message: message
      properties:
        generate_license_link:
          type: string
        message:
          type: string
        success:
          type: boolean
      required:
      - message
      - success
      type: object
    ModelGenerateReportReq:
      example:
        to_timestamp: 6
        options:
          sbom_format: syft-json@11.0.1
        from_timestamp: 0
        filters:
          include_dead_nodes: true
          node_type: host
          most_exploitable_report: true
          advanced_report_filters:
            image_name:
            - image_name
            - image_name
            container_name:
            - container_name
            - container_name
            scan_status:
            - scan_status
            - scan_status
            kubernetes_cluster_name:
            - kubernetes_cluster_name
            - kubernetes_cluster_name
            masked:
            - true
            - true
            host_name:
            - host_name
            - host_name
            node_id:
            - node_id
            - node_id
            pod_name:
            - pod_name
            - pod_name
          scan_type: vulnerability
          scan_id: scan_id
          severity_or_check_type:
          - severity_or_check_type
          - severity_or_check_type
        report_type: pdf
      properties:
        filters:
          $ref: '#/components/schemas/UtilsReportFilters'
        from_timestamp:
          type: integer
        options:
          $ref: '#/components/schemas/UtilsReportOptions'
        report_type:
          enum:
          - pdf
          - xlsx
          - sbom
          type: string
        to_timestamp:
          type: integer
      required:
      - report_type
      type: object
    ModelGenerateReportResp:
      example:
        report_id: report_id
      properties:
        report_id:
          type: string
      type: object
    ModelGenerativeAiIntegrationCloudPostureRequest:
      example:
        integration_id: 0
        remediation_format: all
        service: service
        cloud_provider: cloud_provider
        query_type: remediation
        title: title
        compliance_check_type: compliance_check_type
        group: group
      properties:
        cloud_provider:
          type: string
        compliance_check_type:
          type: string
        group:
          type: string
        integration_id:
          type: integer
        query_type:
          enum:
          - remediation
          type: string
        remediation_format:
          enum:
          - all
          - cli
          - pulumi
          - terraform
          type: string
        service:
          type: string
        title:
          type: string
      required:
      - cloud_provider
      - compliance_check_type
      - query_type
      - remediation_format
      - title
      type: object
    ModelGenerativeAiIntegrationKubernetesPostureRequest:
      example:
        integration_id: 0
        remediation_format: all
        description: description
        query_type: remediation
        compliance_check_type: compliance_check_type
      properties:
        compliance_check_type:
          type: string
        description:
          type: string
        integration_id:
          type: integer
        query_type:
          enum:
          - remediation
          type: string
        remediation_format:
          enum:
          - all
          - cli
          - pulumi
          - terraform
          type: string
      required:
      - compliance_check_type
      - description
      - query_type
      - remediation_format
      type: object
    ModelGenerativeAiIntegrationLinuxPostureRequest:
      example:
        integration_id: 0
        remediation_format: all
        description: description
        query_type: remediation
        compliance_check_type: compliance_check_type
        test_number: test_number
      properties:
        compliance_check_type:
          type: string
        description:
          type: string
        integration_id:
          type: integer
        query_type:
          enum:
          - remediation
          type: string
        remediation_format:
          enum:
          - all
          - cli
          - pulumi
          - terraform
          type: string
        test_number:
          type: string
      required:
      - compliance_check_type
      - description
      - query_type
      - remediation_format
      - test_number
      type: object
    ModelGenerativeAiIntegrationListResponse:
      example:
        default_integration: true
        id: 0
        label: label
        integration_type: integration_type
        last_error_msg: last_error_msg
      properties:
        default_integration:
          type: boolean
        id:
          type: integer
        integration_type:
          type: string
        label:
          type: string
        last_error_msg:
          type: string
      type: object
    ModelGenerativeAiIntegrationMalwareRequest:
      example:
        integration_id: 0
        rule_name: rule_name
        query_type: remediation
        info: info
      properties:
        info:
          type: string
        integration_id:
          type: integer
        query_type:
          enum:
          - remediation
          type: string
        rule_name:
          type: string
      required:
      - info
      - query_type
      - rule_name
      type: object
    ModelGenerativeAiIntegrationSecretRequest:
      example:
        integration_id: 0
        name: name
        query_type: remediation
      properties:
        integration_id:
          type: integer
        name:
          type: string
        query_type:
          enum:
          - remediation
          type: string
      required:
      - name
      - query_type
      type: object
    ModelGenerativeAiIntegrationVulnerabilityRequest:
      example:
        integration_id: 0
        remediation_format: all
        cve_id: cve_id
        cve_type: cve_type
        query_type: remediation
        cve_caused_by_package: cve_caused_by_package
      properties:
        cve_caused_by_package:
          type: string
        cve_id:
          type: string
        cve_type:
          type: string
        integration_id:
          type: integer
        query_type:
          enum:
          - remediation
          type: string
        remediation_format:
          enum:
          - all
          - cli
          - pulumi
          - terraform
          type: string
      required:
      - cve_caused_by_package
      - cve_id
      - cve_type
      - query_type
      - remediation_format
      type: object
    ModelGetAgentBinaryDownloadURLResponse:
      example:
        agent_binary_arm64_download_url: agent_binary_arm64_download_url
        agent_binary_amd64_download_url: agent_binary_amd64_download_url
        start_agent_script_download_url: start_agent_script_download_url
        uninstall_agent_script_download_url: uninstall_agent_script_download_url
      properties:
        agent_binary_amd64_download_url:
          type: string
        agent_binary_arm64_download_url:
          type: string
        start_agent_script_download_url:
          type: string
        uninstall_agent_script_download_url:
          type: string
      type: object
    ModelGetAuditLogsRequest:
      example:
        window:
          offset: 0
          size: 6
      properties:
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - window
      type: object
    ModelGraphResult:
      example:
        nodes:
          key:
            immediate_parent_id: immediate_parent_id
            metadata:
              docker_image_name_with_tag: docker_image_name_with_tag
              kubernetes_ip: kubernetes_ip
              public_ip:
              - public_ip
              - public_ip
              kubernetes_cluster_name: kubernetes_cluster_name
              docker_container_state: docker_container_state
              cpu_max: 6.027456183070403
              pid: 7
              kubernetes_created: kubernetes_created
              kubernetes_namespace: kubernetes_namespace
              cmdline: cmdline
              node_type: node_type
              interface_ip_map: interface_ip_map
              pseudo: true
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              kubernetes_cluster_id: kubernetes_cluster_id
              docker_container_networks: docker_container_networks
              kubernetes_ports:
              - kubernetes_ports
              - kubernetes_ports
              version: version
              pod_name: pod_name
              ppid: 9
              tags:
              - tags
              - tags
              docker_container_ports: docker_container_ports
              kubernetes_is_in_host_network: true
              instance_id: instance_id
              kernel_id: kernel_id
              copy_of: copy_of
              open_files:
              - open_files
              - open_files
              docker_env: docker_env
              connection_count: 0
              docker_image_size: docker_image_size
              short_name: short_name
              cpu_usage: 1.4658129805029452
              pod_id: pod_id
              docker_label: docker_label
              instance_type: instance_type
              docker_image_name: docker_image_name
              user_defined_tags:
              - user_defined_tags
              - user_defined_tags
              local_networks:
              - local_networks
              - local_networks
              cloud_region: cloud_region
              kubernetes_state: kubernetes_state
              interface_names:
              - interface_names
              - interface_names
              memory_usage: 5
              open_files_count: 2
              kubernetes_public_ip: kubernetes_public_ip
              private_ip:
              - private_ip
              - private_ip
              docker_container_network_mode: docker_container_network_mode
              cloud_account_id: cloud_account_id
              kubernetes_type: kubernetes_type
              resource_group: resource_group
              docker_image_tag: docker_image_tag
              kubernetes_labels: kubernetes_labels
              docker_container_ips:
              - docker_container_ips
              - docker_container_ips
              docker_image_id: docker_image_id
              timestamp: timestamp
              interface_ips:
              - interface_ips
              - interface_ips
              availability_zone: availability_zone
              is_console_vm: true
              os: os
              local_cidr:
              - local_cidr
              - local_cidr
              node_name: node_name
              threads: 3
              cloud_provider: cloud_provider
              docker_container_command: docker_container_command
              agent_running: true
              uptime: 2
              memory_max: 5
              docker_image_created_at: docker_image_created_at
              kernel_version: kernel_version
              docker_container_state_human: docker_container_state_human
              docker_image_virtual_size: docker_image_virtual_size
              kubernetes_ingress_ip:
              - kubernetes_ingress_ip
              - kubernetes_ingress_ip
              host_name: host_name
              node_id: node_id
            adjacency:
            - adjacency
            - adjacency
            ids:
            - ids
            - ids
            id: id
            label: label
            type: type
        edges:
          key:
            source: source
            target: target
      properties:
        edges:
          additionalProperties:
            $ref: '#/components/schemas/DetailedConnectionSummary'
          type: object
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/DetailedNodeSummary'
          type: object
      required:
      - edges
      - nodes
      type: object
    ModelHost:
      example:
        vulnerabilities_count: 1
        public_ip:
        - ""
        - ""
        secrets_count: 7
        cloud_region: cloud_region
        container_images:
        - metadata:
            key: ""
          secret_scan_status: secret_scan_status
          vulnerabilities_count: 4
          secrets_count: 1
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 7
          node_name: node_name
          secret_latest_scan_id: secret_latest_scan_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          docker_image_created_at: docker_image_created_at
          docker_image_tag: docker_image_tag
          malware_scan_status: malware_scan_status
          docker_image_size: docker_image_size
          image_node_id: image_node_id
          docker_image_virtual_size: docker_image_virtual_size
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          docker_image_id: docker_image_id
          vulnerability_scan_status: vulnerability_scan_status
          docker_image_name: docker_image_name
          docker_image_tag_list:
          - docker_image_tag_list
          - docker_image_tag_list
          node_id: node_id
        - metadata:
            key: ""
          secret_scan_status: secret_scan_status
          vulnerabilities_count: 4
          secrets_count: 1
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 7
          node_name: node_name
          secret_latest_scan_id: secret_latest_scan_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          docker_image_created_at: docker_image_created_at
          docker_image_tag: docker_image_tag
          malware_scan_status: malware_scan_status
          docker_image_size: docker_image_size
          image_node_id: image_node_id
          docker_image_virtual_size: docker_image_virtual_size
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          docker_image_id: docker_image_id
          vulnerability_scan_status: vulnerability_scan_status
          docker_image_name: docker_image_name
          docker_image_tag_list:
          - docker_image_tag_list
          - docker_image_tag_list
          node_id: node_id
        cpu_max: 1.4658129805029452
        memory_usage: 4
        private_ip:
        - ""
        - ""
        secret_latest_scan_id: secret_latest_scan_id
        exploitable_vulnerabilities_count: 7
        cloud_account_id: cloud_account_id
        vulnerability_latest_scan_id: vulnerability_latest_scan_id
        resource_group: resource_group
        malware_scan_status: malware_scan_status
        exploitable_malwares_count: 5
        inbound_connections:
        - count: 9
          node_name: node_name
          ips:
          - ""
          - ""
          node_id: node_id
        - count: 9
          node_name: node_name
          ips:
          - ""
          - ""
          node_id: node_id
        availability_zone: availability_zone
        is_console_vm: true
        processes:
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        secret_scan_status: secret_scan_status
        compliance_scan_status: compliance_scan_status
        outbound_connections:
        - count: 9
          node_name: node_name
          ips:
          - ""
          - ""
          node_id: node_id
        - count: 9
          node_name: node_name
          ips:
          - ""
          - ""
          node_id: node_id
        os: os
        local_cidr:
        - ""
        - ""
        malware_latest_scan_id: malware_latest_scan_id
        malwares_count: 3
        node_name: node_name
        cloud_provider: cloud_provider
        agent_running: true
        cloud_warn_alarm_count: 0
        exploitable_secrets_count: 2
        version: version
        uptime: 1
        memory_max: 2
        instance_id: instance_id
        kernel_id: kernel_id
        compliances_count: 6
        kernel_version: kernel_version
        compliance_latest_scan_id: compliance_latest_scan_id
        warn_alarm_count: 1
        containers:
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        pods:
        - kubernetes_ip: kubernetes_ip
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          kubernetes_cluster_id: kubernetes_cluster_id
          kubernetes_cluster_name: kubernetes_cluster_name
          kubernetes_state: kubernetes_state
          node_name: node_name
          kubernetes_created: kubernetes_created
          pod_name: pod_name
          kubernetes_namespace: kubernetes_namespace
          kubernetes_is_in_host_network: true
          malware_scan_status: malware_scan_status
          kubernetes_labels:
            key: ""
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        - kubernetes_ip: kubernetes_ip
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          kubernetes_cluster_id: kubernetes_cluster_id
          kubernetes_cluster_name: kubernetes_cluster_name
          kubernetes_state: kubernetes_state
          node_name: node_name
          kubernetes_created: kubernetes_created
          pod_name: pod_name
          kubernetes_namespace: kubernetes_namespace
          kubernetes_is_in_host_network: true
          malware_scan_status: malware_scan_status
          kubernetes_labels:
            key: ""
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        cpu_usage: 5.962133916683182
        instance_type: instance_type
        vulnerability_scan_status: vulnerability_scan_status
        host_name: host_name
        local_networks:
        - ""
        - ""
        node_id: node_id
      properties:
        agent_running:
          type: boolean
        availability_zone:
          type: string
        cloud_account_id:
          type: string
        cloud_provider:
          type: string
        cloud_region:
          type: string
        cloud_warn_alarm_count:
          type: integer
        compliance_latest_scan_id:
          type: string
        compliance_scan_status:
          type: string
        compliances_count:
          type: integer
        container_images:
          items:
            $ref: '#/components/schemas/ModelContainerImage'
          nullable: true
          type: array
        containers:
          items:
            $ref: '#/components/schemas/ModelContainer'
          nullable: true
          type: array
        cpu_max:
          type: number
        cpu_usage:
          type: number
        exploitable_malwares_count:
          type: integer
        exploitable_secrets_count:
          type: integer
        exploitable_vulnerabilities_count:
          type: integer
        host_name:
          type: string
        inbound_connections:
          items:
            $ref: '#/components/schemas/ModelConnection'
          nullable: true
          type: array
        instance_id:
          type: string
        instance_type:
          type: string
        is_console_vm:
          type: boolean
        kernel_id:
          type: string
        kernel_version:
          type: string
        local_cidr:
          items: {}
          nullable: true
          type: array
        local_networks:
          items: {}
          nullable: true
          type: array
        malware_latest_scan_id:
          type: string
        malware_scan_status:
          type: string
        malwares_count:
          type: integer
        memory_max:
          type: integer
        memory_usage:
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        os:
          type: string
        outbound_connections:
          items:
            $ref: '#/components/schemas/ModelConnection'
          nullable: true
          type: array
        pods:
          items:
            $ref: '#/components/schemas/ModelPod'
          nullable: true
          type: array
        private_ip:
          items: {}
          nullable: true
          type: array
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
        public_ip:
          items: {}
          nullable: true
          type: array
        resource_group:
          type: string
        secret_latest_scan_id:
          type: string
        secret_scan_status:
          type: string
        secrets_count:
          type: integer
        uptime:
          type: integer
        version:
          type: string
        vulnerabilities_count:
          type: integer
        vulnerability_latest_scan_id:
          type: string
        vulnerability_scan_status:
          type: string
        warn_alarm_count:
          type: integer
      required:
      - agent_running
      - availability_zone
      - cloud_account_id
      - cloud_provider
      - cloud_region
      - cloud_warn_alarm_count
      - compliance_latest_scan_id
      - compliance_scan_status
      - compliances_count
      - container_images
      - containers
      - cpu_max
      - cpu_usage
      - exploitable_malwares_count
      - exploitable_secrets_count
      - exploitable_vulnerabilities_count
      - host_name
      - inbound_connections
      - instance_id
      - instance_type
      - is_console_vm
      - kernel_id
      - kernel_version
      - local_cidr
      - local_networks
      - malware_latest_scan_id
      - malware_scan_status
      - malwares_count
      - memory_max
      - memory_usage
      - node_id
      - node_name
      - os
      - outbound_connections
      - pods
      - private_ip
      - processes
      - public_ip
      - resource_group
      - secret_latest_scan_id
      - secret_scan_status
      - secrets_count
      - uptime
      - version
      - vulnerabilities_count
      - vulnerability_latest_scan_id
      - vulnerability_scan_status
      - warn_alarm_count
      type: object
    ModelImageStub:
      example:
        images: 0
        name: name
        id: id
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        images:
          type: integer
        name:
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ModelInitAgentReq:
      example:
        available_workload: 0
        version: version
        node_id: node_id
      properties:
        available_workload:
          type: integer
        node_id:
          type: string
        version:
          type: string
      required:
      - available_workload
      - node_id
      - version
      type: object
    ModelIntegrationAddReq:
      example:
        notification_type: notification_type
        filters:
          fields_filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          container_names:
          - container_names
          - container_names
          node_ids:
          - node_type: image
            node_id: node_id
          - node_type: image
            node_id: node_id
        integration_type: integration_type
        config:
          key: ""
      properties:
        config:
          additionalProperties: {}
          nullable: true
          type: object
        filters:
          $ref: '#/components/schemas/ModelIntegrationFilters'
        integration_type:
          type: string
        notification_type:
          type: string
      required:
      - integration_type
      - notification_type
      type: object
    ModelIntegrationFilters:
      example:
        fields_filters:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        container_names:
        - container_names
        - container_names
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        container_names:
          items:
            type: string
          nullable: true
          type: array
        fields_filters:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
      required:
      - node_ids
      type: object
    ModelIntegrationListResp:
      example:
        notification_type: notification_type
        filters:
          fields_filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          container_names:
          - container_names
          - container_names
          node_ids:
          - node_type: image
            node_id: node_id
          - node_type: image
            node_id: node_id
        id: 0
        integration_type: integration_type
        config:
          key: ""
        last_error_msg: last_error_msg
      properties:
        config:
          additionalProperties: {}
          nullable: true
          type: object
        filters:
          $ref: '#/components/schemas/ModelIntegrationFilters'
        id:
          type: integer
        integration_type:
          type: string
        last_error_msg:
          type: string
        notification_type:
          type: string
      type: object
    ModelIntegrationUpdateReq:
      example:
        notification_type: notification_type
        filters:
          fields_filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          container_names:
          - container_names
          - container_names
          node_ids:
          - node_type: image
            node_id: node_id
          - node_type: image
            node_id: node_id
        id: 0
        integration_type: integration_type
        config:
          key: ""
      properties:
        config:
          additionalProperties: {}
          nullable: true
          type: object
        filters:
          $ref: '#/components/schemas/ModelIntegrationFilters'
        id:
          type: integer
        integration_type:
          type: string
        notification_type:
          type: string
      type: object
    ModelInviteUserRequest:
      example:
        role: admin
        action: send-invite-email
        email: email
      properties:
        action:
          enum:
          - send-invite-email
          - get-invite-link
          type: string
        email:
          type: string
        role:
          enum:
          - admin
          - standard-user
          - read-only-user
          type: string
      required:
      - action
      - email
      - role
      type: object
    ModelInviteUserResponse:
      example:
        invite_expiry_hours: 0
        invite_url: invite_url
        message: message
      properties:
        invite_expiry_hours:
          type: integer
        invite_url:
          type: string
        message:
          type: string
      type: object
    ModelKubernetesCluster:
      example:
        hosts:
        - vulnerabilities_count: 1
          public_ip:
          - ""
          - ""
          secrets_count: 7
          cloud_region: cloud_region
          container_images:
          - metadata:
              key: ""
            secret_scan_status: secret_scan_status
            vulnerabilities_count: 4
            secrets_count: 1
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 7
            node_name: node_name
            secret_latest_scan_id: secret_latest_scan_id
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            docker_image_created_at: docker_image_created_at
            docker_image_tag: docker_image_tag
            malware_scan_status: malware_scan_status
            docker_image_size: docker_image_size
            image_node_id: image_node_id
            docker_image_virtual_size: docker_image_virtual_size
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            docker_image_id: docker_image_id
            vulnerability_scan_status: vulnerability_scan_status
            docker_image_name: docker_image_name
            docker_image_tag_list:
            - docker_image_tag_list
            - docker_image_tag_list
            node_id: node_id
          - metadata:
              key: ""
            secret_scan_status: secret_scan_status
            vulnerabilities_count: 4
            secrets_count: 1
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 7
            node_name: node_name
            secret_latest_scan_id: secret_latest_scan_id
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            docker_image_created_at: docker_image_created_at
            docker_image_tag: docker_image_tag
            malware_scan_status: malware_scan_status
            docker_image_size: docker_image_size
            image_node_id: image_node_id
            docker_image_virtual_size: docker_image_virtual_size
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            docker_image_id: docker_image_id
            vulnerability_scan_status: vulnerability_scan_status
            docker_image_name: docker_image_name
            docker_image_tag_list:
            - docker_image_tag_list
            - docker_image_tag_list
            node_id: node_id
          cpu_max: 1.4658129805029452
          memory_usage: 4
          private_ip:
          - ""
          - ""
          secret_latest_scan_id: secret_latest_scan_id
          exploitable_vulnerabilities_count: 7
          cloud_account_id: cloud_account_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          resource_group: resource_group
          malware_scan_status: malware_scan_status
          exploitable_malwares_count: 5
          inbound_connections:
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          availability_zone: availability_zone
          is_console_vm: true
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          compliance_scan_status: compliance_scan_status
          outbound_connections:
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          os: os
          local_cidr:
          - ""
          - ""
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 3
          node_name: node_name
          cloud_provider: cloud_provider
          agent_running: true
          cloud_warn_alarm_count: 0
          exploitable_secrets_count: 2
          version: version
          uptime: 1
          memory_max: 2
          instance_id: instance_id
          kernel_id: kernel_id
          compliances_count: 6
          kernel_version: kernel_version
          compliance_latest_scan_id: compliance_latest_scan_id
          warn_alarm_count: 1
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          pods:
          - kubernetes_ip: kubernetes_ip
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            kubernetes_cluster_id: kubernetes_cluster_id
            kubernetes_cluster_name: kubernetes_cluster_name
            kubernetes_state: kubernetes_state
            node_name: node_name
            kubernetes_created: kubernetes_created
            pod_name: pod_name
            kubernetes_namespace: kubernetes_namespace
            kubernetes_is_in_host_network: true
            malware_scan_status: malware_scan_status
            kubernetes_labels:
              key: ""
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - kubernetes_ip: kubernetes_ip
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            kubernetes_cluster_id: kubernetes_cluster_id
            kubernetes_cluster_name: kubernetes_cluster_name
            kubernetes_state: kubernetes_state
            node_name: node_name
            kubernetes_created: kubernetes_created
            pod_name: pod_name
            kubernetes_namespace: kubernetes_namespace
            kubernetes_is_in_host_network: true
            malware_scan_status: malware_scan_status
            kubernetes_labels:
              key: ""
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          cpu_usage: 5.962133916683182
          instance_type: instance_type
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          local_networks:
          - ""
          - ""
          node_id: node_id
        - vulnerabilities_count: 1
          public_ip:
          - ""
          - ""
          secrets_count: 7
          cloud_region: cloud_region
          container_images:
          - metadata:
              key: ""
            secret_scan_status: secret_scan_status
            vulnerabilities_count: 4
            secrets_count: 1
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 7
            node_name: node_name
            secret_latest_scan_id: secret_latest_scan_id
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            docker_image_created_at: docker_image_created_at
            docker_image_tag: docker_image_tag
            malware_scan_status: malware_scan_status
            docker_image_size: docker_image_size
            image_node_id: image_node_id
            docker_image_virtual_size: docker_image_virtual_size
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            docker_image_id: docker_image_id
            vulnerability_scan_status: vulnerability_scan_status
            docker_image_name: docker_image_name
            docker_image_tag_list:
            - docker_image_tag_list
            - docker_image_tag_list
            node_id: node_id
          - metadata:
              key: ""
            secret_scan_status: secret_scan_status
            vulnerabilities_count: 4
            secrets_count: 1
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 7
            node_name: node_name
            secret_latest_scan_id: secret_latest_scan_id
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            docker_image_created_at: docker_image_created_at
            docker_image_tag: docker_image_tag
            malware_scan_status: malware_scan_status
            docker_image_size: docker_image_size
            image_node_id: image_node_id
            docker_image_virtual_size: docker_image_virtual_size
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            docker_image_id: docker_image_id
            vulnerability_scan_status: vulnerability_scan_status
            docker_image_name: docker_image_name
            docker_image_tag_list:
            - docker_image_tag_list
            - docker_image_tag_list
            node_id: node_id
          cpu_max: 1.4658129805029452
          memory_usage: 4
          private_ip:
          - ""
          - ""
          secret_latest_scan_id: secret_latest_scan_id
          exploitable_vulnerabilities_count: 7
          cloud_account_id: cloud_account_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          resource_group: resource_group
          malware_scan_status: malware_scan_status
          exploitable_malwares_count: 5
          inbound_connections:
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          availability_zone: availability_zone
          is_console_vm: true
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          compliance_scan_status: compliance_scan_status
          outbound_connections:
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          - count: 9
            node_name: node_name
            ips:
            - ""
            - ""
            node_id: node_id
          os: os
          local_cidr:
          - ""
          - ""
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 3
          node_name: node_name
          cloud_provider: cloud_provider
          agent_running: true
          cloud_warn_alarm_count: 0
          exploitable_secrets_count: 2
          version: version
          uptime: 1
          memory_max: 2
          instance_id: instance_id
          kernel_id: kernel_id
          compliances_count: 6
          kernel_version: kernel_version
          compliance_latest_scan_id: compliance_latest_scan_id
          warn_alarm_count: 1
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          pods:
          - kubernetes_ip: kubernetes_ip
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            kubernetes_cluster_id: kubernetes_cluster_id
            kubernetes_cluster_name: kubernetes_cluster_name
            kubernetes_state: kubernetes_state
            node_name: node_name
            kubernetes_created: kubernetes_created
            pod_name: pod_name
            kubernetes_namespace: kubernetes_namespace
            kubernetes_is_in_host_network: true
            malware_scan_status: malware_scan_status
            kubernetes_labels:
              key: ""
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - kubernetes_ip: kubernetes_ip
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            kubernetes_cluster_id: kubernetes_cluster_id
            kubernetes_cluster_name: kubernetes_cluster_name
            kubernetes_state: kubernetes_state
            node_name: node_name
            kubernetes_created: kubernetes_created
            pod_name: pod_name
            kubernetes_namespace: kubernetes_namespace
            kubernetes_is_in_host_network: true
            malware_scan_status: malware_scan_status
            kubernetes_labels:
              key: ""
            containers:
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            - vulnerabilities_count: 6
              secrets_count: 1
              docker_container_state: docker_container_state
              cpu_max: 0.8008281904610115
              memory_usage: 5
              secret_latest_scan_id: secret_latest_scan_id
              docker_container_network_mode: docker_container_network_mode
              vulnerability_latest_scan_id: vulnerability_latest_scan_id
              malware_scan_status: malware_scan_status
              docker_container_ips:
              - ""
              - ""
              docker_labels:
                key: ""
              image: null
              processes:
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              - memory_max: 9
                cmdline: cmdline
                cpu_max: 2.3021358869347655
                node_name: node_name
                memory_usage: 3
                open_files_count: 2
                threads: 1
                pid: 4
                short_name: short_name
                cpu_usage: 7.061401241503109
                node_id: node_id
                ppid: 7
              secret_scan_status: secret_scan_status
              docker_container_name: docker_container_name
              docker_container_created: docker_container_created
              malware_latest_scan_id: malware_latest_scan_id
              malwares_count: 1
              node_name: node_name
              docker_container_networks: docker_container_networks
              docker_container_command: docker_container_command
              uptime: 1
              memory_max: 5
              docker_container_ports: docker_container_ports
              docker_container_state_human: docker_container_state_human
              cpu_usage: 6.027456183070403
              vulnerability_scan_status: vulnerability_scan_status
              host_name: host_name
              node_id: node_id
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          cpu_usage: 5.962133916683182
          instance_type: instance_type
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          local_networks:
          - ""
          - ""
          node_id: node_id
        node_name: node_name
        agent_running: true
        node_id: node_id
      properties:
        agent_running:
          type: boolean
        hosts:
          items:
            $ref: '#/components/schemas/ModelHost'
          nullable: true
          type: array
        node_id:
          type: string
        node_name:
          type: string
      required:
      - agent_running
      - hosts
      - node_id
      - node_name
      type: object
    ModelLicense:
      example:
        end_date: end_date
        no_of_registries: 5
        notification_threshold_percentage: 2
        current_hosts: 0
        is_active: true
        license_type: license_type
        notification_threshold_updated_at: 7
        registry_credentials:
          registry_url: registry_url
          password: password
          username: username
        description: description
        no_of_hosts: 1
        no_of_images_in_registry: 5
        message: message
        deepfence_support_email: deepfence_support_email
        license_email: license_email
        no_of_cloud_accounts: 6
        license_email_domain: license_email_domain
        key: key
        start_date: start_date
      properties:
        current_hosts:
          type: integer
        deepfence_support_email:
          type: string
        description:
          type: string
        end_date:
          type: string
        is_active:
          type: boolean
        key:
          type: string
        license_email:
          type: string
        license_email_domain:
          type: string
        license_type:
          type: string
        message:
          type: string
        no_of_cloud_accounts:
          type: integer
        no_of_hosts:
          type: integer
        no_of_images_in_registry:
          type: integer
        no_of_registries:
          type: integer
        notification_threshold_percentage:
          type: integer
        notification_threshold_updated_at:
          type: integer
        registry_credentials:
          $ref: '#/components/schemas/ModelRegistryCredentials'
        start_date:
          type: string
      type: object
    ModelListAgentVersionResp:
      example:
        versions:
        - versions
        - versions
      properties:
        versions:
          items:
            type: string
          nullable: true
          type: array
      required:
      - versions
      type: object
    ModelLoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
    ModelLoginResponse:
      example:
        access_token: access_token
        refresh_token: refresh_token
        email_domain: email_domain
        license_registered: true
        onboarding_required: true
        password_invalidated: true
        license_key: license_key
      properties:
        access_token:
          type: string
        email_domain:
          type: string
        license_key:
          type: string
        license_registered:
          type: boolean
        onboarding_required:
          type: boolean
        password_invalidated:
          type: boolean
        refresh_token:
          type: string
      required:
      - access_token
      - email_domain
      - license_key
      - license_registered
      - onboarding_required
      - password_invalidated
      - refresh_token
      type: object
    ModelMalware:
      example:
        date: date
        summary: summary
        filetype: filetype
        image_layer_id: image_layer_id
        rule_name: rule_name
        author: author
        masked: true
        file_sev_score: 0
        file_severity: file_severity
        strings_to_match:
        - ""
        - ""
        description: description
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        version: version
        rule_id: rule_id
        complete_filename: complete_filename
        class: class
        info: info
        node_id: node_id
        severity_score: 6
      properties:
        author:
          type: string
        class:
          type: string
        complete_filename:
          type: string
        date:
          type: string
        description:
          type: string
        file_sev_score:
          type: integer
        file_severity:
          type: string
        filetype:
          type: string
        image_layer_id:
          type: string
        info:
          type: string
        masked:
          type: boolean
        node_id:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        rule_id:
          type: string
        rule_name:
          type: string
        severity_score:
          type: integer
        strings_to_match:
          items: {}
          nullable: true
          type: array
        summary:
          type: string
        version:
          type: string
      required:
      - class
      - complete_filename
      - file_sev_score
      - file_severity
      - image_layer_id
      - masked
      - node_id
      - rule_id
      - rule_name
      type: object
    ModelMalwareRule:
      example:
        date: date
        reference: reference
        rule_id: rule_id
        filetype: filetype
        updated_at: 0
        rule_name: rule_name
        author: author
        masked: true
        file_severity: file_severity
        description: description
        version: version
        info: info
      properties:
        author:
          type: string
        date:
          type: string
        description:
          type: string
        file_severity:
          type: string
        filetype:
          type: string
        info:
          type: string
        masked:
          type: boolean
        reference:
          type: string
        rule_id:
          type: string
        rule_name:
          type: string
        updated_at:
          type: integer
        version:
          type: string
      required:
      - masked
      - updated_at
      type: object
    ModelMalwareScanResult:
      example:
        severity_counts:
          key: 6
        docker_container_name: docker_container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 0
        cloud_account_id: cloud_account_id
        node_type: node_type
        updated_at: 1
        scan_id: scan_id
        malwares:
        - date: date
          summary: summary
          filetype: filetype
          image_layer_id: image_layer_id
          rule_name: rule_name
          author: author
          masked: true
          file_sev_score: 0
          file_severity: file_severity
          strings_to_match:
          - ""
          - ""
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          version: version
          rule_id: rule_id
          complete_filename: complete_filename
          class: class
          info: info
          node_id: node_id
          severity_score: 6
        - date: date
          summary: summary
          filetype: filetype
          image_layer_id: image_layer_id
          rule_name: rule_name
          author: author
          masked: true
          file_sev_score: 0
          file_severity: file_severity
          strings_to_match:
          - ""
          - ""
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          version: version
          rule_id: rule_id
          complete_filename: complete_filename
          class: class
          info: info
          node_id: node_id
          severity_score: 6
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        cloud_account_id:
          type: string
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        malwares:
          items:
            $ref: '#/components/schemas/ModelMalware'
          nullable: true
          type: array
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        severity_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - cloud_account_id
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - malwares
      - node_id
      - node_name
      - node_type
      - scan_id
      - severity_counts
      - updated_at
      type: object
    ModelMalwareScanResultClass:
      example:
        class:
        - class
        - class
      properties:
        class:
          items:
            type: string
          nullable: true
          type: array
      required:
      - class
      type: object
    ModelMalwareScanResultRules:
      example:
        rules:
        - rules
        - rules
      properties:
        rules:
          items:
            type: string
          nullable: true
          type: array
      required:
      - rules
      type: object
    ModelMalwareScanTriggerReq:
      example:
        is_priority: true
        filters:
          container_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          cloud_account_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          image_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          kubernetes_cluster_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          host_scan_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        filters:
          $ref: '#/components/schemas/ModelScanFilter'
        is_priority:
          type: boolean
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
      required:
      - filters
      - node_ids
      type: object
    ModelMessageResponse:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    ModelNodeIdentifier:
      example:
        node_type: image
        node_id: node_id
      properties:
        node_id:
          type: string
        node_type:
          enum:
          - image
          - host
          - container
          - cloud_account
          - cluster
          - registry
          - pod
          type: string
      required:
      - node_id
      - node_type
      type: object
    ModelNodesInScanResultRequest:
      example:
        result_ids:
        - result_ids
        - result_ids
        scan_type: SecretScan
      properties:
        result_ids:
          items:
            type: string
          nullable: true
          type: array
        scan_type:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
      required:
      - result_ids
      - scan_type
      type: object
    ModelPasswordResetRequest:
      example:
        email: email
      properties:
        email:
          type: string
      required:
      - email
      type: object
    ModelPasswordResetVerifyRequest:
      example:
        password: password
        code: code
        namespace: namespace
      properties:
        code:
          type: string
        namespace:
          type: string
        password:
          type: string
      required:
      - code
      - namespace
      - password
      type: object
    ModelPod:
      example:
        kubernetes_ip: kubernetes_ip
        processes:
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        - memory_max: 9
          cmdline: cmdline
          cpu_max: 2.3021358869347655
          node_name: node_name
          memory_usage: 3
          open_files_count: 2
          threads: 1
          pid: 4
          short_name: short_name
          cpu_usage: 7.061401241503109
          node_id: node_id
          ppid: 7
        secret_scan_status: secret_scan_status
        kubernetes_cluster_id: kubernetes_cluster_id
        kubernetes_cluster_name: kubernetes_cluster_name
        kubernetes_state: kubernetes_state
        node_name: node_name
        kubernetes_created: kubernetes_created
        pod_name: pod_name
        kubernetes_namespace: kubernetes_namespace
        kubernetes_is_in_host_network: true
        malware_scan_status: malware_scan_status
        kubernetes_labels:
          key: ""
        containers:
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        - vulnerabilities_count: 6
          secrets_count: 1
          docker_container_state: docker_container_state
          cpu_max: 0.8008281904610115
          memory_usage: 5
          secret_latest_scan_id: secret_latest_scan_id
          docker_container_network_mode: docker_container_network_mode
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          malware_scan_status: malware_scan_status
          docker_container_ips:
          - ""
          - ""
          docker_labels:
            key: ""
          image: null
          processes:
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          - memory_max: 9
            cmdline: cmdline
            cpu_max: 2.3021358869347655
            node_name: node_name
            memory_usage: 3
            open_files_count: 2
            threads: 1
            pid: 4
            short_name: short_name
            cpu_usage: 7.061401241503109
            node_id: node_id
            ppid: 7
          secret_scan_status: secret_scan_status
          docker_container_name: docker_container_name
          docker_container_created: docker_container_created
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 1
          node_name: node_name
          docker_container_networks: docker_container_networks
          docker_container_command: docker_container_command
          uptime: 1
          memory_max: 5
          docker_container_ports: docker_container_ports
          docker_container_state_human: docker_container_state_human
          cpu_usage: 6.027456183070403
          vulnerability_scan_status: vulnerability_scan_status
          host_name: host_name
          node_id: node_id
        vulnerability_scan_status: vulnerability_scan_status
        host_name: host_name
        node_id: node_id
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ModelContainer'
          nullable: true
          type: array
        host_name:
          type: string
        kubernetes_cluster_id:
          type: string
        kubernetes_cluster_name:
          type: string
        kubernetes_created:
          type: string
        kubernetes_ip:
          type: string
        kubernetes_is_in_host_network:
          type: boolean
        kubernetes_labels:
          additionalProperties: {}
          nullable: true
          type: object
        kubernetes_namespace:
          type: string
        kubernetes_state:
          type: string
        malware_scan_status:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        pod_name:
          type: string
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
        secret_scan_status:
          type: string
        vulnerability_scan_status:
          type: string
      required:
      - containers
      - host_name
      - kubernetes_cluster_id
      - kubernetes_cluster_name
      - kubernetes_created
      - kubernetes_ip
      - kubernetes_is_in_host_network
      - kubernetes_labels
      - kubernetes_namespace
      - kubernetes_state
      - malware_scan_status
      - node_id
      - node_name
      - pod_name
      - processes
      - secret_scan_status
      - vulnerability_scan_status
      type: object
    ModelPostureProvider:
      example:
        node_count_inactive: 1
        compliance_percentage: 0.8008281904610115
        node_label: node_label
        name: name
        scan_count: 5
        node_count: 6
        resource_count: 5
      properties:
        compliance_percentage:
          type: number
        name:
          type: string
        node_count:
          type: integer
        node_count_inactive:
          type: integer
        node_label:
          type: string
        resource_count:
          type: integer
        scan_count:
          type: integer
      type: object
    ModelProcess:
      example:
        memory_max: 9
        cmdline: cmdline
        cpu_max: 2.3021358869347655
        node_name: node_name
        memory_usage: 3
        open_files_count: 2
        threads: 1
        pid: 4
        short_name: short_name
        cpu_usage: 7.061401241503109
        node_id: node_id
        ppid: 7
      properties:
        cmdline:
          type: string
        cpu_max:
          type: number
        cpu_usage:
          type: number
        memory_max:
          type: integer
        memory_usage:
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        open_files_count:
          type: integer
        pid:
          type: integer
        ppid:
          type: integer
        short_name:
          type: string
        threads:
          type: integer
      required:
      - cmdline
      - cpu_max
      - cpu_usage
      - memory_max
      - memory_usage
      - node_id
      - node_name
      - open_files_count
      - pid
      - ppid
      - short_name
      - threads
      type: object
    ModelRegisterInvitedUserRequest:
      example:
        password: password
        code: code
        namespace: namespace
        last_name: last_name
        first_name: first_name
        is_temporary_password: true
      properties:
        code:
          type: string
        first_name:
          type: string
        is_temporary_password:
          type: boolean
        last_name:
          type: string
        namespace:
          type: string
        password:
          type: string
      required:
      - code
      - first_name
      - last_name
      - namespace
      - password
      type: object
    ModelRegisterLicenseRequest:
      example:
        email: email
        license_key: license_key
      properties:
        email:
          type: string
        license_key:
          type: string
      required:
      - license_key
      type: object
    ModelRegisterLicenseResponse:
      example:
        email_domain: email_domain
        license_key: license_key
      properties:
        email_domain:
          type: string
        license_key:
          type: string
      required:
      - email_domain
      - license_key
      type: object
    ModelRegistryAccount:
      example:
        syncing: true
        container_images:
        - metadata:
            key: ""
          secret_scan_status: secret_scan_status
          vulnerabilities_count: 4
          secrets_count: 1
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 7
          node_name: node_name
          secret_latest_scan_id: secret_latest_scan_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          docker_image_created_at: docker_image_created_at
          docker_image_tag: docker_image_tag
          malware_scan_status: malware_scan_status
          docker_image_size: docker_image_size
          image_node_id: image_node_id
          docker_image_virtual_size: docker_image_virtual_size
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          docker_image_id: docker_image_id
          vulnerability_scan_status: vulnerability_scan_status
          docker_image_name: docker_image_name
          docker_image_tag_list:
          - docker_image_tag_list
          - docker_image_tag_list
          node_id: node_id
        - metadata:
            key: ""
          secret_scan_status: secret_scan_status
          vulnerabilities_count: 4
          secrets_count: 1
          malware_latest_scan_id: malware_latest_scan_id
          malwares_count: 7
          node_name: node_name
          secret_latest_scan_id: secret_latest_scan_id
          vulnerability_latest_scan_id: vulnerability_latest_scan_id
          docker_image_created_at: docker_image_created_at
          docker_image_tag: docker_image_tag
          malware_scan_status: malware_scan_status
          docker_image_size: docker_image_size
          image_node_id: image_node_id
          docker_image_virtual_size: docker_image_virtual_size
          containers:
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          - vulnerabilities_count: 6
            secrets_count: 1
            docker_container_state: docker_container_state
            cpu_max: 0.8008281904610115
            memory_usage: 5
            secret_latest_scan_id: secret_latest_scan_id
            docker_container_network_mode: docker_container_network_mode
            vulnerability_latest_scan_id: vulnerability_latest_scan_id
            malware_scan_status: malware_scan_status
            docker_container_ips:
            - ""
            - ""
            docker_labels:
              key: ""
            image: null
            processes:
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            - memory_max: 9
              cmdline: cmdline
              cpu_max: 2.3021358869347655
              node_name: node_name
              memory_usage: 3
              open_files_count: 2
              threads: 1
              pid: 4
              short_name: short_name
              cpu_usage: 7.061401241503109
              node_id: node_id
              ppid: 7
            secret_scan_status: secret_scan_status
            docker_container_name: docker_container_name
            docker_container_created: docker_container_created
            malware_latest_scan_id: malware_latest_scan_id
            malwares_count: 1
            node_name: node_name
            docker_container_networks: docker_container_networks
            docker_container_command: docker_container_command
            uptime: 1
            memory_max: 5
            docker_container_ports: docker_container_ports
            docker_container_state_human: docker_container_state_human
            cpu_usage: 6.027456183070403
            vulnerability_scan_status: vulnerability_scan_status
            host_name: host_name
            node_id: node_id
          docker_image_id: docker_image_id
          vulnerability_scan_status: vulnerability_scan_status
          docker_image_name: docker_image_name
          docker_image_tag_list:
          - docker_image_tag_list
          - docker_image_tag_list
          node_id: node_id
        registry_type: registry_type
        name: name
        node_id: node_id
      properties:
        container_images:
          items:
            $ref: '#/components/schemas/ModelContainerImage'
          nullable: true
          type: array
        name:
          type: string
        node_id:
          type: string
        registry_type:
          type: string
        syncing:
          type: boolean
      required:
      - container_images
      - name
      - node_id
      - registry_type
      - syncing
      type: object
    ModelRegistryAddReq:
      example:
        non_secret:
          key: ""
        registry_type: registry_type
        name: name
        extras:
          key: ""
        secret:
          key: ""
      properties:
        extras:
          additionalProperties: {}
          nullable: true
          type: object
        name:
          type: string
        non_secret:
          additionalProperties: {}
          nullable: true
          type: object
        registry_type:
          type: string
        secret:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - name
      - registry_type
      type: object
    ModelRegistryCountResp:
      example:
        count: 0
      properties:
        count:
          type: integer
      type: object
    ModelRegistryCredentials:
      example:
        registry_url: registry_url
        password: password
        username: username
      properties:
        password:
          type: string
        registry_url:
          type: string
        username:
          type: string
      type: object
    ModelRegistryImageStubsReq:
      example:
        image_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        window:
          offset: 0
          size: 6
        registry_id: registry_id
      properties:
        image_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        registry_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - image_filter
      - registry_id
      - window
      type: object
    ModelRegistryImagesReq:
      example:
        image_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        window:
          offset: 0
          size: 6
        image_stub_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        registry_id: registry_id
      properties:
        image_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        image_stub_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        registry_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - image_filter
      - image_stub_filter
      - registry_id
      - window
      type: object
    ModelRegistryListResp:
      example:
        is_syncing: true
        updated_at: 1
        non_secret: ""
        registry_type: registry_type
        name: name
        created_at: 0
        id: 6
        node_id: node_id
      properties:
        created_at:
          type: integer
        id:
          type: integer
        is_syncing:
          type: boolean
        name:
          type: string
        node_id:
          type: string
        non_secret: {}
        registry_type:
          type: string
        updated_at:
          type: integer
      type: object
    ModelRegistrySummaryAllResp:
      additionalProperties:
        $ref: '#/components/schemas/ModelSummary'
      nullable: true
      type: object
    ModelRegistryUpdateReq:
      example:
        non_secret:
          key: ""
        registry_type: registry_type
        name: name
        extras:
          key: ""
        secret:
          key: ""
      properties:
        extras:
          additionalProperties: {}
          nullable: true
          type: object
        name:
          type: string
        non_secret:
          additionalProperties: {}
          nullable: true
          type: object
        registry_type:
          type: string
        secret:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - name
      - registry_type
      type: object
    ModelResponseAccessToken:
      example:
        access_token: access_token
        refresh_token: refresh_token
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      required:
      - access_token
      - refresh_token
      type: object
    ModelSbomRequest:
      example:
        scan_id: scan_id
      properties:
        scan_id:
          type: string
      required:
      - scan_id
      type: object
    ModelSbomResponse:
      example:
        severity: severity
        licenses:
        - licenses
        - licenses
        cve_id: cve_id
        package_name: package_name
        cve_node_id: cve_node_id
        locations:
        - locations
        - locations
        version: version
      properties:
        cve_id:
          type: string
        cve_node_id:
          type: string
        licenses:
          items:
            type: string
          type: array
        locations:
          items:
            type: string
          type: array
        package_name:
          type: string
        severity:
          type: string
        version:
          type: string
      type: object
    ModelScanCompareReq:
      example:
        to_scan_id: to_scan_id
        base_scan_id: base_scan_id
        window:
          offset: 0
          size: 6
        fields_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
      properties:
        base_scan_id:
          type: string
        fields_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        to_scan_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - base_scan_id
      - fields_filter
      - to_scan_id
      - window
      type: object
    ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelCloudCompliance:
      example:
        new:
        - severity: severity
          reason: reason
          control_id: control_id
          resource: resource
          masked: true
          count: 0
          node_name: node_name
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cloud_provider: cloud_provider
          title: title
          type: type
          compliance_check_type: compliance_check_type
          account_id: account_id
          updated_at: 6
          service: service
          region: region
          group: group
          node_id: node_id
          status: status
        - severity: severity
          reason: reason
          control_id: control_id
          resource: resource
          masked: true
          count: 0
          node_name: node_name
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cloud_provider: cloud_provider
          title: title
          type: type
          compliance_check_type: compliance_check_type
          account_id: account_id
          updated_at: 6
          service: service
          region: region
          group: group
          node_id: node_id
          status: status
      properties:
        new:
          items:
            $ref: '#/components/schemas/ModelCloudCompliance'
          nullable: true
          type: array
      required:
      - new
      type: object
    ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelCompliance:
      example:
        new:
        - resource: resource
          masked: true
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          test_category: test_category
          remediation_ansible: remediation_ansible
          compliance_check_type: compliance_check_type
          rule_id: rule_id
          test_rationale: test_rationale
          test_severity: test_severity
          node_type: node_type
          updated_at: 0
          remediation_puppet: remediation_puppet
          remediation_script: remediation_script
          node_id: node_id
          status: status
          test_desc: test_desc
          test_number: test_number
        - resource: resource
          masked: true
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          test_category: test_category
          remediation_ansible: remediation_ansible
          compliance_check_type: compliance_check_type
          rule_id: rule_id
          test_rationale: test_rationale
          test_severity: test_severity
          node_type: node_type
          updated_at: 0
          remediation_puppet: remediation_puppet
          remediation_script: remediation_script
          node_id: node_id
          status: status
          test_desc: test_desc
          test_number: test_number
      properties:
        new:
          items:
            $ref: '#/components/schemas/ModelCompliance'
          nullable: true
          type: array
      required:
      - new
      type: object
    ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelMalware:
      example:
        new:
        - date: date
          summary: summary
          filetype: filetype
          image_layer_id: image_layer_id
          rule_name: rule_name
          author: author
          masked: true
          file_sev_score: 0
          file_severity: file_severity
          strings_to_match:
          - ""
          - ""
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          version: version
          rule_id: rule_id
          complete_filename: complete_filename
          class: class
          info: info
          node_id: node_id
          severity_score: 6
        - date: date
          summary: summary
          filetype: filetype
          image_layer_id: image_layer_id
          rule_name: rule_name
          author: author
          masked: true
          file_sev_score: 0
          file_severity: file_severity
          strings_to_match:
          - ""
          - ""
          description: description
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          version: version
          rule_id: rule_id
          complete_filename: complete_filename
          class: class
          info: info
          node_id: node_id
          severity_score: 6
      properties:
        new:
          items:
            $ref: '#/components/schemas/ModelMalware'
          nullable: true
          type: array
      required:
      - new
      type: object
    ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelSecret:
      example:
        new:
        - full_filename: full_filename
          level: level
          masked: true
          part: part
          relative_ending_index: 0
          starting_index: 5
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          signature_to_match: signature_to_match
          rule_id: 1
          score: 5.962133916683182
          matched_content: matched_content
          updated_at: 2
          name: name
          relative_starting_index: 6
          node_id: node_id
        - full_filename: full_filename
          level: level
          masked: true
          part: part
          relative_ending_index: 0
          starting_index: 5
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          signature_to_match: signature_to_match
          rule_id: 1
          score: 5.962133916683182
          matched_content: matched_content
          updated_at: 2
          name: name
          relative_starting_index: 6
          node_id: node_id
      properties:
        new:
          items:
            $ref: '#/components/schemas/ModelSecret'
          nullable: true
          type: array
      required:
      - new
      type: object
    ModelScanCompareResGithubComDeepfenceThreatMapperDeepfenceServerModelVulnerability:
      example:
        new:
        - parsed_attack_vector: parsed_attack_vector
          cve_container_layer: cve_container_layer
          masked: true
          cve_description: cve_description
          cve_overall_score: 6.027456183070403
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cve_caused_by_package: cve_caused_by_package
          cve_attack_vector: cve_attack_vector
          cve_cvss_score: 0.8008281904610115
          rule_id: rule_id
          urls:
          - ""
          - ""
          cve_severity: cve_severity
          cve_caused_by_package_path: cve_caused_by_package_path
          updated_at: 1
          cve_id: cve_id
          exploit_poc: exploit_poc
          cve_type: cve_type
          has_live_connection: true
          cve_fixed_in: cve_fixed_in
          cve_link: cve_link
          node_id: node_id
        - parsed_attack_vector: parsed_attack_vector
          cve_container_layer: cve_container_layer
          masked: true
          cve_description: cve_description
          cve_overall_score: 6.027456183070403
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cve_caused_by_package: cve_caused_by_package
          cve_attack_vector: cve_attack_vector
          cve_cvss_score: 0.8008281904610115
          rule_id: rule_id
          urls:
          - ""
          - ""
          cve_severity: cve_severity
          cve_caused_by_package_path: cve_caused_by_package_path
          updated_at: 1
          cve_id: cve_id
          exploit_poc: exploit_poc
          cve_type: cve_type
          has_live_connection: true
          cve_fixed_in: cve_fixed_in
          cve_link: cve_link
          node_id: node_id
      properties:
        new:
          items:
            $ref: '#/components/schemas/ModelVulnerability'
          nullable: true
          type: array
      required:
      - new
      type: object
    ModelScanFilter:
      example:
        container_scan_filter:
          filter_in:
            key:
            - ""
            - ""
        cloud_account_scan_filter:
          filter_in:
            key:
            - ""
            - ""
        image_scan_filter:
          filter_in:
            key:
            - ""
            - ""
        kubernetes_cluster_scan_filter:
          filter_in:
            key:
            - ""
            - ""
        host_scan_filter:
          filter_in:
            key:
            - ""
            - ""
      properties:
        cloud_account_scan_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        container_scan_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        host_scan_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        image_scan_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        kubernetes_cluster_scan_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
      required:
      - cloud_account_scan_filter
      - container_scan_filter
      - host_scan_filter
      - image_scan_filter
      - kubernetes_cluster_scan_filter
      type: object
    ModelScanInfo:
      example:
        severity_counts:
          key: 6
        status_message: status_message
        node_type: node_type
        updated_at: 1
        node_name: node_name
        created_at: 0
        scan_id: scan_id
        node_id: node_id
        status: status
      properties:
        created_at:
          format: int64
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        severity_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        status:
          type: string
        status_message:
          type: string
        updated_at:
          format: int64
          type: integer
      required:
      - created_at
      - node_id
      - node_name
      - node_type
      - scan_id
      - severity_counts
      - status
      - status_message
      - updated_at
      type: object
    ModelScanListReq:
      example:
        window:
          offset: 0
          size: 6
        fields_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        fields_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - fields_filter
      - node_ids
      - window
      type: object
    ModelScanListResp:
      example:
        scans_info:
        - severity_counts:
            key: 6
          status_message: status_message
          node_type: node_type
          updated_at: 1
          node_name: node_name
          created_at: 0
          scan_id: scan_id
          node_id: node_id
          status: status
        - severity_counts:
            key: 6
          status_message: status_message
          node_type: node_type
          updated_at: 1
          node_name: node_name
          created_at: 0
          scan_id: scan_id
          node_id: node_id
          status: status
      properties:
        scans_info:
          items:
            $ref: '#/components/schemas/ModelScanInfo'
          nullable: true
          type: array
      required:
      - scans_info
      type: object
    ModelScanReportFieldsResponse:
      example:
        malware:
        - malware
        - malware
        compliance:
        - compliance
        - compliance
        secret:
        - secret
        - secret
        vulnerability:
        - vulnerability
        - vulnerability
      properties:
        compliance:
          items:
            type: string
          nullable: true
          type: array
        malware:
          items:
            type: string
          nullable: true
          type: array
        secret:
          items:
            type: string
          nullable: true
          type: array
        vulnerability:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ModelScanResultBasicNode:
      example:
        basic_nodes:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        result_id: result_id
      properties:
        basic_nodes:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        result_id:
          type: string
      required:
      - basic_nodes
      - result_id
      type: object
    ModelScanResultsActionRequest:
      example:
        notify_individual: true
        result_ids:
        - result_ids
        - result_ids
        scan_type: SecretScan
        scan_id: scan_id
        integration_ids:
        - 0
        - 0
      properties:
        integration_ids:
          items:
            type: integer
          nullable: true
          type: array
        notify_individual:
          type: boolean
        result_ids:
          items:
            type: string
          nullable: true
          type: array
        scan_id:
          type: string
        scan_type:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
      required:
      - result_ids
      - scan_id
      - scan_type
      type: object
    ModelScanResultsCommon:
      example:
        cloud_account_id: cloud_account_id
        node_type: node_type
        docker_container_name: docker_container_name
        updated_at: 6
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 0
        scan_id: scan_id
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        cloud_account_id:
          type: string
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        updated_at:
          format: int64
          type: integer
      required:
      - cloud_account_id
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - node_id
      - node_name
      - node_type
      - scan_id
      - updated_at
      type: object
    ModelScanResultsMaskRequest:
      example:
        mask_action: mask_global
        result_ids:
        - result_ids
        - result_ids
        scan_type: SecretScan
        scan_id: scan_id
      properties:
        mask_action:
          enum:
          - mask_global
          - mask_all_image_tag
          - mask_entity
          - mask_image_tag
          type: string
        result_ids:
          items:
            type: string
          nullable: true
          type: array
        scan_id:
          type: string
        scan_type:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
      required:
      - mask_action
      - result_ids
      - scan_id
      - scan_type
      type: object
    ModelScanResultsReq:
      example:
        scan_id: scan_id
        window:
          offset: 0
          size: 6
        fields_filter:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
      properties:
        fields_filter:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        scan_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - fields_filter
      - scan_id
      - window
      type: object
    ModelScanStatusReq:
      example:
        bulk_scan_id: bulk_scan_id
        scan_ids:
        - scan_ids
        - scan_ids
      properties:
        bulk_scan_id:
          type: string
        scan_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - bulk_scan_id
      - scan_ids
      type: object
    ModelScanStatusResp:
      example:
        statuses:
          key:
            severity_counts:
              key: 6
            status_message: status_message
            node_type: node_type
            updated_at: 1
            node_name: node_name
            created_at: 0
            scan_id: scan_id
            node_id: node_id
            status: status
      properties:
        statuses:
          additionalProperties:
            $ref: '#/components/schemas/ModelScanInfo'
          nullable: true
          type: object
      required:
      - statuses
      type: object
    ModelScanTriggerResp:
      example:
        bulk_scan_id: bulk_scan_id
        scan_ids:
        - scan_ids
        - scan_ids
      properties:
        bulk_scan_id:
          type: string
        scan_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - bulk_scan_id
      - scan_ids
      type: object
    ModelSecret:
      example:
        full_filename: full_filename
        level: level
        masked: true
        part: part
        relative_ending_index: 0
        starting_index: 5
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        signature_to_match: signature_to_match
        rule_id: 1
        score: 5.962133916683182
        matched_content: matched_content
        updated_at: 2
        name: name
        relative_starting_index: 6
        node_id: node_id
      properties:
        full_filename:
          type: string
        level:
          type: string
        masked:
          type: boolean
        matched_content:
          type: string
        name:
          type: string
        node_id:
          type: string
        part:
          type: string
        relative_ending_index:
          type: integer
        relative_starting_index:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        rule_id:
          type: integer
        score:
          type: number
        signature_to_match:
          type: string
        starting_index:
          type: integer
        updated_at:
          type: integer
      required:
      - full_filename
      - level
      - masked
      - matched_content
      - name
      - node_id
      - part
      - relative_ending_index
      - relative_starting_index
      - rule_id
      - score
      - signature_to_match
      - starting_index
      - updated_at
      type: object
    ModelSecretRule:
      example:
        updated_at: 6
        level: level
        masked: true
        part: part
        name: name
        signature_to_match: signature_to_match
        id: 0
      properties:
        id:
          type: integer
        level:
          type: string
        masked:
          type: boolean
        name:
          type: string
        part:
          type: string
        signature_to_match:
          type: string
        updated_at:
          type: integer
      required:
      - level
      - masked
      - updated_at
      type: object
    ModelSecretScanResult:
      example:
        severity_counts:
          key: 6
        docker_container_name: docker_container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 0
        secrets:
        - full_filename: full_filename
          level: level
          masked: true
          part: part
          relative_ending_index: 0
          starting_index: 5
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          signature_to_match: signature_to_match
          rule_id: 1
          score: 5.962133916683182
          matched_content: matched_content
          updated_at: 2
          name: name
          relative_starting_index: 6
          node_id: node_id
        - full_filename: full_filename
          level: level
          masked: true
          part: part
          relative_ending_index: 0
          starting_index: 5
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          signature_to_match: signature_to_match
          rule_id: 1
          score: 5.962133916683182
          matched_content: matched_content
          updated_at: 2
          name: name
          relative_starting_index: 6
          node_id: node_id
        cloud_account_id: cloud_account_id
        node_type: node_type
        updated_at: 1
        scan_id: scan_id
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        cloud_account_id:
          type: string
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/ModelSecret'
          nullable: true
          type: array
        severity_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - cloud_account_id
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - node_id
      - node_name
      - node_type
      - scan_id
      - secrets
      - severity_counts
      - updated_at
      type: object
    ModelSecretScanResultRules:
      example:
        rules:
        - rules
        - rules
      properties:
        rules:
          items:
            type: string
          nullable: true
          type: array
      required:
      - rules
      type: object
    ModelSecretScanTriggerReq:
      example:
        is_priority: true
        filters:
          container_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          cloud_account_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          image_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          kubernetes_cluster_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          host_scan_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        filters:
          $ref: '#/components/schemas/ModelScanFilter'
        is_priority:
          type: boolean
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
      required:
      - filters
      - node_ids
      type: object
    ModelSettingUpdateRequest:
      example:
        value: value
        key: console_url
      properties:
        key:
          enum:
          - console_url
          - file_server_url
          - inactive_delete_scan_results
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ModelSettingsResponse:
      example:
        description: description
        id: 0
        label: label
        value: ""
        key: key
      properties:
        description:
          type: string
        id:
          type: integer
        key:
          type: string
        label:
          type: string
        value: {}
      required:
      - description
      - id
      - key
      - label
      - value
      type: object
    ModelStopScanRequest:
      example:
        scan_ids:
        - scan_ids
        - scan_ids
        scan_type: SecretScan
      properties:
        scan_ids:
          items:
            type: string
          nullable: true
          type: array
        scan_type:
          enum:
          - SecretScan
          - VulnerabilityScan
          - MalwareScan
          - ComplianceScan
          - CloudComplianceScan
          type: string
      required:
      - scan_ids
      - scan_type
      type: object
    ModelSummary:
      example:
        images: 0
        repositories: 1
        scans_total: 2
        registries: 6
        scans_complete: 5
        scans_in_progress: 5
      properties:
        images:
          type: integer
        registries:
          type: integer
        repositories:
          type: integer
        scans_complete:
          type: integer
        scans_in_progress:
          type: integer
        scans_total:
          type: integer
      type: object
    ModelTopologyDeltaReq:
      example:
        deletion: true
        entity_types:
        - entity_types
        - entity_types
        deletion_timestamp: 6
        addition_timestamp: 0
        addition: true
      properties:
        addition:
          type: boolean
        addition_timestamp:
          format: int64
          type: integer
        deletion:
          type: boolean
        deletion_timestamp:
          format: int64
          type: integer
        entity_types:
          items:
            type: string
          nullable: true
          type: array
      required:
      - addition
      - addition_timestamp
      - deletion
      - deletion_timestamp
      - entity_types
      type: object
    ModelTopologyDeltaResponse:
      example:
        deletions:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
        additons:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
        deletion_timestamp: 6
        addition_timestamp: 0
      properties:
        addition_timestamp:
          format: int64
          type: integer
        additons:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
        deletion_timestamp:
          format: int64
          type: integer
        deletions:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
      type: object
    ModelUpdateScheduledTaskRequest:
      example:
        is_enabled: true
      properties:
        is_enabled:
          type: boolean
      required:
      - is_enabled
      type: object
    ModelUpdateUserIDRequest:
      example:
        is_active: true
        role: admin
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          type: string
        is_active:
          type: boolean
        last_name:
          type: string
        role:
          enum:
          - admin
          - standard-user
          - read-only-user
          type: string
      type: object
    ModelUpdateUserPasswordRequest:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        new_password:
          type: string
        old_password:
          type: string
      required:
      - new_password
      - old_password
      type: object
    ModelUpdateUserRequest:
      example:
        is_active: true
        role: admin
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          type: string
        is_active:
          type: boolean
        last_name:
          type: string
        role:
          enum:
          - admin
          - standard-user
          - read-only-user
          type: string
      type: object
    ModelUser:
      example:
        is_active: true
        role: admin
        company_id: 0
        role_id: 1
        groups:
          key: groups
        last_name: last_name
        company: company
        id: 6
        password_invalidated: true
        first_name: first_name
        email: email
        current_user: true
      properties:
        company:
          type: string
        company_id:
          type: integer
        current_user:
          nullable: true
          type: boolean
        email:
          type: string
        first_name:
          type: string
        groups:
          additionalProperties:
            type: string
          nullable: true
          type: object
        id:
          type: integer
        is_active:
          type: boolean
        last_name:
          type: string
        password_invalidated:
          type: boolean
        role:
          enum:
          - admin
          - standard-user
          - read-only-user
          type: string
        role_id:
          type: integer
      required:
      - company
      - email
      - first_name
      - last_name
      type: object
    ModelUserRegisterRequest:
      example:
        password: password
        console_url: console_url
        last_name: last_name
        company: company
        first_name: first_name
        is_temporary_password: true
        email: email
      properties:
        company:
          type: string
        console_url:
          type: string
        email:
          type: string
        first_name:
          type: string
        is_temporary_password:
          type: boolean
        last_name:
          type: string
        password:
          type: string
      required:
      - company
      - console_url
      - email
      - first_name
      - last_name
      - password
      type: object
    ModelVulnerability:
      example:
        parsed_attack_vector: parsed_attack_vector
        cve_container_layer: cve_container_layer
        masked: true
        cve_description: cve_description
        cve_overall_score: 6.027456183070403
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        cve_caused_by_package: cve_caused_by_package
        cve_attack_vector: cve_attack_vector
        cve_cvss_score: 0.8008281904610115
        rule_id: rule_id
        urls:
        - ""
        - ""
        cve_severity: cve_severity
        cve_caused_by_package_path: cve_caused_by_package_path
        updated_at: 1
        cve_id: cve_id
        exploit_poc: exploit_poc
        cve_type: cve_type
        has_live_connection: true
        cve_fixed_in: cve_fixed_in
        cve_link: cve_link
        node_id: node_id
      properties:
        cve_attack_vector:
          type: string
        cve_caused_by_package:
          type: string
        cve_caused_by_package_path:
          type: string
        cve_container_layer:
          type: string
        cve_cvss_score:
          type: number
        cve_description:
          type: string
        cve_fixed_in:
          type: string
        cve_id:
          type: string
        cve_link:
          type: string
        cve_overall_score:
          type: number
        cve_severity:
          type: string
        cve_type:
          type: string
        exploit_poc:
          type: string
        has_live_connection:
          type: boolean
        masked:
          type: boolean
        node_id:
          type: string
        parsed_attack_vector:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        rule_id:
          type: string
        updated_at:
          type: integer
        urls:
          items: {}
          nullable: true
          type: array
      required:
      - cve_attack_vector
      - cve_caused_by_package
      - cve_caused_by_package_path
      - cve_container_layer
      - cve_cvss_score
      - cve_description
      - cve_fixed_in
      - cve_id
      - cve_link
      - cve_overall_score
      - cve_severity
      - cve_type
      - exploit_poc
      - has_live_connection
      - masked
      - node_id
      - parsed_attack_vector
      - rule_id
      - updated_at
      - urls
      type: object
    ModelVulnerabilityRule:
      example:
        parsed_attack_vector: parsed_attack_vector
        masked: true
        cve_description: cve_description
        cve_overall_score: 6.027456183070403
        resources:
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        - node_type: node_type
          name: name
          host_name: host_name
          node_id: node_id
        cve_attack_vector: cve_attack_vector
        cve_cvss_score: 0.8008281904610115
        urls:
        - ""
        - ""
        cve_severity: cve_severity
        updated_at: 1
        cve_id: cve_id
        exploit_poc: exploit_poc
        cve_type: cve_type
        cve_fixed_in: cve_fixed_in
        cve_link: cve_link
        node_id: node_id
      properties:
        cve_attack_vector:
          type: string
        cve_cvss_score:
          type: number
        cve_description:
          type: string
        cve_fixed_in:
          type: string
        cve_id:
          type: string
        cve_link:
          type: string
        cve_overall_score:
          type: number
        cve_severity:
          type: string
        cve_type:
          type: string
        exploit_poc:
          type: string
        masked:
          type: boolean
        node_id:
          type: string
        parsed_attack_vector:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ModelBasicNode'
          nullable: true
          type: array
        updated_at:
          type: integer
        urls:
          items: {}
          nullable: true
          type: array
      required:
      - cve_attack_vector
      - cve_cvss_score
      - cve_description
      - cve_fixed_in
      - cve_id
      - cve_link
      - cve_overall_score
      - cve_severity
      - cve_type
      - exploit_poc
      - masked
      - node_id
      - parsed_attack_vector
      - updated_at
      - urls
      type: object
    ModelVulnerabilityScanConfigLanguage:
      example:
        language: base
      properties:
        language:
          enum:
          - base
          - ruby
          - python
          - javascript
          - php
          - golang
          - golang-binary
          - java
          - rust
          - rust-binary
          - dotnet
          type: string
      required:
      - language
      type: object
    ModelVulnerabilityScanResult:
      example:
        severity_counts:
          key: 6
        docker_container_name: docker_container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        node_name: node_name
        created_at: 0
        cloud_account_id: cloud_account_id
        node_type: node_type
        updated_at: 1
        vulnerabilities:
        - parsed_attack_vector: parsed_attack_vector
          cve_container_layer: cve_container_layer
          masked: true
          cve_description: cve_description
          cve_overall_score: 6.027456183070403
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cve_caused_by_package: cve_caused_by_package
          cve_attack_vector: cve_attack_vector
          cve_cvss_score: 0.8008281904610115
          rule_id: rule_id
          urls:
          - ""
          - ""
          cve_severity: cve_severity
          cve_caused_by_package_path: cve_caused_by_package_path
          updated_at: 1
          cve_id: cve_id
          exploit_poc: exploit_poc
          cve_type: cve_type
          has_live_connection: true
          cve_fixed_in: cve_fixed_in
          cve_link: cve_link
          node_id: node_id
        - parsed_attack_vector: parsed_attack_vector
          cve_container_layer: cve_container_layer
          masked: true
          cve_description: cve_description
          cve_overall_score: 6.027456183070403
          resources:
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          - node_type: node_type
            name: name
            host_name: host_name
            node_id: node_id
          cve_caused_by_package: cve_caused_by_package
          cve_attack_vector: cve_attack_vector
          cve_cvss_score: 0.8008281904610115
          rule_id: rule_id
          urls:
          - ""
          - ""
          cve_severity: cve_severity
          cve_caused_by_package_path: cve_caused_by_package_path
          updated_at: 1
          cve_id: cve_id
          exploit_poc: exploit_poc
          cve_type: cve_type
          has_live_connection: true
          cve_fixed_in: cve_fixed_in
          cve_link: cve_link
          node_id: node_id
        scan_id: scan_id
        docker_image_name: docker_image_name
        host_name: host_name
        node_id: node_id
      properties:
        cloud_account_id:
          type: string
        created_at:
          format: int64
          type: integer
        docker_container_name:
          type: string
        docker_image_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        severity_counts:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        updated_at:
          format: int64
          type: integer
        vulnerabilities:
          items:
            $ref: '#/components/schemas/ModelVulnerability'
          nullable: true
          type: array
      required:
      - cloud_account_id
      - created_at
      - docker_container_name
      - docker_image_name
      - host_name
      - kubernetes_cluster_name
      - node_id
      - node_name
      - node_type
      - scan_id
      - severity_counts
      - updated_at
      - vulnerabilities
      type: object
    ModelVulnerabilityScanTriggerReq:
      example:
        is_priority: true
        scan_config:
        - language: base
        - language: base
        filters:
          container_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          cloud_account_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          image_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          kubernetes_cluster_scan_filter:
            filter_in:
              key:
              - ""
              - ""
          host_scan_filter:
            filter_in:
              key:
              - ""
              - ""
        node_ids:
        - node_type: image
          node_id: node_id
        - node_type: image
          node_id: node_id
      properties:
        filters:
          $ref: '#/components/schemas/ModelScanFilter'
        is_priority:
          type: boolean
        node_ids:
          items:
            $ref: '#/components/schemas/ModelNodeIdentifier'
          nullable: true
          type: array
        scan_config:
          items:
            $ref: '#/components/schemas/ModelVulnerabilityScanConfigLanguage'
          nullable: true
          type: array
      required:
      - filters
      - node_ids
      - scan_config
      type: object
    MultipartFile:
      format: binary
      type: string
    PostgresqlDbGetAuditLogsRow:
      example:
        role: role
        success: true
        action: action
        created_at: 2000-01-23T04:56:07.000+00:00
        resources: resources
        event: event
        email: email
      properties:
        action:
          type: string
        created_at:
          format: date-time
          type: string
        email:
          type: string
        event:
          type: string
        resources:
          type: string
        role:
          type: string
        success:
          type: boolean
      type: object
    PostgresqlDbScheduler:
      example:
        is_enabled: true
        is_system: true
        last_ran_at: "{}"
        updated_at: 2000-01-23T04:56:07.000+00:00
        payload: ""
        cron_expr: cron_expr
        action: action
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        status: status
      properties:
        action:
          type: string
        created_at:
          format: date-time
          type: string
        cron_expr:
          type: string
        description:
          type: string
        id:
          type: integer
        is_enabled:
          type: boolean
        is_system:
          type: boolean
        last_ran_at:
          type: object
        payload: {}
        status:
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    ReportIDList:
      items:
        type: string
      type: array
    ReportMetadata:
      example:
        docker_image_name_with_tag: docker_image_name_with_tag
        kubernetes_ip: kubernetes_ip
        public_ip:
        - public_ip
        - public_ip
        kubernetes_cluster_name: kubernetes_cluster_name
        docker_container_state: docker_container_state
        cpu_max: 6.027456183070403
        pid: 7
        kubernetes_created: kubernetes_created
        kubernetes_namespace: kubernetes_namespace
        cmdline: cmdline
        node_type: node_type
        interface_ip_map: interface_ip_map
        pseudo: true
        docker_container_name: docker_container_name
        docker_container_created: docker_container_created
        kubernetes_cluster_id: kubernetes_cluster_id
        docker_container_networks: docker_container_networks
        kubernetes_ports:
        - kubernetes_ports
        - kubernetes_ports
        version: version
        pod_name: pod_name
        ppid: 9
        tags:
        - tags
        - tags
        docker_container_ports: docker_container_ports
        kubernetes_is_in_host_network: true
        instance_id: instance_id
        kernel_id: kernel_id
        copy_of: copy_of
        open_files:
        - open_files
        - open_files
        docker_env: docker_env
        connection_count: 0
        docker_image_size: docker_image_size
        short_name: short_name
        cpu_usage: 1.4658129805029452
        pod_id: pod_id
        docker_label: docker_label
        instance_type: instance_type
        docker_image_name: docker_image_name
        user_defined_tags:
        - user_defined_tags
        - user_defined_tags
        local_networks:
        - local_networks
        - local_networks
        cloud_region: cloud_region
        kubernetes_state: kubernetes_state
        interface_names:
        - interface_names
        - interface_names
        memory_usage: 5
        open_files_count: 2
        kubernetes_public_ip: kubernetes_public_ip
        private_ip:
        - private_ip
        - private_ip
        docker_container_network_mode: docker_container_network_mode
        cloud_account_id: cloud_account_id
        kubernetes_type: kubernetes_type
        resource_group: resource_group
        docker_image_tag: docker_image_tag
        kubernetes_labels: kubernetes_labels
        docker_container_ips:
        - docker_container_ips
        - docker_container_ips
        docker_image_id: docker_image_id
        timestamp: timestamp
        interface_ips:
        - interface_ips
        - interface_ips
        availability_zone: availability_zone
        is_console_vm: true
        os: os
        local_cidr:
        - local_cidr
        - local_cidr
        node_name: node_name
        threads: 3
        cloud_provider: cloud_provider
        docker_container_command: docker_container_command
        agent_running: true
        uptime: 2
        memory_max: 5
        docker_image_created_at: docker_image_created_at
        kernel_version: kernel_version
        docker_container_state_human: docker_container_state_human
        docker_image_virtual_size: docker_image_virtual_size
        kubernetes_ingress_ip:
        - kubernetes_ingress_ip
        - kubernetes_ingress_ip
        host_name: host_name
        node_id: node_id
      properties:
        agent_running:
          type: boolean
        availability_zone:
          type: string
        cloud_account_id:
          type: string
        cloud_provider:
          type: string
        cloud_region:
          type: string
        cmdline:
          type: string
        connection_count:
          type: integer
        copy_of:
          type: string
        cpu_max:
          type: number
        cpu_usage:
          type: number
        docker_container_command:
          type: string
        docker_container_created:
          type: string
        docker_container_ips:
          items:
            type: string
          type: array
        docker_container_name:
          type: string
        docker_container_network_mode:
          type: string
        docker_container_networks:
          type: string
        docker_container_ports:
          type: string
        docker_container_state:
          type: string
        docker_container_state_human:
          type: string
        docker_env:
          type: string
        docker_image_created_at:
          type: string
        docker_image_id:
          type: string
        docker_image_name:
          type: string
        docker_image_name_with_tag:
          type: string
        docker_image_size:
          type: string
        docker_image_tag:
          type: string
        docker_image_virtual_size:
          type: string
        docker_label:
          type: string
        host_name:
          type: string
        instance_id:
          type: string
        instance_type:
          type: string
        interface_ip_map:
          type: string
        interface_ips:
          items:
            type: string
          type: array
        interface_names:
          items:
            type: string
          type: array
        is_console_vm:
          type: boolean
        kernel_id:
          type: string
        kernel_version:
          type: string
        kubernetes_cluster_id:
          type: string
        kubernetes_cluster_name:
          type: string
        kubernetes_created:
          type: string
        kubernetes_ingress_ip:
          items:
            type: string
          type: array
        kubernetes_ip:
          type: string
        kubernetes_is_in_host_network:
          type: boolean
        kubernetes_labels:
          type: string
        kubernetes_namespace:
          type: string
        kubernetes_ports:
          items:
            type: string
          type: array
        kubernetes_public_ip:
          type: string
        kubernetes_state:
          type: string
        kubernetes_type:
          type: string
        local_cidr:
          items:
            type: string
          type: array
        local_networks:
          items:
            type: string
          type: array
        memory_max:
          type: integer
        memory_usage:
          type: integer
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        open_files:
          items:
            type: string
          type: array
        open_files_count:
          type: integer
        os:
          type: string
        pid:
          type: integer
        pod_id:
          type: string
        pod_name:
          type: string
        ppid:
          type: integer
        private_ip:
          items:
            type: string
          type: array
        pseudo:
          type: boolean
        public_ip:
          items:
            type: string
          type: array
        resource_group:
          type: string
        short_name:
          type: string
        tags:
          items:
            type: string
          type: array
        threads:
          type: integer
        timestamp:
          type: string
        uptime:
          type: integer
        user_defined_tags:
          items:
            type: string
          type: array
        version:
          type: string
      type: object
    ReportRawReport:
      example:
        payload: payload
      properties:
        payload:
          type: string
      required:
      - payload
      type: object
    ReportersCompareFilter:
      example:
        greater_than: true
        field_value: ""
        field_name: field_name
      properties:
        field_name:
          type: string
        field_value: {}
        greater_than:
          type: boolean
      required:
      - field_name
      - field_value
      - greater_than
      type: object
    ReportersContainsFilter:
      example:
        filter_in:
          key:
          - ""
          - ""
      properties:
        filter_in:
          additionalProperties:
            items: {}
            type: array
          nullable: true
          type: object
      required:
      - filter_in
      type: object
    ReportersFieldsFilters:
      example:
        compare_filter:
        - greater_than: true
          field_value: ""
          field_name: field_name
        - greater_than: true
          field_value: ""
          field_name: field_name
        not_contains_filter:
          filter_in:
            key:
            - ""
            - ""
        order_filter:
          order_fields:
          - size: 0
            descending: true
            field_name: field_name
          - size: 0
            descending: true
            field_name: field_name
        contains_filter:
          filter_in:
            key:
            - ""
            - ""
        contains_in_array_filter:
          filter_in:
            key:
            - ""
            - ""
        match_filter:
          filter_in:
            key:
            - ""
            - ""
        match_in_array_filter:
          filter_in:
            key:
            - ""
            - ""
      properties:
        compare_filter:
          items:
            $ref: '#/components/schemas/ReportersCompareFilter'
          nullable: true
          type: array
        contains_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        contains_in_array_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        match_filter:
          $ref: '#/components/schemas/ReportersMatchFilter'
        match_in_array_filter:
          $ref: '#/components/schemas/ReportersMatchFilter'
        not_contains_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
        order_filter:
          $ref: '#/components/schemas/ReportersOrderFilter'
      required:
      - compare_filter
      - contains_filter
      - match_filter
      - order_filter
      type: object
    ReportersMatchFilter:
      example:
        filter_in:
          key:
          - ""
          - ""
      properties:
        filter_in:
          additionalProperties:
            items: {}
            type: array
          nullable: true
          type: object
      required:
      - filter_in
      type: object
    ReportersOrderFilter:
      example:
        order_fields:
        - size: 0
          descending: true
          field_name: field_name
        - size: 0
          descending: true
          field_name: field_name
      properties:
        order_fields:
          items:
            $ref: '#/components/schemas/ReportersOrderSpec'
          nullable: true
          type: array
      required:
      - order_fields
      type: object
    ReportersOrderSpec:
      example:
        size: 0
        descending: true
        field_name: field_name
      properties:
        descending:
          type: boolean
        field_name:
          type: string
        size:
          type: integer
      required:
      - descending
      - field_name
      type: object
    SearchChainedSearchFilter:
      example:
        node_filter:
          in_field_filter:
          - in_field_filter
          - in_field_filter
          filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          window:
            offset: 0
            size: 6
        next_filter: null
        relation_ship: relation_ship
      properties:
        next_filter:
          $ref: '#/components/schemas/SearchChainedSearchFilter'
        node_filter:
          $ref: '#/components/schemas/SearchSearchFilter'
        relation_ship:
          type: string
      required:
      - node_filter
      - relation_ship
      type: object
    SearchNodeCountResp:
      example:
        container: 6
        pod: 7
        host: 5
        namespace: 2
        cloud_provider: 0
        kubernetes_cluster: 5
        container_image: 1
      properties:
        cloud_provider:
          type: integer
        container:
          type: integer
        container_image:
          type: integer
        host:
          type: integer
        kubernetes_cluster:
          type: integer
        namespace:
          type: integer
        pod:
          type: integer
      required:
      - cloud_provider
      - container
      - container_image
      - host
      - kubernetes_cluster
      - namespace
      - pod
      type: object
    SearchResultGroup:
      example:
        severity: severity
        count: 0
        name: name
      properties:
        count:
          type: integer
        name:
          type: string
        severity:
          type: string
      type: object
    SearchResultGroupResp:
      example:
        groups:
        - severity: severity
          count: 0
          name: name
        - severity: severity
          count: 0
          name: name
      properties:
        groups:
          items:
            $ref: '#/components/schemas/SearchResultGroup'
          nullable: true
          type: array
      type: object
    SearchSearchCountResp:
      example:
        count: 6
        categories:
          key: 0
      properties:
        categories:
          additionalProperties:
            type: integer
          nullable: true
          type: object
        count:
          type: integer
      required:
      - categories
      - count
      type: object
    SearchSearchFilter:
      example:
        in_field_filter:
        - in_field_filter
        - in_field_filter
        filters:
          compare_filter:
          - greater_than: true
            field_value: ""
            field_name: field_name
          - greater_than: true
            field_value: ""
            field_name: field_name
          not_contains_filter:
            filter_in:
              key:
              - ""
              - ""
          order_filter:
            order_fields:
            - size: 0
              descending: true
              field_name: field_name
            - size: 0
              descending: true
              field_name: field_name
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
          contains_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
          match_filter:
            filter_in:
              key:
              - ""
              - ""
          match_in_array_filter:
            filter_in:
              key:
              - ""
              - ""
        window:
          offset: 0
          size: 6
      properties:
        filters:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        in_field_filter:
          items:
            type: string
          nullable: true
          type: array
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - filters
      - in_field_filter
      - window
      type: object
    SearchSearchNodeReq:
      example:
        node_filter:
          in_field_filter:
          - in_field_filter
          - in_field_filter
          filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          window:
            offset: 0
            size: 6
        extended_node_filter:
          in_field_filter:
          - in_field_filter
          - in_field_filter
          filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          window:
            offset: 0
            size: 6
        related_node_filter:
          node_filter:
            in_field_filter:
            - in_field_filter
            - in_field_filter
            filters:
              compare_filter:
              - greater_than: true
                field_value: ""
                field_name: field_name
              - greater_than: true
                field_value: ""
                field_name: field_name
              not_contains_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              order_filter:
                order_fields:
                - size: 0
                  descending: true
                  field_name: field_name
                - size: 0
                  descending: true
                  field_name: field_name
              contains_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              contains_in_array_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              match_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              match_in_array_filter:
                filter_in:
                  key:
                  - ""
                  - ""
            window:
              offset: 0
              size: 6
          next_filter: null
          relation_ship: relation_ship
        window:
          offset: 0
          size: 6
      properties:
        extended_node_filter:
          $ref: '#/components/schemas/SearchSearchFilter'
        node_filter:
          $ref: '#/components/schemas/SearchSearchFilter'
        related_node_filter:
          $ref: '#/components/schemas/SearchChainedSearchFilter'
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - node_filter
      - window
      type: object
    SearchSearchScanReq:
      example:
        node_filters:
          in_field_filter:
          - in_field_filter
          - in_field_filter
          filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          window:
            offset: 0
            size: 6
        scan_filters:
          in_field_filter:
          - in_field_filter
          - in_field_filter
          filters:
            compare_filter:
            - greater_than: true
              field_value: ""
              field_name: field_name
            - greater_than: true
              field_value: ""
              field_name: field_name
            not_contains_filter:
              filter_in:
                key:
                - ""
                - ""
            order_filter:
              order_fields:
              - size: 0
                descending: true
                field_name: field_name
              - size: 0
                descending: true
                field_name: field_name
            contains_filter:
              filter_in:
                key:
                - ""
                - ""
            contains_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
            match_filter:
              filter_in:
                key:
                - ""
                - ""
            match_in_array_filter:
              filter_in:
                key:
                - ""
                - ""
          window:
            offset: 0
            size: 6
        related_node_filter:
          node_filter:
            in_field_filter:
            - in_field_filter
            - in_field_filter
            filters:
              compare_filter:
              - greater_than: true
                field_value: ""
                field_name: field_name
              - greater_than: true
                field_value: ""
                field_name: field_name
              not_contains_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              order_filter:
                order_fields:
                - size: 0
                  descending: true
                  field_name: field_name
                - size: 0
                  descending: true
                  field_name: field_name
              contains_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              contains_in_array_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              match_filter:
                filter_in:
                  key:
                  - ""
                  - ""
              match_in_array_filter:
                filter_in:
                  key:
                  - ""
                  - ""
            window:
              offset: 0
              size: 6
          next_filter: null
          relation_ship: relation_ship
        window:
          offset: 0
          size: 6
      properties:
        node_filters:
          $ref: '#/components/schemas/SearchSearchFilter'
        related_node_filter:
          $ref: '#/components/schemas/SearchChainedSearchFilter'
        scan_filters:
          $ref: '#/components/schemas/SearchSearchFilter'
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - node_filters
      - scan_filters
      - window
      type: object
    SqlNullTime:
      type: object
    UtilsAdvancedReportFilters:
      example:
        image_name:
        - image_name
        - image_name
        container_name:
        - container_name
        - container_name
        scan_status:
        - scan_status
        - scan_status
        kubernetes_cluster_name:
        - kubernetes_cluster_name
        - kubernetes_cluster_name
        masked:
        - true
        - true
        host_name:
        - host_name
        - host_name
        node_id:
        - node_id
        - node_id
        pod_name:
        - pod_name
        - pod_name
      properties:
        container_name:
          items:
            type: string
          type: array
        host_name:
          items:
            type: string
          type: array
        image_name:
          items:
            type: string
          type: array
        kubernetes_cluster_name:
          items:
            type: string
          type: array
        masked:
          items:
            type: boolean
          type: array
        node_id:
          items:
            type: string
          type: array
        pod_name:
          items:
            type: string
          type: array
        scan_status:
          items:
            type: string
          type: array
      type: object
    UtilsReportFilters:
      example:
        include_dead_nodes: true
        node_type: host
        most_exploitable_report: true
        advanced_report_filters:
          image_name:
          - image_name
          - image_name
          container_name:
          - container_name
          - container_name
          scan_status:
          - scan_status
          - scan_status
          kubernetes_cluster_name:
          - kubernetes_cluster_name
          - kubernetes_cluster_name
          masked:
          - true
          - true
          host_name:
          - host_name
          - host_name
          node_id:
          - node_id
          - node_id
          pod_name:
          - pod_name
          - pod_name
        scan_type: vulnerability
        scan_id: scan_id
        severity_or_check_type:
        - severity_or_check_type
        - severity_or_check_type
      properties:
        advanced_report_filters:
          $ref: '#/components/schemas/UtilsAdvancedReportFilters'
        include_dead_nodes:
          type: boolean
        most_exploitable_report:
          type: boolean
        node_type:
          enum:
          - host
          - container
          - container_image
          - linux
          - cluster
          - aws
          - gcp
          - azure
          type: string
        scan_id:
          type: string
        scan_type:
          enum:
          - vulnerability
          - secret
          - malware
          - compliance
          - cloud_compliance
          type: string
        severity_or_check_type:
          enum:
          - critical
          - high
          - medium
          - low
          - cis
          - gdpr
          - nist
          - hipaa
          - pci
          - soc_2
          items:
            type: string
          nullable: true
          type: array
      required:
      - node_type
      - scan_type
      type: object
    UtilsReportOptions:
      example:
        sbom_format: syft-json@11.0.1
      properties:
        sbom_format:
          enum:
          - syft-json@11.0.1
          - cyclonedx-json@1.5
          - spdx-json@2.2
          - spdx-json@2.3
          type: string
      type: object
    UtilsScanSbomRequest:
      example:
        skip_scan: true
        kubernetes_cluster_name: kubernetes_cluster_name
        scan_type: scan_type
        sbom_file_path: sbom_file_path
        registry_id: registry_id
        mode: mode
        image_name: image_name
        node_type: node_type
        container_name: container_name
        sbom: sbom
        scan_id: scan_id
        image_id: image_id
        host_name: host_name
        node_id: node_id
      properties:
        container_name:
          type: string
        host_name:
          type: string
        image_id:
          type: string
        image_name:
          type: string
        kubernetes_cluster_name:
          type: string
        mode:
          type: string
        node_id:
          type: string
        node_type:
          type: string
        registry_id:
          type: string
        sbom:
          type: string
        sbom_file_path:
          type: string
        scan_id:
          type: string
        scan_type:
          type: string
        skip_scan:
          type: boolean
      required:
      - sbom
      - scan_id
      type: object
    IngestersSecret_Match:
      example:
        full_filename: full_filename
        matched_content: matched_content
        relative_ending_index: 0
        starting_index: 1
        relative_starting_index: 6
      properties:
        full_filename:
          type: string
        matched_content:
          type: string
        relative_ending_index:
          type: integer
        relative_starting_index:
          type: integer
        starting_index:
          type: integer
      type: object
    IngestersSecret_Rule:
      example:
        part: part
        name: name
        signature_to_match: signature_to_match
        id: 5
      properties:
        id:
          type: integer
        name:
          type: string
        part:
          type: string
        signature_to_match:
          type: string
      type: object
    IngestersSecret_Severity:
      example:
        score: 5.637376656633329
        level: level
      properties:
        level:
          type: string
        score:
          type: number
      type: object
  securitySchemes:
    bearer_token:
      bearerFormat: JWT
      description: RW Access
      scheme: bearer
      type: http
