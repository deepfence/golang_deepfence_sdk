openapi: 3.0.3
info:
  contact:
    email: community@deepfence.io
    name: Deepfence Support
    url: https://deepfence.io
  description: "Deepfence Runtime API provides programmatic control over Deepfence\
    \ microservice securing your container, kubernetes and cloud deployments. The\
    \ API abstracts away underlying infrastructure details like cloud provider, \n\
    container distros, container orchestrator and type of deployment. This is one\
    \ uniform API to manage and control security alerts, policies and response to\
    \ alerts for microservices running anywhere i.e. managed pure greenfield container\
    \ deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate."
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  termsOfService: /tos
  title: Deepfence ThreatMapper
  version: 2.0.0
externalDocs:
  description: Deepfence Community
  url: https://community.deepfence.io
servers:
- url: /
tags:
- name: Authentication
- name: Common
- name: Compliance
- name: Topology
- name: Secret Scan
- name: Vulnerability
paths:
  /deepfence/api-token:
    get:
      description: Get logged in user's API Tokens
      operationId: getApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get User's API Tokens
      tags:
      - User
  /deepfence/auth/token:
    post:
      description: "Get access token for programmatic API access, by providing API\
        \ Token"
      operationId: authToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelApiAuthRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Get Access Token for API Token
      tags:
      - Authentication
  /deepfence/auth/token/refresh:
    post:
      description: Reissue access token using refresh token
      operationId: authTokenRefresh
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Refresh access token
      tags:
      - Authentication
  /deepfence/cloud-node/account:
    post:
      description: Register Cloud Node Account and return any pending compliance scans
        from console
      operationId: registerCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeAccountRegisterReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeAccountRegisterResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Register Cloud Node Account
      tags:
      - Cloud Nodes
  /deepfence/cloud-node/accounts/list:
    post:
      description: List Cloud Node Accounts registered with the console
      operationId: listCloudNodeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCloudNodeAccountsListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCloudNodeAccountsListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: List Cloud Node Accounts
      tags:
      - Cloud Nodes
  /deepfence/controls/agent:
    post:
      description: Fetch actions for a given agent
      operationId: getAgentControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentControls'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Agent Actions
      tags:
      - Controls
  /deepfence/controls/agent-init:
    post:
      description: Fetch initial actions for a given agent after it started
      operationId: getAgentInitControls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlsAgentControls'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch Agent Init Actions
      tags:
      - Controls
  /deepfence/controls/agent-version:
    post:
      description: Push new agent version
      operationId: addAgentVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelAgentImageMetadata'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Push new agent version
      tags:
      - Controls
  /deepfence/controls/get-agent-version:
    get:
      description: Fetch latest agent version to check for upgrade
      operationId: getLatestAgentVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAgentImageMetadata'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Fetch latest agent version
      tags:
      - Controls
  /deepfence/diagnosis/agent-logs:
    post:
      description: Generate Agent Diagnostic Logs
      operationId: generateAgentDiagnosticLogs
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Agent Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/console-logs:
    post:
      description: Generate Console Diagnostic Logs
      operationId: generateConsoleDiagnosticLogs
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Generate Console Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/diagnostic-logs:
    get:
      description: Get diagnostic logs download url links
      operationId: getDiagnosticLogs
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Diagnostic Logs
      tags:
      - Diagnosis
  /deepfence/diagnosis/notification:
    get:
      description: Get Diagnostic Notification
      operationId: diagnosticNotification
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Diagnostic Notification
      tags:
      - Diagnosis
  /deepfence/graph/threat:
    post:
      description: Retrieve the full threat graph associated with the account
      operationId: getThreatGraph
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportersThreatGraph'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Threat Graph
      tags:
      - Threat
  /deepfence/graph/topology/:
    post:
      description: Retrieve the full topology graph associated with the account
      operationId: getTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/containers:
    post:
      description: Retrieve the full topology graph associated with the account from
        Containers
      operationId: getContainersTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Containers Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/hosts:
    post:
      description: Retrieve the full topology graph associated with the account from
        Hosts
      operationId: getHostsTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Hosts Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/kubernetes:
    post:
      description: Retrieve the full topology graph associated with the account from
        Kubernetes
      operationId: getKubernetesTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Kubernetes Topology Graph
      tags:
      - Topology
  /deepfence/graph/topology/pods:
    post:
      description: Retrieve the full topology graph associated with the account from
        Pods
      operationId: getPodsTopologyGraph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersTopologyFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsGraphResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Pods Topology Graph
      tags:
      - Topology
  /deepfence/ingest/cloud-compliance:
    post:
      description: Ingest Cloud compliances found while scanning cloud provider
      operationId: ingestCloudCompliances
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCloudCompliance'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Cloud Compliances
      tags:
      - Cloud Compliance
  /deepfence/ingest/cloud-resources:
    post:
      description: Ingest Clouds Resources found while scanning cloud provider
      operationId: ingestCloudResources
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCloudResource'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Cloud resources
      tags:
      - Cloud Resources
  /deepfence/ingest/compliance:
    post:
      description: Ingest compliance issues found while scanning the agent
      operationId: ingestCompliances
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersCompliance'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Compliances
      tags:
      - Compliance
  /deepfence/ingest/report:
    post:
      description: Ingest data reported by one Agent
      operationId: ingestAgentReport
      requestBody:
        content:
          application/json:
            schema:
              items:
                minimum: 0
                type: integer
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Topology Data
      tags:
      - Topology
  /deepfence/ingest/sbom:
    post:
      description: Ingest SBOM from Scan
      operationId: ingestSbom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilsSbomRequest'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest SBOM from Scan
      tags:
      - Vulnerability
  /deepfence/ingest/secret-scan-logs:
    post:
      description: Ingest secrets scan status from the agent
      operationId: ingestSecretScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersSecretScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Secrets Scan Status
      tags:
      - Secret Scan
  /deepfence/ingest/secrets:
    post:
      description: Ingest secrets found while scanning the agent
      operationId: ingestSecrets
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersSecret'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Secrets
      tags:
      - Secret Scan
  /deepfence/ingest/vulnerabilities:
    post:
      description: Ingest vulnerabilities found while scanning the agent host or containers
      operationId: ingestVulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersVulnerability'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Vulnerabilities
      tags:
      - Vulnerability
  /deepfence/ingest/vulnerabilities-scan-logs:
    post:
      description: Ingest vulnerabilities scan status from agent
      operationId: ingestVulnerabilitiesScanStatus
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IngestersVulnerabilityScanStatus'
              nullable: true
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Ingest Vulnerabilities Scan Status
      tags:
      - Vulnerability
  /deepfence/lookup/containerimages:
    post:
      description: Retrieve all the data associated with images
      operationId: getContainerImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainerImage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Container Images data
      tags:
      - Lookup
  /deepfence/lookup/containers:
    post:
      description: Retrieve all the data associated with containers
      operationId: getContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelContainer'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Containers data
      tags:
      - Lookup
  /deepfence/lookup/hosts:
    post:
      description: Retrieve all the data associated with hosts
      operationId: getHosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelHost'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Hosts data
      tags:
      - Lookup
  /deepfence/lookup/kubernetesclusters:
    post:
      description: Retrieve all the data associated with k8s clusters
      operationId: getKubernetesClusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelKubernetesCluster'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve K8S data
      tags:
      - Lookup
  /deepfence/lookup/pods:
    post:
      description: Retrieve all the data associated with pods
      operationId: getPods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelPod'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Pods data
      tags:
      - Lookup
  /deepfence/lookup/processes:
    post:
      description: Retrieve all the data associated with processes
      operationId: getProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportersLookupFilter'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelProcess'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Retrieve Processes data
      tags:
      - Lookup
  /deepfence/scan/list/compliance:
    post:
      description: Get Compliance Scans list on agent or registry
      operationId: listComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scans List
      tags:
      - Compliance
  /deepfence/scan/list/malware:
    post:
      description: Get Malware Scans list on agent or registry
      operationId: listMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans List
      tags:
      - Malware Scan
  /deepfence/scan/list/secret:
    post:
      description: Get Secret Scans list on agent or registry
      operationId: listSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans List
      tags:
      - Secret Scan
  /deepfence/scan/list/vulnerability:
    post:
      description: Get Vulnerability Scan list on agent or registry
      operationId: listVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanListReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanListResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scans List
      tags:
      - Vulnerability
  /deepfence/scan/results/compliance:
    post:
      description: Get Compliance Scans results on agent or registry
      operationId: resultsComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanResultsResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scans Results
      tags:
      - Compliance
  /deepfence/scan/results/malware:
    post:
      description: Get Malware Scans results on agent or registry
      operationId: resultsMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanResultsResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scans Results
      tags:
      - Malware Scan
  /deepfence/scan/results/secret:
    post:
      description: Get Secret Scans results on agent or registry
      operationId: resultsSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanResultsResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scans Results
      tags:
      - Secret Scan
  /deepfence/scan/results/vulnerability:
    post:
      description: Get Vulnerability Scan results on agent or registry
      operationId: resultsVulnerabilityScans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanResultsReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanResultsResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scans Results
      tags:
      - Vulnerability
  /deepfence/scan/start/compliance:
    post:
      description: Start Compliance Scan on agent or registry
      operationId: startComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Compliance Scan
      tags:
      - Compliance
  /deepfence/scan/start/malware:
    post:
      description: Start Malware Scan on agent or registry
      operationId: startMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Malware Scan
      tags:
      - Malware Scan
  /deepfence/scan/start/secret:
    post:
      description: Start Secret Scan on agent or registry
      operationId: startSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Secret Scan
      tags:
      - Secret Scan
  /deepfence/scan/start/vulnerability:
    post:
      description: Start Vulnerability Scan on agent or registry
      operationId: startVulnerabilityScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanTriggerResp'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Start Vulnerability Scan
      tags:
      - Vulnerability
  /deepfence/scan/status/compliance:
    get:
      description: Get Compliance Scan Status on agent or registry
      operationId: statusComplianceScan
      parameters:
      - explode: true
        in: query
        name: scan_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Compliance Scan Status
      tags:
      - Compliance
  /deepfence/scan/status/malware:
    get:
      description: Get Malware Scan status on agent or registry
      operationId: statusMalwareScan
      parameters:
      - explode: true
        in: query
        name: scan_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Malware Scan Status
      tags:
      - Malware Scan
  /deepfence/scan/status/secret:
    get:
      description: Get Secret Scan Status on agent or registry
      operationId: statusSecretScan
      parameters:
      - explode: true
        in: query
        name: scan_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Secret Scan Status
      tags:
      - Secret Scan
  /deepfence/scan/status/vulnerability:
    get:
      description: Get Vulnerability Scan Status on agent or registry
      operationId: statusVulnerabilityScan
      parameters:
      - explode: true
        in: query
        name: scan_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelScanStatusResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Vulnerability Scan Status
      tags:
      - Vulnerability
  /deepfence/scan/stop/compliance:
    post:
      description: Stop Compliance Scan on agent or registry
      operationId: stopComplianceScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Compliance Scan
      tags:
      - Compliance
  /deepfence/scan/stop/malware:
    post:
      description: Stop Malware Scan on agent or registry
      operationId: stopMalwareScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Malware Scan
      tags:
      - Malware Scan
  /deepfence/scan/stop/secret:
    post:
      description: Stop Secret Scan on agent or registry
      operationId: stopSecretScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Secret Scan
      tags:
      - Secret Scan
  /deepfence/scan/stop/vulnerability:
    post:
      description: Stop Vulnerability Scan on agent or registry
      operationId: stopVulnerabilityScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelScanTriggerReq'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Stop Vulnerability Scan
      tags:
      - Vulnerability
  /deepfence/user:
    delete:
      description: Delete logged in user
      operationId: deleteCurrentUser
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Delete Current User
      tags:
      - User
    get:
      description: Get logged in user information
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Get Current User
      tags:
      - User
    put:
      description: Update logged in user information
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Update Current User
      tags:
      - User
  /deepfence/user/invite:
    post:
      description: Invite a user
      operationId: inviteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInviteUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Invite User
      tags:
      - User
  /deepfence/user/invite/register:
    post:
      description: Register invited user
      operationId: registerInvitedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRegisterInvitedUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Register Invited User
      tags:
      - User
  /deepfence/user/login:
    post:
      description: Login API
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelLoginRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Login API
      tags:
      - Authentication
  /deepfence/user/logout:
    post:
      description: Logout API
      operationId: logout
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      security:
      - bearer_token: []
      summary: Logout API
      tags:
      - Authentication
  /deepfence/user/register:
    post:
      description: First user registration. Further users needs to be invited.
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUserRegisterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Register User
      tags:
      - User
  /deepfence/user/reset-password/request:
    post:
      description: Request for resetting the password
      operationId: resetPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPasswordResetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Reset Password Request
      tags:
      - User
  /deepfence/user/reset-password/verify:
    post:
      description: Verify code and reset the password
      operationId: verifyResetPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPasswordResetVerifyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsBadRequestResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocsFailureResponse'
          description: Internal Server Error
      summary: Verify and Reset Password
      tags:
      - User
components:
  schemas:
    ApiDocsBadRequestResponse:
      properties:
        error_fields:
          additionalProperties:
            type: string
          nullable: true
          type: object
        message:
          type: string
        success:
          example: false
          type: boolean
      type: object
    ApiDocsFailureResponse:
      properties:
        message:
          type: string
        success:
          example: false
          type: boolean
      type: object
    ApiDocsGraphResult:
      example:
        nodes:
          key:
            image: image
            metadata:
            - truncate: 6
              dataType: dataType
              id: id
              label: label
              priority: 0.8008281904610115
              value: value
            - truncate: 6
              dataType: dataType
              id: id
              label: label
              priority: 0.8008281904610115
              value: value
            stack: true
            shape: shape
            adjacency:
            - adjacency
            - adjacency
            label: label
            type: type
            labelMinor: labelMinor
            immediate_parent_id: immediate_parent_id
            tables:
            - truncationCount: 1
              columns:
              - dataType: dataType
                id: id
                label: label
              - dataType: dataType
                id: id
                label: label
              id: id
              label: label
              rows:
              - entries:
                  key: entries
                id: id
              - entries:
                  key: entries
                id: id
              type: type
            - truncationCount: 1
              columns:
              - dataType: dataType
                id: id
                label: label
              - dataType: dataType
                id: id
                label: label
              id: id
              label: label
              rows:
              - entries:
                  key: entries
                id: id
              - entries:
                  key: entries
                id: id
              type: type
            rank: rank
            id: id
            metrics:
            - null
            - null
            tag: tag
            pseudo: true
            parents:
            - topologyId: topologyId
              id: id
              label: label
            - topologyId: topologyId
              id: id
              label: label
        edges:
          key:
            source: source
            target: target
      properties:
        edges:
          additionalProperties:
            $ref: '#/components/schemas/DetailedConnectionSummary'
          type: object
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/DetailedNodeSummary'
          type: object
      required:
      - edges
      - nodes
      type: object
    ControlsAction:
      example:
        id: 6
        request_payload: request_payload
      properties:
        id:
          type: integer
        request_payload:
          type: string
      required:
      - id
      - request_payload
      type: object
    ControlsActionID:
      type: integer
    ControlsAgentControls:
      example:
        beatrate: 0
        commands:
        - id: 6
          request_payload: request_payload
        - id: 6
          request_payload: request_payload
      properties:
        beatrate:
          type: integer
        commands:
          items:
            $ref: '#/components/schemas/ControlsAction'
          nullable: true
          type: array
      required:
      - beatrate
      - commands
      type: object
    DetailedConnectionSummary:
      example:
        source: source
        target: target
      properties:
        source:
          type: string
        target:
          type: string
      type: object
    DetailedNodeSummaries:
      additionalProperties:
        $ref: '#/components/schemas/DetailedNodeSummary'
      type: object
    DetailedNodeSummary:
      example:
        image: image
        metadata:
        - truncate: 6
          dataType: dataType
          id: id
          label: label
          priority: 0.8008281904610115
          value: value
        - truncate: 6
          dataType: dataType
          id: id
          label: label
          priority: 0.8008281904610115
          value: value
        stack: true
        shape: shape
        adjacency:
        - adjacency
        - adjacency
        label: label
        type: type
        labelMinor: labelMinor
        immediate_parent_id: immediate_parent_id
        tables:
        - truncationCount: 1
          columns:
          - dataType: dataType
            id: id
            label: label
          - dataType: dataType
            id: id
            label: label
          id: id
          label: label
          rows:
          - entries:
              key: entries
            id: id
          - entries:
              key: entries
            id: id
          type: type
        - truncationCount: 1
          columns:
          - dataType: dataType
            id: id
            label: label
          - dataType: dataType
            id: id
            label: label
          id: id
          label: label
          rows:
          - entries:
              key: entries
            id: id
          - entries:
              key: entries
            id: id
          type: type
        rank: rank
        id: id
        metrics:
        - null
        - null
        tag: tag
        pseudo: true
        parents:
        - topologyId: topologyId
          id: id
          label: label
        - topologyId: topologyId
          id: id
          label: label
      properties:
        adjacency:
          items:
            type: string
          type: array
        id:
          type: string
        image:
          type: string
        immediate_parent_id:
          type: string
        label:
          type: string
        labelMinor:
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/ReportMetadataRow'
          type: array
        metrics:
          items:
            $ref: '#/components/schemas/ReportMetricRow'
          type: array
        parents:
          items:
            $ref: '#/components/schemas/DetailedParent'
          type: array
        pseudo:
          type: boolean
        rank:
          type: string
        shape:
          type: string
        stack:
          type: boolean
        tables:
          items:
            $ref: '#/components/schemas/ReportTable'
          type: array
        tag:
          type: string
        type:
          type: string
      type: object
    DetailedParent:
      example:
        topologyId: topologyId
        id: id
        label: label
      properties:
        id:
          type: string
        label:
          type: string
        topologyId:
          type: string
      type: object
    DetailedTopologyConnectionSummaries:
      additionalProperties:
        $ref: '#/components/schemas/DetailedConnectionSummary'
      type: object
    DiagnosisDiagnosticNotification:
      properties:
        content:
          type: string
        expiry_in_secs: {}
        follow_url: {}
        source_application_id:
          type: string
        updated_at:
          type: string
      type: object
    IngestersCloudCompliance:
      example:
        severity: severity
        reason: reason
        control_id: control_id
        resource: resource
        masked: masked
        count: 0
        node_name: node_name
        description: description
        cloud_provider: cloud_provider
        title: title
        type: type
        doc_id: doc_id
        compliance_check_type: compliance_check_type
        '@timestamp': '@timestamp'
        account_id: account_id
        service: service
        scan_id: scan_id
        region: region
        group: group
        node_id: node_id
        status: status
      properties:
        '@timestamp':
          type: string
        account_id:
          type: string
        cloud_provider:
          type: string
        compliance_check_type:
          type: string
        control_id:
          type: string
        count:
          type: integer
        description:
          type: string
        doc_id:
          type: string
        group:
          type: string
        masked:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        reason:
          type: string
        region:
          type: string
        resource:
          type: string
        scan_id:
          type: string
        service:
          type: string
        severity:
          type: string
        status:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    IngestersCloudResource:
      example:
        allow_blob_public_access: allow_blob_public_access
        scheme: scheme
        ingress_settings: ""
        vpc_id: vpc_id
        network_mode: network_mode
        event_notification_configuration: ""
        ip_configuration: ""
        vpc_options: ""
        policy_std: policy_std
        iam_policy: ""
        id: id
        arn: arn
        resource_vpc_config: ""
        restrict_public_buckets: true
        db_cluster_identifier: db_cluster_identifier
        policy: ""
        public_ips: ""
        ignore_public_acls: true
        cidr_ipv4: cidr_ipv4
        service_name: service_name
        vpc_security_groups: ""
        network_interfaces: ""
        block_public_policy: true
        security_groups: ""
        block_public_acls: true
        account_id: account_id
        instance_id: instance_id
        public_access: public_access
        task_definition: ""
        group_id: group_id
        name: name
        resource_id: resource_id
        task_definition_arn: task_definition_arn
        region: region
        container_definitions: ""
        bucket_policy_is_public: true
      properties:
        account_id:
          type: string
        allow_blob_public_access:
          type: string
        arn:
          type: string
        block_public_acls:
          type: boolean
        block_public_policy:
          type: boolean
        bucket_policy_is_public:
          type: boolean
        cidr_ipv4:
          type: string
        container_definitions: {}
        db_cluster_identifier:
          type: string
        event_notification_configuration: {}
        group_id:
          type: string
        iam_policy: {}
        id:
          type: string
        ignore_public_acls:
          type: boolean
        ingress_settings: {}
        instance_id:
          type: string
        ip_configuration: {}
        name:
          type: string
        network_interfaces: {}
        network_mode:
          type: string
        policy: {}
        policy_std:
          type: string
        public_access:
          type: string
        public_ips: {}
        region:
          type: string
        resource_id:
          type: string
        resource_vpc_config: {}
        restrict_public_buckets:
          type: boolean
        scheme:
          type: string
        security_groups: {}
        service_name:
          type: string
        task_definition: {}
        task_definition_arn:
          type: string
        vpc_id:
          type: string
        vpc_options: {}
        vpc_security_groups: {}
      type: object
    IngestersCompliance:
      example:
        time_stamp: 0
        resource: resource
        compliance_node_type: compliance_node_type
        kubernetes_cluster_id: kubernetes_cluster_id
        kubernetes_cluster_name: kubernetes_cluster_name
        masked: masked
        node_name: node_name
        description: description
        test_category: test_category
        type: type
        doc_id: doc_id
        remediation_ansible: remediation_ansible
        compliance_check_type: compliance_check_type
        test_rationale: test_rationale
        test_severity: test_severity
        '@timestamp': '@timestamp'
        node_type: node_type
        remediation_puppet: remediation_puppet
        scan_id: scan_id
        remediation_script: remediation_script
        node_id: node_id
        status: status
        test_desc: test_desc
        test_number: test_number
      properties:
        '@timestamp':
          type: string
        compliance_check_type:
          type: string
        compliance_node_type:
          type: string
        description:
          type: string
        doc_id:
          type: string
        kubernetes_cluster_id:
          type: string
        kubernetes_cluster_name:
          type: string
        masked:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        remediation_ansible:
          type: string
        remediation_puppet:
          type: string
        remediation_script:
          type: string
        resource:
          type: string
        scan_id:
          type: string
        status:
          type: string
        test_category:
          type: string
        test_desc:
          type: string
        test_number:
          type: string
        test_rationale:
          type: string
        test_severity:
          type: string
        time_stamp:
          type: integer
        type:
          type: string
      type: object
    IngestersSecret:
      example:
        ImageLayerId: ImageLayerId
        kubernetes_cluster_name: kubernetes_cluster_name
        masked: masked
        node_name: node_name
        Severity:
          score: 5.637376656633329
          level: level
        Match:
          full_filename: full_filename
          matched_content: matched_content
          relative_ending_index: 0
          starting_index: 1
          relative_starting_index: 6
        '@timestamp': 2000-01-23T04:56:07.000+00:00
        node_type: node_type
        container_name: container_name
        Rule:
          part: part
          name: name
          signature_to_match: signature_to_match
          id: 5
        scan_id: scan_id
        host_name: host_name
        node_id: node_id
      properties:
        '@timestamp':
          format: date-time
          type: string
        ImageLayerId:
          type: string
        Match:
          $ref: '#/components/schemas/IngestersSecret_Match'
        Rule:
          $ref: '#/components/schemas/IngestersSecret_Rule'
        Severity:
          $ref: '#/components/schemas/IngestersSecret_Severity'
        container_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        masked:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
      type: object
    IngestersSecretScanStatus:
      example:
        '@timestamp': 2000-01-23T04:56:07.000+00:00
        node_type: node_type
        container_name: container_name
        scan_status: scan_status
        kubernetes_cluster_name: kubernetes_cluster_name
        masked: masked
        node_name: node_name
        scan_id: scan_id
        host_name: host_name
        node_id: node_id
      properties:
        '@timestamp':
          format: date-time
          type: string
        container_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        masked:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        scan_status:
          type: string
      type: object
    IngestersVulnerability:
      example:
        cve_container_layer: cve_container_layer
        kubernetes_cluster_name: kubernetes_cluster_name
        masked: masked
        cve_container_image: cve_container_image
        cve_caused_by_package: cve_caused_by_package
        type: type
        urls:
        - urls
        - urls
        cve_severity: cve_severity
        node_type: node_type
        cve_caused_by_package_path: cve_caused_by_package_path
        host: host
        cve_container_image_id: cve_container_image_id
        cve_description: cve_description
        count: 0
        cve_overall_score: 1.4658129805029452
        doc_id: doc_id
        cve_attack_vector: cve_attack_vector
        cve_cvss_score: 6.027456183070403
        '@timestamp': '@timestamp'
        cve_id: cve_id
        exploit_poc: exploit_poc
        cve_type: cve_type
        cve_container_name: cve_container_name
        cve_fixed_in: cve_fixed_in
        scan_id: scan_id
        cve_link: cve_link
        host_name: host_name
        cve_id_cve_severity_cve_container_image: cve_id_cve_severity_cve_container_image
      properties:
        '@timestamp':
          type: string
        count:
          type: integer
        cve_attack_vector:
          type: string
        cve_caused_by_package:
          type: string
        cve_caused_by_package_path:
          type: string
        cve_container_image:
          type: string
        cve_container_image_id:
          type: string
        cve_container_layer:
          type: string
        cve_container_name:
          type: string
        cve_cvss_score:
          type: number
        cve_description:
          type: string
        cve_fixed_in:
          type: string
        cve_id:
          type: string
        cve_id_cve_severity_cve_container_image:
          type: string
        cve_link:
          type: string
        cve_overall_score:
          type: number
        cve_severity:
          type: string
        cve_type:
          type: string
        doc_id:
          type: string
        exploit_poc:
          type: string
        host:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        masked:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        type:
          type: string
        urls:
          items:
            type: string
          nullable: true
          type: array
      type: object
    IngestersVulnerabilityScanStatus:
      example:
        '@timestamp': 2000-01-23T04:56:07.000+00:00
        node_type: node_type
        container_name: container_name
        scan_status: scan_status
        kubernetes_cluster_name: kubernetes_cluster_name
        masked: masked
        node_name: node_name
        scan_id: scan_id
        host_name: host_name
        node_id: node_id
      properties:
        '@timestamp':
          format: date-time
          type: string
        container_name:
          type: string
        host_name:
          type: string
        kubernetes_cluster_name:
          type: string
        masked:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        node_type:
          type: string
        scan_id:
          type: string
        scan_status:
          type: string
      type: object
    ModelAgentId:
      example:
        node_id: node_id
      properties:
        node_id:
          type: string
      required:
      - node_id
      type: object
    ModelAgentImageMetadata:
      example:
        image_name: image_name
        image_tag: image_tag
        version: version
      properties:
        image_name:
          type: string
        image_tag:
          type: string
        version:
          type: string
      required:
      - image_name
      - image_tag
      - version
      type: object
    ModelApiAuthRequest:
      example:
        api_token: api_token
      properties:
        api_token:
          type: string
      required:
      - api_token
      type: object
    ModelCloudComplianceScanDetails:
      example:
        account_id: account_id
        scan_type: scan_type
        scan_id: scan_id
      properties:
        account_id:
          type: string
        scan_id:
          type: string
        scan_type:
          type: string
      type: object
    ModelCloudNodeAccountInfo:
      example:
        compliance_percentage: compliance_percentage
        node_name: node_name
        active: active
        cloud_provider: cloud_provider
        node_id: node_id
      properties:
        active:
          type: string
        cloud_provider:
          type: string
        compliance_percentage:
          type: string
        node_id:
          type: string
        node_name:
          type: string
      type: object
    ModelCloudNodeAccountRegisterReq:
      example:
        cloud_account: cloud_account
        monitored_account_ids:
          key: monitored_account_ids
        org_acc_id: org_acc_id
        cloud_provider: aws
        node_id: node_id
      properties:
        cloud_account:
          type: string
        cloud_provider:
          enum:
          - aws
          - gcp
          - azure
          type: string
        monitored_account_ids:
          additionalProperties:
            type: string
          nullable: true
          type: object
        node_id:
          type: string
        org_acc_id:
          type: string
      required:
      - cloud_account
      - cloud_provider
      - node_id
      type: object
    ModelCloudNodeAccountRegisterResp:
      example:
        data:
          cloudtrail_trails:
          - account_id: account_id
            trail_name: trail_name
          - account_id: account_id
            trail_name: trail_name
          scans:
            key:
              account_id: account_id
              scan_type: scan_type
              scan_id: scan_id
          refresh: refresh
      properties:
        data:
          $ref: '#/components/schemas/ModelCloudNodeAccountRegisterRespData'
      type: object
    ModelCloudNodeAccountRegisterRespData:
      example:
        cloudtrail_trails:
        - account_id: account_id
          trail_name: trail_name
        - account_id: account_id
          trail_name: trail_name
        scans:
          key:
            account_id: account_id
            scan_type: scan_type
            scan_id: scan_id
        refresh: refresh
      properties:
        cloudtrail_trails:
          items:
            $ref: '#/components/schemas/ModelCloudNodeCloudtrailTrail'
          nullable: true
          type: array
        refresh:
          type: string
        scans:
          additionalProperties:
            $ref: '#/components/schemas/ModelCloudComplianceScanDetails'
          nullable: true
          type: object
      type: object
    ModelCloudNodeAccountsListReq:
      example:
        cloud_provider: cloud_provider
        window:
          offset: 0
          size: 6
      properties:
        cloud_provider:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - window
      type: object
    ModelCloudNodeAccountsListResp:
      example:
        total: 0
        cloud_node_accounts_info:
        - compliance_percentage: compliance_percentage
          node_name: node_name
          active: active
          cloud_provider: cloud_provider
          node_id: node_id
        - compliance_percentage: compliance_percentage
          node_name: node_name
          active: active
          cloud_provider: cloud_provider
          node_id: node_id
      properties:
        cloud_node_accounts_info:
          items:
            $ref: '#/components/schemas/ModelCloudNodeAccountInfo'
          nullable: true
          type: array
        total:
          type: integer
      required:
      - cloud_node_accounts_info
      - total
      type: object
    ModelCloudNodeCloudtrailTrail:
      example:
        account_id: account_id
        trail_name: trail_name
      properties:
        account_id:
          type: string
        trail_name:
          type: string
      type: object
    ModelComputeMetrics:
      example:
        memory_mb: 6.027456183070403
        cpu_percent: 0.8008281904610115
      properties:
        cpu_percent:
          type: number
        memory_mb:
          type: number
      required:
      - cpu_percent
      - memory_mb
      type: object
    ModelContainer:
      example:
        docker_labels:
          key: ""
        image:
          metadata:
            key: ""
          docker_image_tag: docker_image_tag
          docker_image_size: docker_image_size
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          docker_image_name: docker_image_name
          node_id: node_id
        metadata:
          key: ""
        processes:
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        name: name
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        host_name: host_name
        node_id: node_id
      properties:
        docker_labels:
          additionalProperties: {}
          type: object
        host_name:
          type: string
        image:
          $ref: '#/components/schemas/ModelContainerImage'
        metadata:
          additionalProperties: {}
          type: object
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        name:
          type: string
        node_id:
          type: string
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
      required:
      - docker_labels
      - host_name
      - image
      - metadata
      - metrics
      - name
      - node_id
      - processes
      type: object
    ModelContainerImage:
      example:
        metadata:
          key: ""
        docker_image_tag: docker_image_tag
        docker_image_size: docker_image_size
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        docker_image_name: docker_image_name
        node_id: node_id
      properties:
        docker_image_name:
          type: string
        docker_image_size:
          type: string
        docker_image_tag:
          type: string
        metadata:
          additionalProperties: {}
          type: object
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        node_id:
          type: string
      required:
      - docker_image_name
      - docker_image_size
      - docker_image_tag
      - metadata
      - metrics
      - node_id
      type: object
    ModelFetchWindow:
      example:
        offset: 0
        size: 6
      properties:
        offset:
          type: integer
        size:
          type: integer
      required:
      - offset
      - size
      type: object
    ModelHost:
      example:
        processes:
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        cloud_metadata:
          key: ""
        container_images:
        - metadata:
            key: ""
          docker_image_tag: docker_image_tag
          docker_image_size: docker_image_size
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          docker_image_name: docker_image_name
          node_id: node_id
        - metadata:
            key: ""
          docker_image_tag: docker_image_tag
          docker_image_size: docker_image_size
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          docker_image_name: docker_image_name
          node_id: node_id
        containers:
        - docker_labels:
            key: ""
          image:
            metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          name: name
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        - docker_labels:
            key: ""
          image:
            metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          name: name
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        pods:
        - kubernetes_namespace: kubernetes_namespace
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          kubernetes_name: kubernetes_name
          containers:
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_node_id: host_node_id
          node_id: node_id
        - kubernetes_namespace: kubernetes_namespace
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          kubernetes_name: kubernetes_name
          containers:
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_node_id: host_node_id
          node_id: node_id
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        host_name: host_name
        node_id: node_id
      properties:
        cloud_metadata:
          additionalProperties: {}
          type: object
        container_images:
          items:
            $ref: '#/components/schemas/ModelContainerImage'
          nullable: true
          type: array
        containers:
          items:
            $ref: '#/components/schemas/ModelContainer'
          nullable: true
          type: array
        host_name:
          type: string
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        node_id:
          type: string
        pods:
          items:
            $ref: '#/components/schemas/ModelPod'
          nullable: true
          type: array
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
      required:
      - cloud_metadata
      - container_images
      - containers
      - host_name
      - metrics
      - node_id
      - pods
      - processes
      type: object
    ModelInviteUserRequest:
      example:
        role: admin
        action: send-invite-email
        email: email
      properties:
        action:
          enum:
          - send-invite-email
          - get-invite-link
          type: string
        email:
          type: string
        role:
          enum:
          - admin
          - standard-user
          - read-only-user
          type: string
      required:
      - action
      - email
      - role
      type: object
    ModelInviteUserResponse:
      properties:
        invite_expiry_hours:
          type: integer
        invite_url:
          type: string
      type: object
    ModelKubernetesCluster:
      example:
        cloud_metadata:
          key: ""
        node_name: node_name
        containers:
        - processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          cloud_metadata:
            key: ""
          container_images:
          - metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          - metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          containers:
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          pods:
          - kubernetes_namespace: kubernetes_namespace
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            kubernetes_name: kubernetes_name
            containers:
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_node_id: host_node_id
            node_id: node_id
          - kubernetes_namespace: kubernetes_namespace
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            kubernetes_name: kubernetes_name
            containers:
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_node_id: host_node_id
            node_id: node_id
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        - processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          cloud_metadata:
            key: ""
          container_images:
          - metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          - metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          containers:
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          - docker_labels:
              key: ""
            image:
              metadata:
                key: ""
              docker_image_tag: docker_image_tag
              docker_image_size: docker_image_size
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              docker_image_name: docker_image_name
              node_id: node_id
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            name: name
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_name: host_name
            node_id: node_id
          pods:
          - kubernetes_namespace: kubernetes_namespace
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            kubernetes_name: kubernetes_name
            containers:
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_node_id: host_node_id
            node_id: node_id
          - kubernetes_namespace: kubernetes_namespace
            metadata:
              key: ""
            processes:
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            - metadata:
                key: ""
              cmdline: cmdline
              name: name
              threads: 0
              pid: pid
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              node_id: node_id
              ppid: ppid
            kubernetes_name: kubernetes_name
            containers:
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            - docker_labels:
                key: ""
              image:
                metadata:
                  key: ""
                docker_image_tag: docker_image_tag
                docker_image_size: docker_image_size
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                docker_image_name: docker_image_name
                node_id: node_id
              metadata:
                key: ""
              processes:
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              - metadata:
                  key: ""
                cmdline: cmdline
                name: name
                threads: 0
                pid: pid
                metrics:
                  memory_mb: 6.027456183070403
                  cpu_percent: 0.8008281904610115
                node_id: node_id
                ppid: ppid
              name: name
              metrics:
                memory_mb: 6.027456183070403
                cpu_percent: 0.8008281904610115
              host_name: host_name
              node_id: node_id
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            host_node_id: host_node_id
            node_id: node_id
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        node_id: node_id
      properties:
        cloud_metadata:
          additionalProperties: {}
          type: object
        containers:
          items:
            $ref: '#/components/schemas/ModelHost'
          nullable: true
          type: array
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        node_id:
          type: string
        node_name:
          type: string
      required:
      - cloud_metadata
      - containers
      - metrics
      - node_id
      - node_name
      type: object
    ModelLoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
    ModelMetadata:
      additionalProperties: {}
      type: object
    ModelPasswordResetRequest:
      example:
        email: email
      properties:
        email:
          type: string
      required:
      - email
      type: object
    ModelPasswordResetVerifyRequest:
      example:
        password: password
        code: code
      properties:
        code:
          type: string
        password:
          type: string
      required:
      - code
      - password
      type: object
    ModelPod:
      example:
        kubernetes_namespace: kubernetes_namespace
        metadata:
          key: ""
        processes:
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        - metadata:
            key: ""
          cmdline: cmdline
          name: name
          threads: 0
          pid: pid
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          node_id: node_id
          ppid: ppid
        kubernetes_name: kubernetes_name
        containers:
        - docker_labels:
            key: ""
          image:
            metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          name: name
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        - docker_labels:
            key: ""
          image:
            metadata:
              key: ""
            docker_image_tag: docker_image_tag
            docker_image_size: docker_image_size
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            docker_image_name: docker_image_name
            node_id: node_id
          metadata:
            key: ""
          processes:
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          - metadata:
              key: ""
            cmdline: cmdline
            name: name
            threads: 0
            pid: pid
            metrics:
              memory_mb: 6.027456183070403
              cpu_percent: 0.8008281904610115
            node_id: node_id
            ppid: ppid
          name: name
          metrics:
            memory_mb: 6.027456183070403
            cpu_percent: 0.8008281904610115
          host_name: host_name
          node_id: node_id
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        host_node_id: host_node_id
        node_id: node_id
      properties:
        containers:
          items:
            $ref: '#/components/schemas/ModelContainer'
          nullable: true
          type: array
        host_node_id:
          type: string
        kubernetes_name:
          type: string
        kubernetes_namespace:
          type: string
        metadata:
          additionalProperties: {}
          type: object
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        node_id:
          type: string
        processes:
          items:
            $ref: '#/components/schemas/ModelProcess'
          nullable: true
          type: array
      required:
      - containers
      - host_node_id
      - kubernetes_name
      - kubernetes_namespace
      - metadata
      - metrics
      - node_id
      - processes
      type: object
    ModelProcess:
      example:
        metadata:
          key: ""
        cmdline: cmdline
        name: name
        threads: 0
        pid: pid
        metrics:
          memory_mb: 6.027456183070403
          cpu_percent: 0.8008281904610115
        node_id: node_id
        ppid: ppid
      properties:
        cmdline:
          type: string
        metadata:
          additionalProperties: {}
          type: object
        metrics:
          $ref: '#/components/schemas/ModelComputeMetrics'
        name:
          type: string
        node_id:
          type: string
        pid:
          type: string
        ppid:
          type: string
        threads:
          type: integer
      required:
      - cmdline
      - metadata
      - metrics
      - name
      - node_id
      - pid
      - ppid
      - threads
      type: object
    ModelRegisterInvitedUserRequest:
      example:
        password: password
        code: code
        last_name: last_name
        first_name: first_name
        is_temporary_password: true
      properties:
        code:
          type: string
        first_name:
          type: string
        is_temporary_password:
          type: boolean
        last_name:
          type: string
        password:
          type: string
      required:
      - code
      - first_name
      - is_temporary_password
      - last_name
      - password
      type: object
    ModelResponse:
      example:
        data:
          access_token: access_token
          refresh_token: refresh_token
        success: true
        error_fields:
          key: error_fields
        message: message
      properties:
        data:
          $ref: '#/components/schemas/ModelResponseAccessToken'
        error_fields:
          additionalProperties:
            type: string
          nullable: true
          type: object
        message:
          type: string
        success:
          type: boolean
      type: object
    ModelResponseAccessToken:
      example:
        access_token: access_token
        refresh_token: refresh_token
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      required:
      - access_token
      - refresh_token
      type: object
    ModelScanInfo:
      example:
        updated_at: 0
        scan_id: scan_id
        status: status
      properties:
        scan_id:
          type: string
        status:
          type: string
        updated_at:
          format: int64
          type: integer
      required:
      - scan_id
      - status
      - updated_at
      type: object
    ModelScanListReq:
      example:
        node_type: image
        window:
          offset: 0
          size: 6
        node_id: node_id
      properties:
        node_id:
          type: string
        node_type:
          enum:
          - image
          - host
          - container
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - node_id
      - node_type
      - window
      type: object
    ModelScanListResp:
      example:
        scans_info:
        - updated_at: 0
          scan_id: scan_id
          status: status
        - updated_at: 0
          scan_id: scan_id
          status: status
      properties:
        scans_info:
          items:
            $ref: '#/components/schemas/ModelScanInfo'
          nullable: true
          type: array
      required:
      - scans_info
      type: object
    ModelScanResultsReq:
      example:
        scan_id: scan_id
        window:
          offset: 0
          size: 6
      properties:
        scan_id:
          type: string
        window:
          $ref: '#/components/schemas/ModelFetchWindow'
      required:
      - scan_id
      - window
      type: object
    ModelScanResultsResp:
      example:
        results:
        - key: ""
        - key: ""
      properties:
        results:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
      required:
      - results
      type: object
    ModelScanStatus:
      type: string
    ModelScanStatusResp:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    ModelScanTriggerReq:
      example:
        node_type: image
        node_id: node_id
      properties:
        node_id:
          type: string
        node_type:
          enum:
          - image
          - host
          - container
          type: string
      required:
      - node_id
      - node_type
      type: object
    ModelScanTriggerResp:
      example:
        scan_id: scan_id
      properties:
        scan_id:
          type: string
      required:
      - scan_id
      type: object
    ModelUser:
      example:
        is_active: true
        role: role
        company_id: 0
        role_id: 1
        groups:
          key: groups
        last_name: last_name
        company: company
        id: 6
        password_invalidated: true
        first_name: first_name
        email: email
      properties:
        company:
          type: string
        company_id:
          type: integer
        email:
          type: string
        first_name:
          type: string
        groups:
          additionalProperties:
            type: string
          nullable: true
          type: object
        id:
          type: integer
        is_active:
          type: boolean
        last_name:
          type: string
        password_invalidated:
          type: boolean
        role:
          type: string
        role_id:
          type: integer
      type: object
    ModelUserRegisterRequest:
      example:
        password: password
        console_url: console_url
        last_name: last_name
        company: company
        first_name: first_name
        is_temporary_password: true
        email: email
      properties:
        company:
          type: string
        console_url:
          type: string
        email:
          type: string
        first_name:
          type: string
        is_temporary_password:
          type: boolean
        last_name:
          type: string
        password:
          type: string
      required:
      - company
      - console_url
      - email
      - first_name
      - is_temporary_password
      - last_name
      - password
      type: object
    PostgresqlDbApiToken:
      type: object
    ReportColumn:
      example:
        dataType: dataType
        id: id
        label: label
      properties:
        dataType:
          type: string
        id:
          type: string
        label:
          type: string
      type: object
    ReportIDList:
      items:
        type: string
      type: array
    ReportMetadataRow:
      example:
        truncate: 6
        dataType: dataType
        id: id
        label: label
        priority: 0.8008281904610115
        value: value
      properties:
        dataType:
          type: string
        id:
          type: string
        label:
          type: string
        priority:
          type: number
        truncate:
          type: integer
        value:
          type: string
      type: object
    ReportMetricRow:
      type: object
    ReportRow:
      example:
        entries:
          key: entries
        id: id
      properties:
        entries:
          additionalProperties:
            type: string
          nullable: true
          type: object
        id:
          type: string
      type: object
    ReportTable:
      example:
        truncationCount: 1
        columns:
        - dataType: dataType
          id: id
          label: label
        - dataType: dataType
          id: id
          label: label
        id: id
        label: label
        rows:
        - entries:
            key: entries
          id: id
        - entries:
            key: entries
          id: id
        type: type
      properties:
        columns:
          items:
            $ref: '#/components/schemas/ReportColumn'
          nullable: true
          type: array
        id:
          type: string
        label:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/ReportRow'
          nullable: true
          type: array
        truncationCount:
          type: integer
        type:
          type: string
      type: object
    ReportersContainsFilter:
      example:
        filter_in:
          key:
          - ""
          - ""
      properties:
        filter_in:
          additionalProperties:
            items: {}
            type: array
          nullable: true
          type: object
      required:
      - filter_in
      type: object
    ReportersFieldsFilters:
      example:
        contains_filter:
          filter_in:
            key:
            - ""
            - ""
      properties:
        contains_filter:
          $ref: '#/components/schemas/ReportersContainsFilter'
      required:
      - contains_filter
      type: object
    ReportersLookupFilter:
      example:
        in_field_filter:
        - in_field_filter
        - in_field_filter
        node_ids:
        - node_ids
        - node_ids
      properties:
        in_field_filter:
          items:
            type: string
          nullable: true
          type: array
        node_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - in_field_filter
      - node_ids
      type: object
    ReportersNodeInfo:
      properties:
        compliance_count:
          type: integer
        compliance_scan_id:
          type: string
        image_name:
          type: string
        name:
          type: string
        node_id:
          type: string
        secrets_count:
          type: integer
        secrets_scan_id:
          type: string
        vulnerability_count:
          type: integer
        vulnerability_scan_id:
          type: string
      required:
      - compliance_count
      - compliance_scan_id
      - image_name
      - name
      - node_id
      - secrets_count
      - secrets_scan_id
      - vulnerability_count
      - vulnerability_scan_id
      type: object
    ReportersProviderThreatGraph:
      properties:
        compliance_count:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/ReportersThreatNodeInfo'
          nullable: true
          type: array
        secrets_count:
          type: integer
        vulnerability_count:
          type: integer
      required:
      - compliance_count
      - resources
      - secrets_count
      - vulnerability_count
      type: object
    ReportersThreatGraph:
      additionalProperties:
        $ref: '#/components/schemas/ReportersProviderThreatGraph'
      nullable: true
      type: object
    ReportersThreatNodeInfo:
      properties:
        attack_path:
          items:
            items:
              type: string
            type: array
          nullable: true
          type: array
        compliance_count:
          type: integer
        count:
          type: integer
        id:
          type: string
        label:
          type: string
        node_type:
          type: string
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/ReportersNodeInfo'
          nullable: true
          type: object
        secrets_count:
          type: integer
        vulnerability_count:
          type: integer
      required:
      - attack_path
      - compliance_count
      - count
      - id
      - label
      - node_type
      - nodes
      - secrets_count
      - vulnerability_count
      type: object
    ReportersTopologyFilters:
      example:
        host_filter:
        - host_filter
        - host_filter
        field_filters:
          contains_filter:
            filter_in:
              key:
              - ""
              - ""
        cloud_filter:
        - cloud_filter
        - cloud_filter
        kubernetes_filter:
        - kubernetes_filter
        - kubernetes_filter
        pod_filter:
        - pod_filter
        - pod_filter
        region_filter:
        - region_filter
        - region_filter
      properties:
        cloud_filter:
          items:
            type: string
          nullable: true
          type: array
        field_filters:
          $ref: '#/components/schemas/ReportersFieldsFilters'
        host_filter:
          items:
            type: string
          nullable: true
          type: array
        kubernetes_filter:
          items:
            type: string
          nullable: true
          type: array
        pod_filter:
          items:
            type: string
          nullable: true
          type: array
        region_filter:
          items:
            type: string
          nullable: true
          type: array
      required:
      - cloud_filter
      - field_filters
      - host_filter
      - kubernetes_filter
      - pod_filter
      - region_filter
      type: object
    UtilsSbomRequest:
      example:
        mode: mode
        image_name: image_name
        node_type: node_type
        container_name: container_name
        kubernetes_cluster_name: kubernetes_cluster_name
        sbom:
        - 0
        - 0
        scan_type: scan_type
        scan_id: scan_id
        image_id: image_id
        sbom_file_path: sbom_file_path
        host_name: host_name
        node_id: node_id
      properties:
        container_name:
          type: string
        host_name:
          type: string
        image_id:
          type: string
        image_name:
          type: string
        kubernetes_cluster_name:
          type: string
        mode:
          type: string
        node_id:
          type: string
        node_type:
          type: string
        sbom:
          items:
            minimum: 0
            type: integer
          type: array
        sbom_file_path:
          type: string
        scan_id:
          type: string
        scan_type:
          type: string
      type: object
    IngestersSecret_Match:
      example:
        full_filename: full_filename
        matched_content: matched_content
        relative_ending_index: 0
        starting_index: 1
        relative_starting_index: 6
      properties:
        full_filename:
          type: string
        matched_content:
          type: string
        relative_ending_index:
          type: integer
        relative_starting_index:
          type: integer
        starting_index:
          type: integer
      type: object
    IngestersSecret_Rule:
      example:
        part: part
        name: name
        signature_to_match: signature_to_match
        id: 5
      properties:
        id:
          type: integer
        name:
          type: string
        part:
          type: string
        signature_to_match:
          type: string
      type: object
    IngestersSecret_Severity:
      example:
        score: 5.637376656633329
        level: level
      properties:
        level:
          type: string
        score:
          type: number
      type: object
  securitySchemes:
    bearer_token:
      bearerFormat: JWT
      description: RW Access
      scheme: bearer
      type: http
