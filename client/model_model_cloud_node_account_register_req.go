/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.2.1
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelCloudNodeAccountRegisterReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelCloudNodeAccountRegisterReq{}

// ModelCloudNodeAccountRegisterReq struct for ModelCloudNodeAccountRegisterReq
type ModelCloudNodeAccountRegisterReq struct {
	AccountId string `json:"account_id"`
	AccountName string `json:"account_name"`
	CloudProvider string `json:"cloud_provider"`
	HostNodeId string `json:"host_node_id"`
	IsOrganizationDeployment *bool `json:"is_organization_deployment,omitempty"`
	MonitoredAccounts []ModelCloudNodeMonitoredAccount `json:"monitored_accounts,omitempty"`
	NodeId string `json:"node_id"`
	OrganizationAccountId *string `json:"organization_account_id,omitempty"`
	Version string `json:"version"`
}

type _ModelCloudNodeAccountRegisterReq ModelCloudNodeAccountRegisterReq

// NewModelCloudNodeAccountRegisterReq instantiates a new ModelCloudNodeAccountRegisterReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelCloudNodeAccountRegisterReq(accountId string, accountName string, cloudProvider string, hostNodeId string, nodeId string, version string) *ModelCloudNodeAccountRegisterReq {
	this := ModelCloudNodeAccountRegisterReq{}
	this.AccountId = accountId
	this.AccountName = accountName
	this.CloudProvider = cloudProvider
	this.HostNodeId = hostNodeId
	this.NodeId = nodeId
	this.Version = version
	return &this
}

// NewModelCloudNodeAccountRegisterReqWithDefaults instantiates a new ModelCloudNodeAccountRegisterReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelCloudNodeAccountRegisterReqWithDefaults() *ModelCloudNodeAccountRegisterReq {
	this := ModelCloudNodeAccountRegisterReq{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *ModelCloudNodeAccountRegisterReq) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountName returns the AccountName field value
func (o *ModelCloudNodeAccountRegisterReq) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetAccountName(v string) {
	o.AccountName = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *ModelCloudNodeAccountRegisterReq) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetHostNodeId returns the HostNodeId field value
func (o *ModelCloudNodeAccountRegisterReq) GetHostNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostNodeId
}

// GetHostNodeIdOk returns a tuple with the HostNodeId field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetHostNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostNodeId, true
}

// SetHostNodeId sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetHostNodeId(v string) {
	o.HostNodeId = v
}

// GetIsOrganizationDeployment returns the IsOrganizationDeployment field value if set, zero value otherwise.
func (o *ModelCloudNodeAccountRegisterReq) GetIsOrganizationDeployment() bool {
	if o == nil || IsNil(o.IsOrganizationDeployment) {
		var ret bool
		return ret
	}
	return *o.IsOrganizationDeployment
}

// GetIsOrganizationDeploymentOk returns a tuple with the IsOrganizationDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetIsOrganizationDeploymentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOrganizationDeployment) {
		return nil, false
	}
	return o.IsOrganizationDeployment, true
}

// HasIsOrganizationDeployment returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasIsOrganizationDeployment() bool {
	if o != nil && !IsNil(o.IsOrganizationDeployment) {
		return true
	}

	return false
}

// SetIsOrganizationDeployment gets a reference to the given bool and assigns it to the IsOrganizationDeployment field.
func (o *ModelCloudNodeAccountRegisterReq) SetIsOrganizationDeployment(v bool) {
	o.IsOrganizationDeployment = &v
}

// GetMonitoredAccounts returns the MonitoredAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelCloudNodeAccountRegisterReq) GetMonitoredAccounts() []ModelCloudNodeMonitoredAccount {
	if o == nil {
		var ret []ModelCloudNodeMonitoredAccount
		return ret
	}
	return o.MonitoredAccounts
}

// GetMonitoredAccountsOk returns a tuple with the MonitoredAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCloudNodeAccountRegisterReq) GetMonitoredAccountsOk() ([]ModelCloudNodeMonitoredAccount, bool) {
	if o == nil || IsNil(o.MonitoredAccounts) {
		return nil, false
	}
	return o.MonitoredAccounts, true
}

// HasMonitoredAccounts returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasMonitoredAccounts() bool {
	if o != nil && !IsNil(o.MonitoredAccounts) {
		return true
	}

	return false
}

// SetMonitoredAccounts gets a reference to the given []ModelCloudNodeMonitoredAccount and assigns it to the MonitoredAccounts field.
func (o *ModelCloudNodeAccountRegisterReq) SetMonitoredAccounts(v []ModelCloudNodeMonitoredAccount) {
	o.MonitoredAccounts = v
}

// GetNodeId returns the NodeId field value
func (o *ModelCloudNodeAccountRegisterReq) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetNodeId(v string) {
	o.NodeId = v
}

// GetOrganizationAccountId returns the OrganizationAccountId field value if set, zero value otherwise.
func (o *ModelCloudNodeAccountRegisterReq) GetOrganizationAccountId() string {
	if o == nil || IsNil(o.OrganizationAccountId) {
		var ret string
		return ret
	}
	return *o.OrganizationAccountId
}

// GetOrganizationAccountIdOk returns a tuple with the OrganizationAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetOrganizationAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationAccountId) {
		return nil, false
	}
	return o.OrganizationAccountId, true
}

// HasOrganizationAccountId returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasOrganizationAccountId() bool {
	if o != nil && !IsNil(o.OrganizationAccountId) {
		return true
	}

	return false
}

// SetOrganizationAccountId gets a reference to the given string and assigns it to the OrganizationAccountId field.
func (o *ModelCloudNodeAccountRegisterReq) SetOrganizationAccountId(v string) {
	o.OrganizationAccountId = &v
}

// GetVersion returns the Version field value
func (o *ModelCloudNodeAccountRegisterReq) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetVersion(v string) {
	o.Version = v
}

func (o ModelCloudNodeAccountRegisterReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelCloudNodeAccountRegisterReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["account_name"] = o.AccountName
	toSerialize["cloud_provider"] = o.CloudProvider
	toSerialize["host_node_id"] = o.HostNodeId
	if !IsNil(o.IsOrganizationDeployment) {
		toSerialize["is_organization_deployment"] = o.IsOrganizationDeployment
	}
	if o.MonitoredAccounts != nil {
		toSerialize["monitored_accounts"] = o.MonitoredAccounts
	}
	toSerialize["node_id"] = o.NodeId
	if !IsNil(o.OrganizationAccountId) {
		toSerialize["organization_account_id"] = o.OrganizationAccountId
	}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *ModelCloudNodeAccountRegisterReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"account_name",
		"cloud_provider",
		"host_node_id",
		"node_id",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelCloudNodeAccountRegisterReq := _ModelCloudNodeAccountRegisterReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelCloudNodeAccountRegisterReq)

	if err != nil {
		return err
	}

	*o = ModelCloudNodeAccountRegisterReq(varModelCloudNodeAccountRegisterReq)

	return err
}

type NullableModelCloudNodeAccountRegisterReq struct {
	value *ModelCloudNodeAccountRegisterReq
	isSet bool
}

func (v NullableModelCloudNodeAccountRegisterReq) Get() *ModelCloudNodeAccountRegisterReq {
	return v.value
}

func (v *NullableModelCloudNodeAccountRegisterReq) Set(val *ModelCloudNodeAccountRegisterReq) {
	v.value = val
	v.isSet = true
}

func (v NullableModelCloudNodeAccountRegisterReq) IsSet() bool {
	return v.isSet
}

func (v *NullableModelCloudNodeAccountRegisterReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelCloudNodeAccountRegisterReq(val *ModelCloudNodeAccountRegisterReq) *NullableModelCloudNodeAccountRegisterReq {
	return &NullableModelCloudNodeAccountRegisterReq{value: val, isSet: true}
}

func (v NullableModelCloudNodeAccountRegisterReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelCloudNodeAccountRegisterReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


