/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelCloudNodeAccountRegisterReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelCloudNodeAccountRegisterReq{}

// ModelCloudNodeAccountRegisterReq struct for ModelCloudNodeAccountRegisterReq
type ModelCloudNodeAccountRegisterReq struct {
	CloudAccount string `json:"cloud_account"`
	CloudProvider string `json:"cloud_provider"`
	MonitoredAccountIds map[string]string `json:"monitored_account_ids,omitempty"`
	NodeId string `json:"node_id"`
	OrgAccId *string `json:"org_acc_id,omitempty"`
	Version *string `json:"version,omitempty"`
}

type _ModelCloudNodeAccountRegisterReq ModelCloudNodeAccountRegisterReq

// NewModelCloudNodeAccountRegisterReq instantiates a new ModelCloudNodeAccountRegisterReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelCloudNodeAccountRegisterReq(cloudAccount string, cloudProvider string, nodeId string) *ModelCloudNodeAccountRegisterReq {
	this := ModelCloudNodeAccountRegisterReq{}
	this.CloudAccount = cloudAccount
	this.CloudProvider = cloudProvider
	this.NodeId = nodeId
	return &this
}

// NewModelCloudNodeAccountRegisterReqWithDefaults instantiates a new ModelCloudNodeAccountRegisterReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelCloudNodeAccountRegisterReqWithDefaults() *ModelCloudNodeAccountRegisterReq {
	this := ModelCloudNodeAccountRegisterReq{}
	return &this
}

// GetCloudAccount returns the CloudAccount field value
func (o *ModelCloudNodeAccountRegisterReq) GetCloudAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudAccount
}

// GetCloudAccountOk returns a tuple with the CloudAccount field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetCloudAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAccount, true
}

// SetCloudAccount sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetCloudAccount(v string) {
	o.CloudAccount = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *ModelCloudNodeAccountRegisterReq) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetMonitoredAccountIds returns the MonitoredAccountIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelCloudNodeAccountRegisterReq) GetMonitoredAccountIds() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.MonitoredAccountIds
}

// GetMonitoredAccountIdsOk returns a tuple with the MonitoredAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCloudNodeAccountRegisterReq) GetMonitoredAccountIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.MonitoredAccountIds) {
		return nil, false
	}
	return &o.MonitoredAccountIds, true
}

// HasMonitoredAccountIds returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasMonitoredAccountIds() bool {
	if o != nil && !IsNil(o.MonitoredAccountIds) {
		return true
	}

	return false
}

// SetMonitoredAccountIds gets a reference to the given map[string]string and assigns it to the MonitoredAccountIds field.
func (o *ModelCloudNodeAccountRegisterReq) SetMonitoredAccountIds(v map[string]string) {
	o.MonitoredAccountIds = v
}

// GetNodeId returns the NodeId field value
func (o *ModelCloudNodeAccountRegisterReq) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelCloudNodeAccountRegisterReq) SetNodeId(v string) {
	o.NodeId = v
}

// GetOrgAccId returns the OrgAccId field value if set, zero value otherwise.
func (o *ModelCloudNodeAccountRegisterReq) GetOrgAccId() string {
	if o == nil || IsNil(o.OrgAccId) {
		var ret string
		return ret
	}
	return *o.OrgAccId
}

// GetOrgAccIdOk returns a tuple with the OrgAccId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetOrgAccIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgAccId) {
		return nil, false
	}
	return o.OrgAccId, true
}

// HasOrgAccId returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasOrgAccId() bool {
	if o != nil && !IsNil(o.OrgAccId) {
		return true
	}

	return false
}

// SetOrgAccId gets a reference to the given string and assigns it to the OrgAccId field.
func (o *ModelCloudNodeAccountRegisterReq) SetOrgAccId(v string) {
	o.OrgAccId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ModelCloudNodeAccountRegisterReq) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCloudNodeAccountRegisterReq) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ModelCloudNodeAccountRegisterReq) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ModelCloudNodeAccountRegisterReq) SetVersion(v string) {
	o.Version = &v
}

func (o ModelCloudNodeAccountRegisterReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelCloudNodeAccountRegisterReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud_account"] = o.CloudAccount
	toSerialize["cloud_provider"] = o.CloudProvider
	if o.MonitoredAccountIds != nil {
		toSerialize["monitored_account_ids"] = o.MonitoredAccountIds
	}
	toSerialize["node_id"] = o.NodeId
	if !IsNil(o.OrgAccId) {
		toSerialize["org_acc_id"] = o.OrgAccId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *ModelCloudNodeAccountRegisterReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud_account",
		"cloud_provider",
		"node_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelCloudNodeAccountRegisterReq := _ModelCloudNodeAccountRegisterReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelCloudNodeAccountRegisterReq)

	if err != nil {
		return err
	}

	*o = ModelCloudNodeAccountRegisterReq(varModelCloudNodeAccountRegisterReq)

	return err
}

type NullableModelCloudNodeAccountRegisterReq struct {
	value *ModelCloudNodeAccountRegisterReq
	isSet bool
}

func (v NullableModelCloudNodeAccountRegisterReq) Get() *ModelCloudNodeAccountRegisterReq {
	return v.value
}

func (v *NullableModelCloudNodeAccountRegisterReq) Set(val *ModelCloudNodeAccountRegisterReq) {
	v.value = val
	v.isSet = true
}

func (v NullableModelCloudNodeAccountRegisterReq) IsSet() bool {
	return v.isSet
}

func (v *NullableModelCloudNodeAccountRegisterReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelCloudNodeAccountRegisterReq(val *ModelCloudNodeAccountRegisterReq) *NullableModelCloudNodeAccountRegisterReq {
	return &NullableModelCloudNodeAccountRegisterReq{value: val, isSet: true}
}

func (v NullableModelCloudNodeAccountRegisterReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelCloudNodeAccountRegisterReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


