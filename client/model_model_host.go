/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the ModelHost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelHost{}

// ModelHost struct for ModelHost
type ModelHost struct {
	CloudMetadata map[string]interface{} `json:"cloud_metadata"`
	ContainerImages []ModelContainerImage `json:"container_images"`
	Containers []ModelContainer `json:"containers"`
	HostName string `json:"host_name"`
	Metrics ModelComputeMetrics `json:"metrics"`
	NodeId string `json:"node_id"`
	Pods []ModelPod `json:"pods"`
	Processes []ModelProcess `json:"processes"`
}

// NewModelHost instantiates a new ModelHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelHost(cloudMetadata map[string]interface{}, containerImages []ModelContainerImage, containers []ModelContainer, hostName string, metrics ModelComputeMetrics, nodeId string, pods []ModelPod, processes []ModelProcess) *ModelHost {
	this := ModelHost{}
	this.CloudMetadata = cloudMetadata
	this.ContainerImages = containerImages
	this.Containers = containers
	this.HostName = hostName
	this.Metrics = metrics
	this.NodeId = nodeId
	this.Pods = pods
	this.Processes = processes
	return &this
}

// NewModelHostWithDefaults instantiates a new ModelHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelHostWithDefaults() *ModelHost {
	this := ModelHost{}
	return &this
}

// GetCloudMetadata returns the CloudMetadata field value
func (o *ModelHost) GetCloudMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.CloudMetadata
}

// GetCloudMetadataOk returns a tuple with the CloudMetadata field value
// and a boolean to check if the value has been set.
func (o *ModelHost) GetCloudMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.CloudMetadata, true
}

// SetCloudMetadata sets field value
func (o *ModelHost) SetCloudMetadata(v map[string]interface{}) {
	o.CloudMetadata = v
}

// GetContainerImages returns the ContainerImages field value
// If the value is explicit nil, the zero value for []ModelContainerImage will be returned
func (o *ModelHost) GetContainerImages() []ModelContainerImage {
	if o == nil {
		var ret []ModelContainerImage
		return ret
	}

	return o.ContainerImages
}

// GetContainerImagesOk returns a tuple with the ContainerImages field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelHost) GetContainerImagesOk() ([]ModelContainerImage, bool) {
	if o == nil || isNil(o.ContainerImages) {
		return nil, false
	}
	return o.ContainerImages, true
}

// SetContainerImages sets field value
func (o *ModelHost) SetContainerImages(v []ModelContainerImage) {
	o.ContainerImages = v
}

// GetContainers returns the Containers field value
// If the value is explicit nil, the zero value for []ModelContainer will be returned
func (o *ModelHost) GetContainers() []ModelContainer {
	if o == nil {
		var ret []ModelContainer
		return ret
	}

	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelHost) GetContainersOk() ([]ModelContainer, bool) {
	if o == nil || isNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// SetContainers sets field value
func (o *ModelHost) SetContainers(v []ModelContainer) {
	o.Containers = v
}

// GetHostName returns the HostName field value
func (o *ModelHost) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *ModelHost) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *ModelHost) SetHostName(v string) {
	o.HostName = v
}

// GetMetrics returns the Metrics field value
func (o *ModelHost) GetMetrics() ModelComputeMetrics {
	if o == nil {
		var ret ModelComputeMetrics
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *ModelHost) GetMetricsOk() (*ModelComputeMetrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *ModelHost) SetMetrics(v ModelComputeMetrics) {
	o.Metrics = v
}

// GetNodeId returns the NodeId field value
func (o *ModelHost) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelHost) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelHost) SetNodeId(v string) {
	o.NodeId = v
}

// GetPods returns the Pods field value
// If the value is explicit nil, the zero value for []ModelPod will be returned
func (o *ModelHost) GetPods() []ModelPod {
	if o == nil {
		var ret []ModelPod
		return ret
	}

	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelHost) GetPodsOk() ([]ModelPod, bool) {
	if o == nil || isNil(o.Pods) {
		return nil, false
	}
	return o.Pods, true
}

// SetPods sets field value
func (o *ModelHost) SetPods(v []ModelPod) {
	o.Pods = v
}

// GetProcesses returns the Processes field value
// If the value is explicit nil, the zero value for []ModelProcess will be returned
func (o *ModelHost) GetProcesses() []ModelProcess {
	if o == nil {
		var ret []ModelProcess
		return ret
	}

	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelHost) GetProcessesOk() ([]ModelProcess, bool) {
	if o == nil || isNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// SetProcesses sets field value
func (o *ModelHost) SetProcesses(v []ModelProcess) {
	o.Processes = v
}

func (o ModelHost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelHost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud_metadata"] = o.CloudMetadata
	if o.ContainerImages != nil {
		toSerialize["container_images"] = o.ContainerImages
	}
	if o.Containers != nil {
		toSerialize["containers"] = o.Containers
	}
	toSerialize["host_name"] = o.HostName
	toSerialize["metrics"] = o.Metrics
	toSerialize["node_id"] = o.NodeId
	if o.Pods != nil {
		toSerialize["pods"] = o.Pods
	}
	if o.Processes != nil {
		toSerialize["processes"] = o.Processes
	}
	return toSerialize, nil
}

type NullableModelHost struct {
	value *ModelHost
	isSet bool
}

func (v NullableModelHost) Get() *ModelHost {
	return v.value
}

func (v *NullableModelHost) Set(val *ModelHost) {
	v.value = val
	v.isSet = true
}

func (v NullableModelHost) IsSet() bool {
	return v.isSet
}

func (v *NullableModelHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelHost(val *ModelHost) *NullableModelHost {
	return &NullableModelHost{value: val, isSet: true}
}

func (v NullableModelHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


