/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelDownloadScanResultsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelDownloadScanResultsResponse{}

// ModelDownloadScanResultsResponse struct for ModelDownloadScanResultsResponse
type ModelDownloadScanResultsResponse struct {
	ScanInfo *ModelScanResultsCommon `json:"scan_info,omitempty"`
	ScanResults []interface{} `json:"scan_results,omitempty"`
}

// NewModelDownloadScanResultsResponse instantiates a new ModelDownloadScanResultsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelDownloadScanResultsResponse() *ModelDownloadScanResultsResponse {
	this := ModelDownloadScanResultsResponse{}
	return &this
}

// NewModelDownloadScanResultsResponseWithDefaults instantiates a new ModelDownloadScanResultsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelDownloadScanResultsResponseWithDefaults() *ModelDownloadScanResultsResponse {
	this := ModelDownloadScanResultsResponse{}
	return &this
}

// GetScanInfo returns the ScanInfo field value if set, zero value otherwise.
func (o *ModelDownloadScanResultsResponse) GetScanInfo() ModelScanResultsCommon {
	if o == nil || IsNil(o.ScanInfo) {
		var ret ModelScanResultsCommon
		return ret
	}
	return *o.ScanInfo
}

// GetScanInfoOk returns a tuple with the ScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDownloadScanResultsResponse) GetScanInfoOk() (*ModelScanResultsCommon, bool) {
	if o == nil || IsNil(o.ScanInfo) {
		return nil, false
	}
	return o.ScanInfo, true
}

// HasScanInfo returns a boolean if a field has been set.
func (o *ModelDownloadScanResultsResponse) HasScanInfo() bool {
	if o != nil && !IsNil(o.ScanInfo) {
		return true
	}

	return false
}

// SetScanInfo gets a reference to the given ModelScanResultsCommon and assigns it to the ScanInfo field.
func (o *ModelDownloadScanResultsResponse) SetScanInfo(v ModelScanResultsCommon) {
	o.ScanInfo = &v
}

// GetScanResults returns the ScanResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelDownloadScanResultsResponse) GetScanResults() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.ScanResults
}

// GetScanResultsOk returns a tuple with the ScanResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelDownloadScanResultsResponse) GetScanResultsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ScanResults) {
		return nil, false
	}
	return o.ScanResults, true
}

// HasScanResults returns a boolean if a field has been set.
func (o *ModelDownloadScanResultsResponse) HasScanResults() bool {
	if o != nil && !IsNil(o.ScanResults) {
		return true
	}

	return false
}

// SetScanResults gets a reference to the given []interface{} and assigns it to the ScanResults field.
func (o *ModelDownloadScanResultsResponse) SetScanResults(v []interface{}) {
	o.ScanResults = v
}

func (o ModelDownloadScanResultsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelDownloadScanResultsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanInfo) {
		toSerialize["scan_info"] = o.ScanInfo
	}
	if o.ScanResults != nil {
		toSerialize["scan_results"] = o.ScanResults
	}
	return toSerialize, nil
}

type NullableModelDownloadScanResultsResponse struct {
	value *ModelDownloadScanResultsResponse
	isSet bool
}

func (v NullableModelDownloadScanResultsResponse) Get() *ModelDownloadScanResultsResponse {
	return v.value
}

func (v *NullableModelDownloadScanResultsResponse) Set(val *ModelDownloadScanResultsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelDownloadScanResultsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelDownloadScanResultsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelDownloadScanResultsResponse(val *ModelDownloadScanResultsResponse) *NullableModelDownloadScanResultsResponse {
	return &NullableModelDownloadScanResultsResponse{value: val, isSet: true}
}

func (v NullableModelDownloadScanResultsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelDownloadScanResultsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


