/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelBulkScanIdsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelBulkScanIdsResp{}

// ModelBulkScanIdsResp struct for ModelBulkScanIdsResp
type ModelBulkScanIdsResp struct {
	ScanIds []string `json:"scan_ids"`
}

// NewModelBulkScanIdsResp instantiates a new ModelBulkScanIdsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelBulkScanIdsResp(scanIds []string) *ModelBulkScanIdsResp {
	this := ModelBulkScanIdsResp{}
	this.ScanIds = scanIds
	return &this
}

// NewModelBulkScanIdsRespWithDefaults instantiates a new ModelBulkScanIdsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelBulkScanIdsRespWithDefaults() *ModelBulkScanIdsResp {
	this := ModelBulkScanIdsResp{}
	return &this
}

// GetScanIds returns the ScanIds field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelBulkScanIdsResp) GetScanIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ScanIds
}

// GetScanIdsOk returns a tuple with the ScanIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBulkScanIdsResp) GetScanIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ScanIds) {
		return nil, false
	}
	return o.ScanIds, true
}

// SetScanIds sets field value
func (o *ModelBulkScanIdsResp) SetScanIds(v []string) {
	o.ScanIds = v
}

func (o ModelBulkScanIdsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelBulkScanIdsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ScanIds != nil {
		toSerialize["scan_ids"] = o.ScanIds
	}
	return toSerialize, nil
}

type NullableModelBulkScanIdsResp struct {
	value *ModelBulkScanIdsResp
	isSet bool
}

func (v NullableModelBulkScanIdsResp) Get() *ModelBulkScanIdsResp {
	return v.value
}

func (v *NullableModelBulkScanIdsResp) Set(val *ModelBulkScanIdsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableModelBulkScanIdsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableModelBulkScanIdsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelBulkScanIdsResp(val *ModelBulkScanIdsResp) *NullableModelBulkScanIdsResp {
	return &NullableModelBulkScanIdsResp{value: val, isSet: true}
}

func (v NullableModelBulkScanIdsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelBulkScanIdsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


