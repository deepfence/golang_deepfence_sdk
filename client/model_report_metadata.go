/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ReportMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportMetadata{}

// ReportMetadata struct for ReportMetadata
type ReportMetadata struct {
	AgentRunning *bool `json:"agent_running,omitempty"`
	AvailabilityZone *string `json:"availability_zone,omitempty"`
	CloudAccountId *string `json:"cloud_account_id,omitempty"`
	CloudProvider *string `json:"cloud_provider,omitempty"`
	CloudRegion *string `json:"cloud_region,omitempty"`
	Cmdline *string `json:"cmdline,omitempty"`
	ConnectionCount *int32 `json:"connection_count,omitempty"`
	CopyOf *string `json:"copy_of,omitempty"`
	CpuMax *float32 `json:"cpu_max,omitempty"`
	CpuUsage *float32 `json:"cpu_usage,omitempty"`
	DockerContainerCommand *string `json:"docker_container_command,omitempty"`
	DockerContainerCreated *string `json:"docker_container_created,omitempty"`
	DockerContainerIps []string `json:"docker_container_ips,omitempty"`
	DockerContainerName *string `json:"docker_container_name,omitempty"`
	DockerContainerNetworkMode *string `json:"docker_container_network_mode,omitempty"`
	DockerContainerNetworks *string `json:"docker_container_networks,omitempty"`
	DockerContainerPorts *string `json:"docker_container_ports,omitempty"`
	DockerContainerState *string `json:"docker_container_state,omitempty"`
	DockerContainerStateHuman *string `json:"docker_container_state_human,omitempty"`
	DockerEnv *string `json:"docker_env,omitempty"`
	DockerImageCreatedAt *string `json:"docker_image_created_at,omitempty"`
	DockerImageId *string `json:"docker_image_id,omitempty"`
	DockerImageName *string `json:"docker_image_name,omitempty"`
	DockerImageNameWithTag *string `json:"docker_image_name_with_tag,omitempty"`
	DockerImageSize *string `json:"docker_image_size,omitempty"`
	DockerImageTag *string `json:"docker_image_tag,omitempty"`
	DockerImageVirtualSize *string `json:"docker_image_virtual_size,omitempty"`
	DockerLabel *string `json:"docker_label,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	InstanceId *string `json:"instance_id,omitempty"`
	InstanceType *string `json:"instance_type,omitempty"`
	InterfaceIpMap *string `json:"interface_ip_map,omitempty"`
	InterfaceIps []string `json:"interface_ips,omitempty"`
	InterfaceNames []string `json:"interface_names,omitempty"`
	IsConsoleVm *bool `json:"is_console_vm,omitempty"`
	KernelId *string `json:"kernel_id,omitempty"`
	KernelVersion *string `json:"kernel_version,omitempty"`
	KubernetesClusterId *string `json:"kubernetes_cluster_id,omitempty"`
	KubernetesClusterName *string `json:"kubernetes_cluster_name,omitempty"`
	KubernetesCreated *string `json:"kubernetes_created,omitempty"`
	KubernetesIngressIp []string `json:"kubernetes_ingress_ip,omitempty"`
	KubernetesIp *string `json:"kubernetes_ip,omitempty"`
	KubernetesIsInHostNetwork *bool `json:"kubernetes_is_in_host_network,omitempty"`
	KubernetesLabels *string `json:"kubernetes_labels,omitempty"`
	KubernetesNamespace *string `json:"kubernetes_namespace,omitempty"`
	KubernetesPorts []string `json:"kubernetes_ports,omitempty"`
	KubernetesPublicIp *string `json:"kubernetes_public_ip,omitempty"`
	KubernetesState *string `json:"kubernetes_state,omitempty"`
	KubernetesType *string `json:"kubernetes_type,omitempty"`
	LocalCidr []string `json:"local_cidr,omitempty"`
	LocalNetworks []string `json:"local_networks,omitempty"`
	MemoryMax *int32 `json:"memory_max,omitempty"`
	MemoryUsage *int32 `json:"memory_usage,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodeName *string `json:"node_name,omitempty"`
	NodeType *string `json:"node_type,omitempty"`
	OpenFiles []string `json:"open_files,omitempty"`
	OpenFilesCount *int32 `json:"open_files_count,omitempty"`
	Os *string `json:"os,omitempty"`
	Pid *int32 `json:"pid,omitempty"`
	PodId *string `json:"pod_id,omitempty"`
	PodName *string `json:"pod_name,omitempty"`
	Ppid *int32 `json:"ppid,omitempty"`
	PrivateIp []string `json:"private_ip,omitempty"`
	Pseudo *bool `json:"pseudo,omitempty"`
	PublicIp []string `json:"public_ip,omitempty"`
	ResourceGroup *string `json:"resource_group,omitempty"`
	ShortName *string `json:"short_name,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Threads *int32 `json:"threads,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Uptime *int32 `json:"uptime,omitempty"`
	UserDefinedTags []string `json:"user_defined_tags,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewReportMetadata instantiates a new ReportMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportMetadata() *ReportMetadata {
	this := ReportMetadata{}
	return &this
}

// NewReportMetadataWithDefaults instantiates a new ReportMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportMetadataWithDefaults() *ReportMetadata {
	this := ReportMetadata{}
	return &this
}

// GetAgentRunning returns the AgentRunning field value if set, zero value otherwise.
func (o *ReportMetadata) GetAgentRunning() bool {
	if o == nil || IsNil(o.AgentRunning) {
		var ret bool
		return ret
	}
	return *o.AgentRunning
}

// GetAgentRunningOk returns a tuple with the AgentRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetAgentRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.AgentRunning) {
		return nil, false
	}
	return o.AgentRunning, true
}

// HasAgentRunning returns a boolean if a field has been set.
func (o *ReportMetadata) HasAgentRunning() bool {
	if o != nil && !IsNil(o.AgentRunning) {
		return true
	}

	return false
}

// SetAgentRunning gets a reference to the given bool and assigns it to the AgentRunning field.
func (o *ReportMetadata) SetAgentRunning(v bool) {
	o.AgentRunning = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *ReportMetadata) GetAvailabilityZone() string {
	if o == nil || IsNil(o.AvailabilityZone) {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityZone) {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *ReportMetadata) HasAvailabilityZone() bool {
	if o != nil && !IsNil(o.AvailabilityZone) {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *ReportMetadata) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

// GetCloudAccountId returns the CloudAccountId field value if set, zero value otherwise.
func (o *ReportMetadata) GetCloudAccountId() string {
	if o == nil || IsNil(o.CloudAccountId) {
		var ret string
		return ret
	}
	return *o.CloudAccountId
}

// GetCloudAccountIdOk returns a tuple with the CloudAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCloudAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudAccountId) {
		return nil, false
	}
	return o.CloudAccountId, true
}

// HasCloudAccountId returns a boolean if a field has been set.
func (o *ReportMetadata) HasCloudAccountId() bool {
	if o != nil && !IsNil(o.CloudAccountId) {
		return true
	}

	return false
}

// SetCloudAccountId gets a reference to the given string and assigns it to the CloudAccountId field.
func (o *ReportMetadata) SetCloudAccountId(v string) {
	o.CloudAccountId = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *ReportMetadata) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *ReportMetadata) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *ReportMetadata) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCloudRegion returns the CloudRegion field value if set, zero value otherwise.
func (o *ReportMetadata) GetCloudRegion() string {
	if o == nil || IsNil(o.CloudRegion) {
		var ret string
		return ret
	}
	return *o.CloudRegion
}

// GetCloudRegionOk returns a tuple with the CloudRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCloudRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudRegion) {
		return nil, false
	}
	return o.CloudRegion, true
}

// HasCloudRegion returns a boolean if a field has been set.
func (o *ReportMetadata) HasCloudRegion() bool {
	if o != nil && !IsNil(o.CloudRegion) {
		return true
	}

	return false
}

// SetCloudRegion gets a reference to the given string and assigns it to the CloudRegion field.
func (o *ReportMetadata) SetCloudRegion(v string) {
	o.CloudRegion = &v
}

// GetCmdline returns the Cmdline field value if set, zero value otherwise.
func (o *ReportMetadata) GetCmdline() string {
	if o == nil || IsNil(o.Cmdline) {
		var ret string
		return ret
	}
	return *o.Cmdline
}

// GetCmdlineOk returns a tuple with the Cmdline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCmdlineOk() (*string, bool) {
	if o == nil || IsNil(o.Cmdline) {
		return nil, false
	}
	return o.Cmdline, true
}

// HasCmdline returns a boolean if a field has been set.
func (o *ReportMetadata) HasCmdline() bool {
	if o != nil && !IsNil(o.Cmdline) {
		return true
	}

	return false
}

// SetCmdline gets a reference to the given string and assigns it to the Cmdline field.
func (o *ReportMetadata) SetCmdline(v string) {
	o.Cmdline = &v
}

// GetConnectionCount returns the ConnectionCount field value if set, zero value otherwise.
func (o *ReportMetadata) GetConnectionCount() int32 {
	if o == nil || IsNil(o.ConnectionCount) {
		var ret int32
		return ret
	}
	return *o.ConnectionCount
}

// GetConnectionCountOk returns a tuple with the ConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetConnectionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectionCount) {
		return nil, false
	}
	return o.ConnectionCount, true
}

// HasConnectionCount returns a boolean if a field has been set.
func (o *ReportMetadata) HasConnectionCount() bool {
	if o != nil && !IsNil(o.ConnectionCount) {
		return true
	}

	return false
}

// SetConnectionCount gets a reference to the given int32 and assigns it to the ConnectionCount field.
func (o *ReportMetadata) SetConnectionCount(v int32) {
	o.ConnectionCount = &v
}

// GetCopyOf returns the CopyOf field value if set, zero value otherwise.
func (o *ReportMetadata) GetCopyOf() string {
	if o == nil || IsNil(o.CopyOf) {
		var ret string
		return ret
	}
	return *o.CopyOf
}

// GetCopyOfOk returns a tuple with the CopyOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCopyOfOk() (*string, bool) {
	if o == nil || IsNil(o.CopyOf) {
		return nil, false
	}
	return o.CopyOf, true
}

// HasCopyOf returns a boolean if a field has been set.
func (o *ReportMetadata) HasCopyOf() bool {
	if o != nil && !IsNil(o.CopyOf) {
		return true
	}

	return false
}

// SetCopyOf gets a reference to the given string and assigns it to the CopyOf field.
func (o *ReportMetadata) SetCopyOf(v string) {
	o.CopyOf = &v
}

// GetCpuMax returns the CpuMax field value if set, zero value otherwise.
func (o *ReportMetadata) GetCpuMax() float32 {
	if o == nil || IsNil(o.CpuMax) {
		var ret float32
		return ret
	}
	return *o.CpuMax
}

// GetCpuMaxOk returns a tuple with the CpuMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCpuMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.CpuMax) {
		return nil, false
	}
	return o.CpuMax, true
}

// HasCpuMax returns a boolean if a field has been set.
func (o *ReportMetadata) HasCpuMax() bool {
	if o != nil && !IsNil(o.CpuMax) {
		return true
	}

	return false
}

// SetCpuMax gets a reference to the given float32 and assigns it to the CpuMax field.
func (o *ReportMetadata) SetCpuMax(v float32) {
	o.CpuMax = &v
}

// GetCpuUsage returns the CpuUsage field value if set, zero value otherwise.
func (o *ReportMetadata) GetCpuUsage() float32 {
	if o == nil || IsNil(o.CpuUsage) {
		var ret float32
		return ret
	}
	return *o.CpuUsage
}

// GetCpuUsageOk returns a tuple with the CpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetCpuUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.CpuUsage) {
		return nil, false
	}
	return o.CpuUsage, true
}

// HasCpuUsage returns a boolean if a field has been set.
func (o *ReportMetadata) HasCpuUsage() bool {
	if o != nil && !IsNil(o.CpuUsage) {
		return true
	}

	return false
}

// SetCpuUsage gets a reference to the given float32 and assigns it to the CpuUsage field.
func (o *ReportMetadata) SetCpuUsage(v float32) {
	o.CpuUsage = &v
}

// GetDockerContainerCommand returns the DockerContainerCommand field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerCommand() string {
	if o == nil || IsNil(o.DockerContainerCommand) {
		var ret string
		return ret
	}
	return *o.DockerContainerCommand
}

// GetDockerContainerCommandOk returns a tuple with the DockerContainerCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerCommandOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerCommand) {
		return nil, false
	}
	return o.DockerContainerCommand, true
}

// HasDockerContainerCommand returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerCommand() bool {
	if o != nil && !IsNil(o.DockerContainerCommand) {
		return true
	}

	return false
}

// SetDockerContainerCommand gets a reference to the given string and assigns it to the DockerContainerCommand field.
func (o *ReportMetadata) SetDockerContainerCommand(v string) {
	o.DockerContainerCommand = &v
}

// GetDockerContainerCreated returns the DockerContainerCreated field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerCreated() string {
	if o == nil || IsNil(o.DockerContainerCreated) {
		var ret string
		return ret
	}
	return *o.DockerContainerCreated
}

// GetDockerContainerCreatedOk returns a tuple with the DockerContainerCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerCreated) {
		return nil, false
	}
	return o.DockerContainerCreated, true
}

// HasDockerContainerCreated returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerCreated() bool {
	if o != nil && !IsNil(o.DockerContainerCreated) {
		return true
	}

	return false
}

// SetDockerContainerCreated gets a reference to the given string and assigns it to the DockerContainerCreated field.
func (o *ReportMetadata) SetDockerContainerCreated(v string) {
	o.DockerContainerCreated = &v
}

// GetDockerContainerIps returns the DockerContainerIps field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerIps() []string {
	if o == nil || IsNil(o.DockerContainerIps) {
		var ret []string
		return ret
	}
	return o.DockerContainerIps
}

// GetDockerContainerIpsOk returns a tuple with the DockerContainerIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.DockerContainerIps) {
		return nil, false
	}
	return o.DockerContainerIps, true
}

// HasDockerContainerIps returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerIps() bool {
	if o != nil && !IsNil(o.DockerContainerIps) {
		return true
	}

	return false
}

// SetDockerContainerIps gets a reference to the given []string and assigns it to the DockerContainerIps field.
func (o *ReportMetadata) SetDockerContainerIps(v []string) {
	o.DockerContainerIps = v
}

// GetDockerContainerName returns the DockerContainerName field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerName() string {
	if o == nil || IsNil(o.DockerContainerName) {
		var ret string
		return ret
	}
	return *o.DockerContainerName
}

// GetDockerContainerNameOk returns a tuple with the DockerContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerNameOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerName) {
		return nil, false
	}
	return o.DockerContainerName, true
}

// HasDockerContainerName returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerName() bool {
	if o != nil && !IsNil(o.DockerContainerName) {
		return true
	}

	return false
}

// SetDockerContainerName gets a reference to the given string and assigns it to the DockerContainerName field.
func (o *ReportMetadata) SetDockerContainerName(v string) {
	o.DockerContainerName = &v
}

// GetDockerContainerNetworkMode returns the DockerContainerNetworkMode field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerNetworkMode() string {
	if o == nil || IsNil(o.DockerContainerNetworkMode) {
		var ret string
		return ret
	}
	return *o.DockerContainerNetworkMode
}

// GetDockerContainerNetworkModeOk returns a tuple with the DockerContainerNetworkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerNetworkModeOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerNetworkMode) {
		return nil, false
	}
	return o.DockerContainerNetworkMode, true
}

// HasDockerContainerNetworkMode returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerNetworkMode() bool {
	if o != nil && !IsNil(o.DockerContainerNetworkMode) {
		return true
	}

	return false
}

// SetDockerContainerNetworkMode gets a reference to the given string and assigns it to the DockerContainerNetworkMode field.
func (o *ReportMetadata) SetDockerContainerNetworkMode(v string) {
	o.DockerContainerNetworkMode = &v
}

// GetDockerContainerNetworks returns the DockerContainerNetworks field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerNetworks() string {
	if o == nil || IsNil(o.DockerContainerNetworks) {
		var ret string
		return ret
	}
	return *o.DockerContainerNetworks
}

// GetDockerContainerNetworksOk returns a tuple with the DockerContainerNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerNetworksOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerNetworks) {
		return nil, false
	}
	return o.DockerContainerNetworks, true
}

// HasDockerContainerNetworks returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerNetworks() bool {
	if o != nil && !IsNil(o.DockerContainerNetworks) {
		return true
	}

	return false
}

// SetDockerContainerNetworks gets a reference to the given string and assigns it to the DockerContainerNetworks field.
func (o *ReportMetadata) SetDockerContainerNetworks(v string) {
	o.DockerContainerNetworks = &v
}

// GetDockerContainerPorts returns the DockerContainerPorts field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerPorts() string {
	if o == nil || IsNil(o.DockerContainerPorts) {
		var ret string
		return ret
	}
	return *o.DockerContainerPorts
}

// GetDockerContainerPortsOk returns a tuple with the DockerContainerPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerPortsOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerPorts) {
		return nil, false
	}
	return o.DockerContainerPorts, true
}

// HasDockerContainerPorts returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerPorts() bool {
	if o != nil && !IsNil(o.DockerContainerPorts) {
		return true
	}

	return false
}

// SetDockerContainerPorts gets a reference to the given string and assigns it to the DockerContainerPorts field.
func (o *ReportMetadata) SetDockerContainerPorts(v string) {
	o.DockerContainerPorts = &v
}

// GetDockerContainerState returns the DockerContainerState field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerState() string {
	if o == nil || IsNil(o.DockerContainerState) {
		var ret string
		return ret
	}
	return *o.DockerContainerState
}

// GetDockerContainerStateOk returns a tuple with the DockerContainerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerStateOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerState) {
		return nil, false
	}
	return o.DockerContainerState, true
}

// HasDockerContainerState returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerState() bool {
	if o != nil && !IsNil(o.DockerContainerState) {
		return true
	}

	return false
}

// SetDockerContainerState gets a reference to the given string and assigns it to the DockerContainerState field.
func (o *ReportMetadata) SetDockerContainerState(v string) {
	o.DockerContainerState = &v
}

// GetDockerContainerStateHuman returns the DockerContainerStateHuman field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerContainerStateHuman() string {
	if o == nil || IsNil(o.DockerContainerStateHuman) {
		var ret string
		return ret
	}
	return *o.DockerContainerStateHuman
}

// GetDockerContainerStateHumanOk returns a tuple with the DockerContainerStateHuman field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerContainerStateHumanOk() (*string, bool) {
	if o == nil || IsNil(o.DockerContainerStateHuman) {
		return nil, false
	}
	return o.DockerContainerStateHuman, true
}

// HasDockerContainerStateHuman returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerContainerStateHuman() bool {
	if o != nil && !IsNil(o.DockerContainerStateHuman) {
		return true
	}

	return false
}

// SetDockerContainerStateHuman gets a reference to the given string and assigns it to the DockerContainerStateHuman field.
func (o *ReportMetadata) SetDockerContainerStateHuman(v string) {
	o.DockerContainerStateHuman = &v
}

// GetDockerEnv returns the DockerEnv field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerEnv() string {
	if o == nil || IsNil(o.DockerEnv) {
		var ret string
		return ret
	}
	return *o.DockerEnv
}

// GetDockerEnvOk returns a tuple with the DockerEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerEnvOk() (*string, bool) {
	if o == nil || IsNil(o.DockerEnv) {
		return nil, false
	}
	return o.DockerEnv, true
}

// HasDockerEnv returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerEnv() bool {
	if o != nil && !IsNil(o.DockerEnv) {
		return true
	}

	return false
}

// SetDockerEnv gets a reference to the given string and assigns it to the DockerEnv field.
func (o *ReportMetadata) SetDockerEnv(v string) {
	o.DockerEnv = &v
}

// GetDockerImageCreatedAt returns the DockerImageCreatedAt field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageCreatedAt() string {
	if o == nil || IsNil(o.DockerImageCreatedAt) {
		var ret string
		return ret
	}
	return *o.DockerImageCreatedAt
}

// GetDockerImageCreatedAtOk returns a tuple with the DockerImageCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageCreatedAt) {
		return nil, false
	}
	return o.DockerImageCreatedAt, true
}

// HasDockerImageCreatedAt returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageCreatedAt() bool {
	if o != nil && !IsNil(o.DockerImageCreatedAt) {
		return true
	}

	return false
}

// SetDockerImageCreatedAt gets a reference to the given string and assigns it to the DockerImageCreatedAt field.
func (o *ReportMetadata) SetDockerImageCreatedAt(v string) {
	o.DockerImageCreatedAt = &v
}

// GetDockerImageId returns the DockerImageId field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageId() string {
	if o == nil || IsNil(o.DockerImageId) {
		var ret string
		return ret
	}
	return *o.DockerImageId
}

// GetDockerImageIdOk returns a tuple with the DockerImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageId) {
		return nil, false
	}
	return o.DockerImageId, true
}

// HasDockerImageId returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageId() bool {
	if o != nil && !IsNil(o.DockerImageId) {
		return true
	}

	return false
}

// SetDockerImageId gets a reference to the given string and assigns it to the DockerImageId field.
func (o *ReportMetadata) SetDockerImageId(v string) {
	o.DockerImageId = &v
}

// GetDockerImageName returns the DockerImageName field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageName() string {
	if o == nil || IsNil(o.DockerImageName) {
		var ret string
		return ret
	}
	return *o.DockerImageName
}

// GetDockerImageNameOk returns a tuple with the DockerImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageName) {
		return nil, false
	}
	return o.DockerImageName, true
}

// HasDockerImageName returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageName() bool {
	if o != nil && !IsNil(o.DockerImageName) {
		return true
	}

	return false
}

// SetDockerImageName gets a reference to the given string and assigns it to the DockerImageName field.
func (o *ReportMetadata) SetDockerImageName(v string) {
	o.DockerImageName = &v
}

// GetDockerImageNameWithTag returns the DockerImageNameWithTag field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageNameWithTag() string {
	if o == nil || IsNil(o.DockerImageNameWithTag) {
		var ret string
		return ret
	}
	return *o.DockerImageNameWithTag
}

// GetDockerImageNameWithTagOk returns a tuple with the DockerImageNameWithTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageNameWithTagOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageNameWithTag) {
		return nil, false
	}
	return o.DockerImageNameWithTag, true
}

// HasDockerImageNameWithTag returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageNameWithTag() bool {
	if o != nil && !IsNil(o.DockerImageNameWithTag) {
		return true
	}

	return false
}

// SetDockerImageNameWithTag gets a reference to the given string and assigns it to the DockerImageNameWithTag field.
func (o *ReportMetadata) SetDockerImageNameWithTag(v string) {
	o.DockerImageNameWithTag = &v
}

// GetDockerImageSize returns the DockerImageSize field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageSize() string {
	if o == nil || IsNil(o.DockerImageSize) {
		var ret string
		return ret
	}
	return *o.DockerImageSize
}

// GetDockerImageSizeOk returns a tuple with the DockerImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageSize) {
		return nil, false
	}
	return o.DockerImageSize, true
}

// HasDockerImageSize returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageSize() bool {
	if o != nil && !IsNil(o.DockerImageSize) {
		return true
	}

	return false
}

// SetDockerImageSize gets a reference to the given string and assigns it to the DockerImageSize field.
func (o *ReportMetadata) SetDockerImageSize(v string) {
	o.DockerImageSize = &v
}

// GetDockerImageTag returns the DockerImageTag field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageTag() string {
	if o == nil || IsNil(o.DockerImageTag) {
		var ret string
		return ret
	}
	return *o.DockerImageTag
}

// GetDockerImageTagOk returns a tuple with the DockerImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageTag) {
		return nil, false
	}
	return o.DockerImageTag, true
}

// HasDockerImageTag returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageTag() bool {
	if o != nil && !IsNil(o.DockerImageTag) {
		return true
	}

	return false
}

// SetDockerImageTag gets a reference to the given string and assigns it to the DockerImageTag field.
func (o *ReportMetadata) SetDockerImageTag(v string) {
	o.DockerImageTag = &v
}

// GetDockerImageVirtualSize returns the DockerImageVirtualSize field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerImageVirtualSize() string {
	if o == nil || IsNil(o.DockerImageVirtualSize) {
		var ret string
		return ret
	}
	return *o.DockerImageVirtualSize
}

// GetDockerImageVirtualSizeOk returns a tuple with the DockerImageVirtualSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerImageVirtualSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DockerImageVirtualSize) {
		return nil, false
	}
	return o.DockerImageVirtualSize, true
}

// HasDockerImageVirtualSize returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerImageVirtualSize() bool {
	if o != nil && !IsNil(o.DockerImageVirtualSize) {
		return true
	}

	return false
}

// SetDockerImageVirtualSize gets a reference to the given string and assigns it to the DockerImageVirtualSize field.
func (o *ReportMetadata) SetDockerImageVirtualSize(v string) {
	o.DockerImageVirtualSize = &v
}

// GetDockerLabel returns the DockerLabel field value if set, zero value otherwise.
func (o *ReportMetadata) GetDockerLabel() string {
	if o == nil || IsNil(o.DockerLabel) {
		var ret string
		return ret
	}
	return *o.DockerLabel
}

// GetDockerLabelOk returns a tuple with the DockerLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetDockerLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DockerLabel) {
		return nil, false
	}
	return o.DockerLabel, true
}

// HasDockerLabel returns a boolean if a field has been set.
func (o *ReportMetadata) HasDockerLabel() bool {
	if o != nil && !IsNil(o.DockerLabel) {
		return true
	}

	return false
}

// SetDockerLabel gets a reference to the given string and assigns it to the DockerLabel field.
func (o *ReportMetadata) SetDockerLabel(v string) {
	o.DockerLabel = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ReportMetadata) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ReportMetadata) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ReportMetadata) SetHostName(v string) {
	o.HostName = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *ReportMetadata) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *ReportMetadata) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *ReportMetadata) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *ReportMetadata) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ReportMetadata) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *ReportMetadata) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInterfaceIpMap returns the InterfaceIpMap field value if set, zero value otherwise.
func (o *ReportMetadata) GetInterfaceIpMap() string {
	if o == nil || IsNil(o.InterfaceIpMap) {
		var ret string
		return ret
	}
	return *o.InterfaceIpMap
}

// GetInterfaceIpMapOk returns a tuple with the InterfaceIpMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetInterfaceIpMapOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceIpMap) {
		return nil, false
	}
	return o.InterfaceIpMap, true
}

// HasInterfaceIpMap returns a boolean if a field has been set.
func (o *ReportMetadata) HasInterfaceIpMap() bool {
	if o != nil && !IsNil(o.InterfaceIpMap) {
		return true
	}

	return false
}

// SetInterfaceIpMap gets a reference to the given string and assigns it to the InterfaceIpMap field.
func (o *ReportMetadata) SetInterfaceIpMap(v string) {
	o.InterfaceIpMap = &v
}

// GetInterfaceIps returns the InterfaceIps field value if set, zero value otherwise.
func (o *ReportMetadata) GetInterfaceIps() []string {
	if o == nil || IsNil(o.InterfaceIps) {
		var ret []string
		return ret
	}
	return o.InterfaceIps
}

// GetInterfaceIpsOk returns a tuple with the InterfaceIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetInterfaceIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.InterfaceIps) {
		return nil, false
	}
	return o.InterfaceIps, true
}

// HasInterfaceIps returns a boolean if a field has been set.
func (o *ReportMetadata) HasInterfaceIps() bool {
	if o != nil && !IsNil(o.InterfaceIps) {
		return true
	}

	return false
}

// SetInterfaceIps gets a reference to the given []string and assigns it to the InterfaceIps field.
func (o *ReportMetadata) SetInterfaceIps(v []string) {
	o.InterfaceIps = v
}

// GetInterfaceNames returns the InterfaceNames field value if set, zero value otherwise.
func (o *ReportMetadata) GetInterfaceNames() []string {
	if o == nil || IsNil(o.InterfaceNames) {
		var ret []string
		return ret
	}
	return o.InterfaceNames
}

// GetInterfaceNamesOk returns a tuple with the InterfaceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetInterfaceNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.InterfaceNames) {
		return nil, false
	}
	return o.InterfaceNames, true
}

// HasInterfaceNames returns a boolean if a field has been set.
func (o *ReportMetadata) HasInterfaceNames() bool {
	if o != nil && !IsNil(o.InterfaceNames) {
		return true
	}

	return false
}

// SetInterfaceNames gets a reference to the given []string and assigns it to the InterfaceNames field.
func (o *ReportMetadata) SetInterfaceNames(v []string) {
	o.InterfaceNames = v
}

// GetIsConsoleVm returns the IsConsoleVm field value if set, zero value otherwise.
func (o *ReportMetadata) GetIsConsoleVm() bool {
	if o == nil || IsNil(o.IsConsoleVm) {
		var ret bool
		return ret
	}
	return *o.IsConsoleVm
}

// GetIsConsoleVmOk returns a tuple with the IsConsoleVm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetIsConsoleVmOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConsoleVm) {
		return nil, false
	}
	return o.IsConsoleVm, true
}

// HasIsConsoleVm returns a boolean if a field has been set.
func (o *ReportMetadata) HasIsConsoleVm() bool {
	if o != nil && !IsNil(o.IsConsoleVm) {
		return true
	}

	return false
}

// SetIsConsoleVm gets a reference to the given bool and assigns it to the IsConsoleVm field.
func (o *ReportMetadata) SetIsConsoleVm(v bool) {
	o.IsConsoleVm = &v
}

// GetKernelId returns the KernelId field value if set, zero value otherwise.
func (o *ReportMetadata) GetKernelId() string {
	if o == nil || IsNil(o.KernelId) {
		var ret string
		return ret
	}
	return *o.KernelId
}

// GetKernelIdOk returns a tuple with the KernelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKernelIdOk() (*string, bool) {
	if o == nil || IsNil(o.KernelId) {
		return nil, false
	}
	return o.KernelId, true
}

// HasKernelId returns a boolean if a field has been set.
func (o *ReportMetadata) HasKernelId() bool {
	if o != nil && !IsNil(o.KernelId) {
		return true
	}

	return false
}

// SetKernelId gets a reference to the given string and assigns it to the KernelId field.
func (o *ReportMetadata) SetKernelId(v string) {
	o.KernelId = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *ReportMetadata) GetKernelVersion() string {
	if o == nil || IsNil(o.KernelVersion) {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKernelVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KernelVersion) {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *ReportMetadata) HasKernelVersion() bool {
	if o != nil && !IsNil(o.KernelVersion) {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *ReportMetadata) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetKubernetesClusterId returns the KubernetesClusterId field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesClusterId() string {
	if o == nil || IsNil(o.KubernetesClusterId) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterId
}

// GetKubernetesClusterIdOk returns a tuple with the KubernetesClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesClusterId) {
		return nil, false
	}
	return o.KubernetesClusterId, true
}

// HasKubernetesClusterId returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesClusterId() bool {
	if o != nil && !IsNil(o.KubernetesClusterId) {
		return true
	}

	return false
}

// SetKubernetesClusterId gets a reference to the given string and assigns it to the KubernetesClusterId field.
func (o *ReportMetadata) SetKubernetesClusterId(v string) {
	o.KubernetesClusterId = &v
}

// GetKubernetesClusterName returns the KubernetesClusterName field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesClusterName() string {
	if o == nil || IsNil(o.KubernetesClusterName) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesClusterName) {
		return nil, false
	}
	return o.KubernetesClusterName, true
}

// HasKubernetesClusterName returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesClusterName() bool {
	if o != nil && !IsNil(o.KubernetesClusterName) {
		return true
	}

	return false
}

// SetKubernetesClusterName gets a reference to the given string and assigns it to the KubernetesClusterName field.
func (o *ReportMetadata) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = &v
}

// GetKubernetesCreated returns the KubernetesCreated field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesCreated() string {
	if o == nil || IsNil(o.KubernetesCreated) {
		var ret string
		return ret
	}
	return *o.KubernetesCreated
}

// GetKubernetesCreatedOk returns a tuple with the KubernetesCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesCreated) {
		return nil, false
	}
	return o.KubernetesCreated, true
}

// HasKubernetesCreated returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesCreated() bool {
	if o != nil && !IsNil(o.KubernetesCreated) {
		return true
	}

	return false
}

// SetKubernetesCreated gets a reference to the given string and assigns it to the KubernetesCreated field.
func (o *ReportMetadata) SetKubernetesCreated(v string) {
	o.KubernetesCreated = &v
}

// GetKubernetesIngressIp returns the KubernetesIngressIp field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesIngressIp() []string {
	if o == nil || IsNil(o.KubernetesIngressIp) {
		var ret []string
		return ret
	}
	return o.KubernetesIngressIp
}

// GetKubernetesIngressIpOk returns a tuple with the KubernetesIngressIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesIngressIpOk() ([]string, bool) {
	if o == nil || IsNil(o.KubernetesIngressIp) {
		return nil, false
	}
	return o.KubernetesIngressIp, true
}

// HasKubernetesIngressIp returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesIngressIp() bool {
	if o != nil && !IsNil(o.KubernetesIngressIp) {
		return true
	}

	return false
}

// SetKubernetesIngressIp gets a reference to the given []string and assigns it to the KubernetesIngressIp field.
func (o *ReportMetadata) SetKubernetesIngressIp(v []string) {
	o.KubernetesIngressIp = v
}

// GetKubernetesIp returns the KubernetesIp field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesIp() string {
	if o == nil || IsNil(o.KubernetesIp) {
		var ret string
		return ret
	}
	return *o.KubernetesIp
}

// GetKubernetesIpOk returns a tuple with the KubernetesIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesIpOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesIp) {
		return nil, false
	}
	return o.KubernetesIp, true
}

// HasKubernetesIp returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesIp() bool {
	if o != nil && !IsNil(o.KubernetesIp) {
		return true
	}

	return false
}

// SetKubernetesIp gets a reference to the given string and assigns it to the KubernetesIp field.
func (o *ReportMetadata) SetKubernetesIp(v string) {
	o.KubernetesIp = &v
}

// GetKubernetesIsInHostNetwork returns the KubernetesIsInHostNetwork field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesIsInHostNetwork() bool {
	if o == nil || IsNil(o.KubernetesIsInHostNetwork) {
		var ret bool
		return ret
	}
	return *o.KubernetesIsInHostNetwork
}

// GetKubernetesIsInHostNetworkOk returns a tuple with the KubernetesIsInHostNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesIsInHostNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.KubernetesIsInHostNetwork) {
		return nil, false
	}
	return o.KubernetesIsInHostNetwork, true
}

// HasKubernetesIsInHostNetwork returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesIsInHostNetwork() bool {
	if o != nil && !IsNil(o.KubernetesIsInHostNetwork) {
		return true
	}

	return false
}

// SetKubernetesIsInHostNetwork gets a reference to the given bool and assigns it to the KubernetesIsInHostNetwork field.
func (o *ReportMetadata) SetKubernetesIsInHostNetwork(v bool) {
	o.KubernetesIsInHostNetwork = &v
}

// GetKubernetesLabels returns the KubernetesLabels field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesLabels() string {
	if o == nil || IsNil(o.KubernetesLabels) {
		var ret string
		return ret
	}
	return *o.KubernetesLabels
}

// GetKubernetesLabelsOk returns a tuple with the KubernetesLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesLabelsOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesLabels) {
		return nil, false
	}
	return o.KubernetesLabels, true
}

// HasKubernetesLabels returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesLabels() bool {
	if o != nil && !IsNil(o.KubernetesLabels) {
		return true
	}

	return false
}

// SetKubernetesLabels gets a reference to the given string and assigns it to the KubernetesLabels field.
func (o *ReportMetadata) SetKubernetesLabels(v string) {
	o.KubernetesLabels = &v
}

// GetKubernetesNamespace returns the KubernetesNamespace field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesNamespace() string {
	if o == nil || IsNil(o.KubernetesNamespace) {
		var ret string
		return ret
	}
	return *o.KubernetesNamespace
}

// GetKubernetesNamespaceOk returns a tuple with the KubernetesNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesNamespace) {
		return nil, false
	}
	return o.KubernetesNamespace, true
}

// HasKubernetesNamespace returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesNamespace() bool {
	if o != nil && !IsNil(o.KubernetesNamespace) {
		return true
	}

	return false
}

// SetKubernetesNamespace gets a reference to the given string and assigns it to the KubernetesNamespace field.
func (o *ReportMetadata) SetKubernetesNamespace(v string) {
	o.KubernetesNamespace = &v
}

// GetKubernetesPorts returns the KubernetesPorts field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesPorts() []string {
	if o == nil || IsNil(o.KubernetesPorts) {
		var ret []string
		return ret
	}
	return o.KubernetesPorts
}

// GetKubernetesPortsOk returns a tuple with the KubernetesPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesPortsOk() ([]string, bool) {
	if o == nil || IsNil(o.KubernetesPorts) {
		return nil, false
	}
	return o.KubernetesPorts, true
}

// HasKubernetesPorts returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesPorts() bool {
	if o != nil && !IsNil(o.KubernetesPorts) {
		return true
	}

	return false
}

// SetKubernetesPorts gets a reference to the given []string and assigns it to the KubernetesPorts field.
func (o *ReportMetadata) SetKubernetesPorts(v []string) {
	o.KubernetesPorts = v
}

// GetKubernetesPublicIp returns the KubernetesPublicIp field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesPublicIp() string {
	if o == nil || IsNil(o.KubernetesPublicIp) {
		var ret string
		return ret
	}
	return *o.KubernetesPublicIp
}

// GetKubernetesPublicIpOk returns a tuple with the KubernetesPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesPublicIp) {
		return nil, false
	}
	return o.KubernetesPublicIp, true
}

// HasKubernetesPublicIp returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesPublicIp() bool {
	if o != nil && !IsNil(o.KubernetesPublicIp) {
		return true
	}

	return false
}

// SetKubernetesPublicIp gets a reference to the given string and assigns it to the KubernetesPublicIp field.
func (o *ReportMetadata) SetKubernetesPublicIp(v string) {
	o.KubernetesPublicIp = &v
}

// GetKubernetesState returns the KubernetesState field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesState() string {
	if o == nil || IsNil(o.KubernetesState) {
		var ret string
		return ret
	}
	return *o.KubernetesState
}

// GetKubernetesStateOk returns a tuple with the KubernetesState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesStateOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesState) {
		return nil, false
	}
	return o.KubernetesState, true
}

// HasKubernetesState returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesState() bool {
	if o != nil && !IsNil(o.KubernetesState) {
		return true
	}

	return false
}

// SetKubernetesState gets a reference to the given string and assigns it to the KubernetesState field.
func (o *ReportMetadata) SetKubernetesState(v string) {
	o.KubernetesState = &v
}

// GetKubernetesType returns the KubernetesType field value if set, zero value otherwise.
func (o *ReportMetadata) GetKubernetesType() string {
	if o == nil || IsNil(o.KubernetesType) {
		var ret string
		return ret
	}
	return *o.KubernetesType
}

// GetKubernetesTypeOk returns a tuple with the KubernetesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetKubernetesTypeOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesType) {
		return nil, false
	}
	return o.KubernetesType, true
}

// HasKubernetesType returns a boolean if a field has been set.
func (o *ReportMetadata) HasKubernetesType() bool {
	if o != nil && !IsNil(o.KubernetesType) {
		return true
	}

	return false
}

// SetKubernetesType gets a reference to the given string and assigns it to the KubernetesType field.
func (o *ReportMetadata) SetKubernetesType(v string) {
	o.KubernetesType = &v
}

// GetLocalCidr returns the LocalCidr field value if set, zero value otherwise.
func (o *ReportMetadata) GetLocalCidr() []string {
	if o == nil || IsNil(o.LocalCidr) {
		var ret []string
		return ret
	}
	return o.LocalCidr
}

// GetLocalCidrOk returns a tuple with the LocalCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetLocalCidrOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalCidr) {
		return nil, false
	}
	return o.LocalCidr, true
}

// HasLocalCidr returns a boolean if a field has been set.
func (o *ReportMetadata) HasLocalCidr() bool {
	if o != nil && !IsNil(o.LocalCidr) {
		return true
	}

	return false
}

// SetLocalCidr gets a reference to the given []string and assigns it to the LocalCidr field.
func (o *ReportMetadata) SetLocalCidr(v []string) {
	o.LocalCidr = v
}

// GetLocalNetworks returns the LocalNetworks field value if set, zero value otherwise.
func (o *ReportMetadata) GetLocalNetworks() []string {
	if o == nil || IsNil(o.LocalNetworks) {
		var ret []string
		return ret
	}
	return o.LocalNetworks
}

// GetLocalNetworksOk returns a tuple with the LocalNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetLocalNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalNetworks) {
		return nil, false
	}
	return o.LocalNetworks, true
}

// HasLocalNetworks returns a boolean if a field has been set.
func (o *ReportMetadata) HasLocalNetworks() bool {
	if o != nil && !IsNil(o.LocalNetworks) {
		return true
	}

	return false
}

// SetLocalNetworks gets a reference to the given []string and assigns it to the LocalNetworks field.
func (o *ReportMetadata) SetLocalNetworks(v []string) {
	o.LocalNetworks = v
}

// GetMemoryMax returns the MemoryMax field value if set, zero value otherwise.
func (o *ReportMetadata) GetMemoryMax() int32 {
	if o == nil || IsNil(o.MemoryMax) {
		var ret int32
		return ret
	}
	return *o.MemoryMax
}

// GetMemoryMaxOk returns a tuple with the MemoryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetMemoryMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMax) {
		return nil, false
	}
	return o.MemoryMax, true
}

// HasMemoryMax returns a boolean if a field has been set.
func (o *ReportMetadata) HasMemoryMax() bool {
	if o != nil && !IsNil(o.MemoryMax) {
		return true
	}

	return false
}

// SetMemoryMax gets a reference to the given int32 and assigns it to the MemoryMax field.
func (o *ReportMetadata) SetMemoryMax(v int32) {
	o.MemoryMax = &v
}

// GetMemoryUsage returns the MemoryUsage field value if set, zero value otherwise.
func (o *ReportMetadata) GetMemoryUsage() int32 {
	if o == nil || IsNil(o.MemoryUsage) {
		var ret int32
		return ret
	}
	return *o.MemoryUsage
}

// GetMemoryUsageOk returns a tuple with the MemoryUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetMemoryUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryUsage) {
		return nil, false
	}
	return o.MemoryUsage, true
}

// HasMemoryUsage returns a boolean if a field has been set.
func (o *ReportMetadata) HasMemoryUsage() bool {
	if o != nil && !IsNil(o.MemoryUsage) {
		return true
	}

	return false
}

// SetMemoryUsage gets a reference to the given int32 and assigns it to the MemoryUsage field.
func (o *ReportMetadata) SetMemoryUsage(v int32) {
	o.MemoryUsage = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *ReportMetadata) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *ReportMetadata) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *ReportMetadata) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *ReportMetadata) GetNodeName() string {
	if o == nil || IsNil(o.NodeName) {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.NodeName) {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *ReportMetadata) HasNodeName() bool {
	if o != nil && !IsNil(o.NodeName) {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *ReportMetadata) SetNodeName(v string) {
	o.NodeName = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *ReportMetadata) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *ReportMetadata) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *ReportMetadata) SetNodeType(v string) {
	o.NodeType = &v
}

// GetOpenFiles returns the OpenFiles field value if set, zero value otherwise.
func (o *ReportMetadata) GetOpenFiles() []string {
	if o == nil || IsNil(o.OpenFiles) {
		var ret []string
		return ret
	}
	return o.OpenFiles
}

// GetOpenFilesOk returns a tuple with the OpenFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetOpenFilesOk() ([]string, bool) {
	if o == nil || IsNil(o.OpenFiles) {
		return nil, false
	}
	return o.OpenFiles, true
}

// HasOpenFiles returns a boolean if a field has been set.
func (o *ReportMetadata) HasOpenFiles() bool {
	if o != nil && !IsNil(o.OpenFiles) {
		return true
	}

	return false
}

// SetOpenFiles gets a reference to the given []string and assigns it to the OpenFiles field.
func (o *ReportMetadata) SetOpenFiles(v []string) {
	o.OpenFiles = v
}

// GetOpenFilesCount returns the OpenFilesCount field value if set, zero value otherwise.
func (o *ReportMetadata) GetOpenFilesCount() int32 {
	if o == nil || IsNil(o.OpenFilesCount) {
		var ret int32
		return ret
	}
	return *o.OpenFilesCount
}

// GetOpenFilesCountOk returns a tuple with the OpenFilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetOpenFilesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenFilesCount) {
		return nil, false
	}
	return o.OpenFilesCount, true
}

// HasOpenFilesCount returns a boolean if a field has been set.
func (o *ReportMetadata) HasOpenFilesCount() bool {
	if o != nil && !IsNil(o.OpenFilesCount) {
		return true
	}

	return false
}

// SetOpenFilesCount gets a reference to the given int32 and assigns it to the OpenFilesCount field.
func (o *ReportMetadata) SetOpenFilesCount(v int32) {
	o.OpenFilesCount = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *ReportMetadata) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *ReportMetadata) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *ReportMetadata) SetOs(v string) {
	o.Os = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *ReportMetadata) GetPid() int32 {
	if o == nil || IsNil(o.Pid) {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *ReportMetadata) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *ReportMetadata) SetPid(v int32) {
	o.Pid = &v
}

// GetPodId returns the PodId field value if set, zero value otherwise.
func (o *ReportMetadata) GetPodId() string {
	if o == nil || IsNil(o.PodId) {
		var ret string
		return ret
	}
	return *o.PodId
}

// GetPodIdOk returns a tuple with the PodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PodId) {
		return nil, false
	}
	return o.PodId, true
}

// HasPodId returns a boolean if a field has been set.
func (o *ReportMetadata) HasPodId() bool {
	if o != nil && !IsNil(o.PodId) {
		return true
	}

	return false
}

// SetPodId gets a reference to the given string and assigns it to the PodId field.
func (o *ReportMetadata) SetPodId(v string) {
	o.PodId = &v
}

// GetPodName returns the PodName field value if set, zero value otherwise.
func (o *ReportMetadata) GetPodName() string {
	if o == nil || IsNil(o.PodName) {
		var ret string
		return ret
	}
	return *o.PodName
}

// GetPodNameOk returns a tuple with the PodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPodNameOk() (*string, bool) {
	if o == nil || IsNil(o.PodName) {
		return nil, false
	}
	return o.PodName, true
}

// HasPodName returns a boolean if a field has been set.
func (o *ReportMetadata) HasPodName() bool {
	if o != nil && !IsNil(o.PodName) {
		return true
	}

	return false
}

// SetPodName gets a reference to the given string and assigns it to the PodName field.
func (o *ReportMetadata) SetPodName(v string) {
	o.PodName = &v
}

// GetPpid returns the Ppid field value if set, zero value otherwise.
func (o *ReportMetadata) GetPpid() int32 {
	if o == nil || IsNil(o.Ppid) {
		var ret int32
		return ret
	}
	return *o.Ppid
}

// GetPpidOk returns a tuple with the Ppid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPpidOk() (*int32, bool) {
	if o == nil || IsNil(o.Ppid) {
		return nil, false
	}
	return o.Ppid, true
}

// HasPpid returns a boolean if a field has been set.
func (o *ReportMetadata) HasPpid() bool {
	if o != nil && !IsNil(o.Ppid) {
		return true
	}

	return false
}

// SetPpid gets a reference to the given int32 and assigns it to the Ppid field.
func (o *ReportMetadata) SetPpid(v int32) {
	o.Ppid = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *ReportMetadata) GetPrivateIp() []string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret []string
		return ret
	}
	return o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPrivateIpOk() ([]string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *ReportMetadata) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given []string and assigns it to the PrivateIp field.
func (o *ReportMetadata) SetPrivateIp(v []string) {
	o.PrivateIp = v
}

// GetPseudo returns the Pseudo field value if set, zero value otherwise.
func (o *ReportMetadata) GetPseudo() bool {
	if o == nil || IsNil(o.Pseudo) {
		var ret bool
		return ret
	}
	return *o.Pseudo
}

// GetPseudoOk returns a tuple with the Pseudo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPseudoOk() (*bool, bool) {
	if o == nil || IsNil(o.Pseudo) {
		return nil, false
	}
	return o.Pseudo, true
}

// HasPseudo returns a boolean if a field has been set.
func (o *ReportMetadata) HasPseudo() bool {
	if o != nil && !IsNil(o.Pseudo) {
		return true
	}

	return false
}

// SetPseudo gets a reference to the given bool and assigns it to the Pseudo field.
func (o *ReportMetadata) SetPseudo(v bool) {
	o.Pseudo = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *ReportMetadata) GetPublicIp() []string {
	if o == nil || IsNil(o.PublicIp) {
		var ret []string
		return ret
	}
	return o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetPublicIpOk() ([]string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ReportMetadata) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given []string and assigns it to the PublicIp field.
func (o *ReportMetadata) SetPublicIp(v []string) {
	o.PublicIp = v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *ReportMetadata) GetResourceGroup() string {
	if o == nil || IsNil(o.ResourceGroup) {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroup) {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *ReportMetadata) HasResourceGroup() bool {
	if o != nil && !IsNil(o.ResourceGroup) {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *ReportMetadata) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ReportMetadata) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ReportMetadata) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ReportMetadata) SetShortName(v string) {
	o.ShortName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ReportMetadata) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReportMetadata) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ReportMetadata) SetTags(v []string) {
	o.Tags = v
}

// GetThreads returns the Threads field value if set, zero value otherwise.
func (o *ReportMetadata) GetThreads() int32 {
	if o == nil || IsNil(o.Threads) {
		var ret int32
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetThreadsOk() (*int32, bool) {
	if o == nil || IsNil(o.Threads) {
		return nil, false
	}
	return o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *ReportMetadata) HasThreads() bool {
	if o != nil && !IsNil(o.Threads) {
		return true
	}

	return false
}

// SetThreads gets a reference to the given int32 and assigns it to the Threads field.
func (o *ReportMetadata) SetThreads(v int32) {
	o.Threads = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ReportMetadata) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ReportMetadata) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ReportMetadata) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *ReportMetadata) GetUptime() int32 {
	if o == nil || IsNil(o.Uptime) {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetUptimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *ReportMetadata) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *ReportMetadata) SetUptime(v int32) {
	o.Uptime = &v
}

// GetUserDefinedTags returns the UserDefinedTags field value if set, zero value otherwise.
func (o *ReportMetadata) GetUserDefinedTags() []string {
	if o == nil || IsNil(o.UserDefinedTags) {
		var ret []string
		return ret
	}
	return o.UserDefinedTags
}

// GetUserDefinedTagsOk returns a tuple with the UserDefinedTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetUserDefinedTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserDefinedTags) {
		return nil, false
	}
	return o.UserDefinedTags, true
}

// HasUserDefinedTags returns a boolean if a field has been set.
func (o *ReportMetadata) HasUserDefinedTags() bool {
	if o != nil && !IsNil(o.UserDefinedTags) {
		return true
	}

	return false
}

// SetUserDefinedTags gets a reference to the given []string and assigns it to the UserDefinedTags field.
func (o *ReportMetadata) SetUserDefinedTags(v []string) {
	o.UserDefinedTags = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ReportMetadata) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportMetadata) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ReportMetadata) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ReportMetadata) SetVersion(v string) {
	o.Version = &v
}

func (o ReportMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentRunning) {
		toSerialize["agent_running"] = o.AgentRunning
	}
	if !IsNil(o.AvailabilityZone) {
		toSerialize["availability_zone"] = o.AvailabilityZone
	}
	if !IsNil(o.CloudAccountId) {
		toSerialize["cloud_account_id"] = o.CloudAccountId
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if !IsNil(o.CloudRegion) {
		toSerialize["cloud_region"] = o.CloudRegion
	}
	if !IsNil(o.Cmdline) {
		toSerialize["cmdline"] = o.Cmdline
	}
	if !IsNil(o.ConnectionCount) {
		toSerialize["connection_count"] = o.ConnectionCount
	}
	if !IsNil(o.CopyOf) {
		toSerialize["copy_of"] = o.CopyOf
	}
	if !IsNil(o.CpuMax) {
		toSerialize["cpu_max"] = o.CpuMax
	}
	if !IsNil(o.CpuUsage) {
		toSerialize["cpu_usage"] = o.CpuUsage
	}
	if !IsNil(o.DockerContainerCommand) {
		toSerialize["docker_container_command"] = o.DockerContainerCommand
	}
	if !IsNil(o.DockerContainerCreated) {
		toSerialize["docker_container_created"] = o.DockerContainerCreated
	}
	if !IsNil(o.DockerContainerIps) {
		toSerialize["docker_container_ips"] = o.DockerContainerIps
	}
	if !IsNil(o.DockerContainerName) {
		toSerialize["docker_container_name"] = o.DockerContainerName
	}
	if !IsNil(o.DockerContainerNetworkMode) {
		toSerialize["docker_container_network_mode"] = o.DockerContainerNetworkMode
	}
	if !IsNil(o.DockerContainerNetworks) {
		toSerialize["docker_container_networks"] = o.DockerContainerNetworks
	}
	if !IsNil(o.DockerContainerPorts) {
		toSerialize["docker_container_ports"] = o.DockerContainerPorts
	}
	if !IsNil(o.DockerContainerState) {
		toSerialize["docker_container_state"] = o.DockerContainerState
	}
	if !IsNil(o.DockerContainerStateHuman) {
		toSerialize["docker_container_state_human"] = o.DockerContainerStateHuman
	}
	if !IsNil(o.DockerEnv) {
		toSerialize["docker_env"] = o.DockerEnv
	}
	if !IsNil(o.DockerImageCreatedAt) {
		toSerialize["docker_image_created_at"] = o.DockerImageCreatedAt
	}
	if !IsNil(o.DockerImageId) {
		toSerialize["docker_image_id"] = o.DockerImageId
	}
	if !IsNil(o.DockerImageName) {
		toSerialize["docker_image_name"] = o.DockerImageName
	}
	if !IsNil(o.DockerImageNameWithTag) {
		toSerialize["docker_image_name_with_tag"] = o.DockerImageNameWithTag
	}
	if !IsNil(o.DockerImageSize) {
		toSerialize["docker_image_size"] = o.DockerImageSize
	}
	if !IsNil(o.DockerImageTag) {
		toSerialize["docker_image_tag"] = o.DockerImageTag
	}
	if !IsNil(o.DockerImageVirtualSize) {
		toSerialize["docker_image_virtual_size"] = o.DockerImageVirtualSize
	}
	if !IsNil(o.DockerLabel) {
		toSerialize["docker_label"] = o.DockerLabel
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instance_id"] = o.InstanceId
	}
	if !IsNil(o.InstanceType) {
		toSerialize["instance_type"] = o.InstanceType
	}
	if !IsNil(o.InterfaceIpMap) {
		toSerialize["interface_ip_map"] = o.InterfaceIpMap
	}
	if !IsNil(o.InterfaceIps) {
		toSerialize["interface_ips"] = o.InterfaceIps
	}
	if !IsNil(o.InterfaceNames) {
		toSerialize["interface_names"] = o.InterfaceNames
	}
	if !IsNil(o.IsConsoleVm) {
		toSerialize["is_console_vm"] = o.IsConsoleVm
	}
	if !IsNil(o.KernelId) {
		toSerialize["kernel_id"] = o.KernelId
	}
	if !IsNil(o.KernelVersion) {
		toSerialize["kernel_version"] = o.KernelVersion
	}
	if !IsNil(o.KubernetesClusterId) {
		toSerialize["kubernetes_cluster_id"] = o.KubernetesClusterId
	}
	if !IsNil(o.KubernetesClusterName) {
		toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	}
	if !IsNil(o.KubernetesCreated) {
		toSerialize["kubernetes_created"] = o.KubernetesCreated
	}
	if !IsNil(o.KubernetesIngressIp) {
		toSerialize["kubernetes_ingress_ip"] = o.KubernetesIngressIp
	}
	if !IsNil(o.KubernetesIp) {
		toSerialize["kubernetes_ip"] = o.KubernetesIp
	}
	if !IsNil(o.KubernetesIsInHostNetwork) {
		toSerialize["kubernetes_is_in_host_network"] = o.KubernetesIsInHostNetwork
	}
	if !IsNil(o.KubernetesLabels) {
		toSerialize["kubernetes_labels"] = o.KubernetesLabels
	}
	if !IsNil(o.KubernetesNamespace) {
		toSerialize["kubernetes_namespace"] = o.KubernetesNamespace
	}
	if !IsNil(o.KubernetesPorts) {
		toSerialize["kubernetes_ports"] = o.KubernetesPorts
	}
	if !IsNil(o.KubernetesPublicIp) {
		toSerialize["kubernetes_public_ip"] = o.KubernetesPublicIp
	}
	if !IsNil(o.KubernetesState) {
		toSerialize["kubernetes_state"] = o.KubernetesState
	}
	if !IsNil(o.KubernetesType) {
		toSerialize["kubernetes_type"] = o.KubernetesType
	}
	if !IsNil(o.LocalCidr) {
		toSerialize["local_cidr"] = o.LocalCidr
	}
	if !IsNil(o.LocalNetworks) {
		toSerialize["local_networks"] = o.LocalNetworks
	}
	if !IsNil(o.MemoryMax) {
		toSerialize["memory_max"] = o.MemoryMax
	}
	if !IsNil(o.MemoryUsage) {
		toSerialize["memory_usage"] = o.MemoryUsage
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.NodeName) {
		toSerialize["node_name"] = o.NodeName
	}
	if !IsNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !IsNil(o.OpenFiles) {
		toSerialize["open_files"] = o.OpenFiles
	}
	if !IsNil(o.OpenFilesCount) {
		toSerialize["open_files_count"] = o.OpenFilesCount
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.PodId) {
		toSerialize["pod_id"] = o.PodId
	}
	if !IsNil(o.PodName) {
		toSerialize["pod_name"] = o.PodName
	}
	if !IsNil(o.Ppid) {
		toSerialize["ppid"] = o.Ppid
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.Pseudo) {
		toSerialize["pseudo"] = o.Pseudo
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.ResourceGroup) {
		toSerialize["resource_group"] = o.ResourceGroup
	}
	if !IsNil(o.ShortName) {
		toSerialize["short_name"] = o.ShortName
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Threads) {
		toSerialize["threads"] = o.Threads
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.UserDefinedTags) {
		toSerialize["user_defined_tags"] = o.UserDefinedTags
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableReportMetadata struct {
	value *ReportMetadata
	isSet bool
}

func (v NullableReportMetadata) Get() *ReportMetadata {
	return v.value
}

func (v *NullableReportMetadata) Set(val *ReportMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableReportMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableReportMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportMetadata(val *ReportMetadata) *NullableReportMetadata {
	return &NullableReportMetadata{value: val, isSet: true}
}

func (v NullableReportMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


