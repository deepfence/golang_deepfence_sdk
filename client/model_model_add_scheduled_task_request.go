/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelAddScheduledTaskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAddScheduledTaskRequest{}

// ModelAddScheduledTaskRequest struct for ModelAddScheduledTaskRequest
type ModelAddScheduledTaskRequest struct {
	Action *string `json:"action,omitempty"`
	CronExpr *string `json:"cron_expr,omitempty"`
	Description *string `json:"description,omitempty"`
	Filters *string `json:"filters,omitempty"`
	NodeType *string `json:"node_type,omitempty"`
}

// NewModelAddScheduledTaskRequest instantiates a new ModelAddScheduledTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAddScheduledTaskRequest() *ModelAddScheduledTaskRequest {
	this := ModelAddScheduledTaskRequest{}
	return &this
}

// NewModelAddScheduledTaskRequestWithDefaults instantiates a new ModelAddScheduledTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAddScheduledTaskRequestWithDefaults() *ModelAddScheduledTaskRequest {
	this := ModelAddScheduledTaskRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ModelAddScheduledTaskRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAddScheduledTaskRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ModelAddScheduledTaskRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ModelAddScheduledTaskRequest) SetAction(v string) {
	o.Action = &v
}

// GetCronExpr returns the CronExpr field value if set, zero value otherwise.
func (o *ModelAddScheduledTaskRequest) GetCronExpr() string {
	if o == nil || IsNil(o.CronExpr) {
		var ret string
		return ret
	}
	return *o.CronExpr
}

// GetCronExprOk returns a tuple with the CronExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAddScheduledTaskRequest) GetCronExprOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpr) {
		return nil, false
	}
	return o.CronExpr, true
}

// HasCronExpr returns a boolean if a field has been set.
func (o *ModelAddScheduledTaskRequest) HasCronExpr() bool {
	if o != nil && !IsNil(o.CronExpr) {
		return true
	}

	return false
}

// SetCronExpr gets a reference to the given string and assigns it to the CronExpr field.
func (o *ModelAddScheduledTaskRequest) SetCronExpr(v string) {
	o.CronExpr = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelAddScheduledTaskRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAddScheduledTaskRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelAddScheduledTaskRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelAddScheduledTaskRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ModelAddScheduledTaskRequest) GetFilters() string {
	if o == nil || IsNil(o.Filters) {
		var ret string
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAddScheduledTaskRequest) GetFiltersOk() (*string, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ModelAddScheduledTaskRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given string and assigns it to the Filters field.
func (o *ModelAddScheduledTaskRequest) SetFilters(v string) {
	o.Filters = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *ModelAddScheduledTaskRequest) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAddScheduledTaskRequest) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *ModelAddScheduledTaskRequest) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *ModelAddScheduledTaskRequest) SetNodeType(v string) {
	o.NodeType = &v
}

func (o ModelAddScheduledTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAddScheduledTaskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.CronExpr) {
		toSerialize["cron_expr"] = o.CronExpr
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	return toSerialize, nil
}

type NullableModelAddScheduledTaskRequest struct {
	value *ModelAddScheduledTaskRequest
	isSet bool
}

func (v NullableModelAddScheduledTaskRequest) Get() *ModelAddScheduledTaskRequest {
	return v.value
}

func (v *NullableModelAddScheduledTaskRequest) Set(val *ModelAddScheduledTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAddScheduledTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAddScheduledTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAddScheduledTaskRequest(val *ModelAddScheduledTaskRequest) *NullableModelAddScheduledTaskRequest {
	return &NullableModelAddScheduledTaskRequest{value: val, isSet: true}
}

func (v NullableModelAddScheduledTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAddScheduledTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


